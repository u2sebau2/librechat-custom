{"version":3,"file":"index.es.js","sources":["../src/utils.ts","../src/types/assistants.ts","../src/feedback.ts","../src/schemas.ts","../src/types/files.ts","../src/models.ts","../src/file-config.ts","../src/types/agents.ts","../src/mcp.ts","../src/api-endpoints.ts","../src/config.ts","../src/types/runs.ts","../src/bedrock.ts","../src/parsers.ts","../src/azure.ts","../src/artifacts.ts","../src/messages.ts","../src/generate.ts","../src/ocr.ts","../src/permissions.ts","../src/roles.ts","../src/types/web.ts","../src/accessPermissions.ts","../src/keys.ts","../src/headers-helpers.ts","../src/request.ts","../src/data-service.ts","../src/actions.ts","../src/createPayload.ts","../src/parameterSettings.ts"],"sourcesContent":["export const envVarRegex = /^\\${(.+)}$/;\n\n/** Extracts the environment variable name from a template literal string */\nexport function extractVariableName(value: string): string | null {\n  if (!value) {\n    return null;\n  }\n\n  const match = value.trim().match(envVarRegex);\n  return match ? match[1] : null;\n}\n\n/** Extracts the value of an environment variable from a string. */\nexport function extractEnvVariable(value: string) {\n  if (!value) {\n    return value;\n  }\n\n  // Trim the input\n  const trimmed = value.trim();\n\n  // Special case: if it's just a single environment variable\n  const singleMatch = trimmed.match(envVarRegex);\n  if (singleMatch) {\n    const varName = singleMatch[1];\n    return process.env[varName] || trimmed;\n  }\n\n  // For multiple variables, process them using a regex loop\n  const regex = /\\${([^}]+)}/g;\n  let result = trimmed;\n\n  // First collect all matches and their positions\n  const matches = [];\n  let match;\n  while ((match = regex.exec(trimmed)) !== null) {\n    matches.push({\n      fullMatch: match[0],\n      varName: match[1],\n      index: match.index,\n    });\n  }\n\n  // Process matches in reverse order to avoid position shifts\n  for (let i = matches.length - 1; i >= 0; i--) {\n    const { fullMatch, varName, index } = matches[i];\n    const envValue = process.env[varName] || fullMatch;\n\n    // Replace at exact position\n    result = result.substring(0, index) + envValue + result.substring(index + fullMatch.length);\n  }\n\n  return result;\n}\n","import type { OpenAPIV3 } from 'openapi-types';\nimport type { AssistantsEndpoint, AgentProvider } from 'src/schemas';\nimport type { ContentTypes } from './runs';\nimport type { Agents } from './agents';\nimport type { TFile } from './files';\nimport { ArtifactModes } from 'src/artifacts';\n\nexport type Schema = OpenAPIV3.SchemaObject & { description?: string };\nexport type Reference = OpenAPIV3.ReferenceObject & { description?: string };\n\nexport type Metadata = {\n  avatar?: string;\n  author?: string;\n} & {\n  [key: string]: unknown;\n};\n\nexport enum Tools {\n  execute_code = 'execute_code',\n  code_interpreter = 'code_interpreter',\n  file_search = 'file_search',\n  web_search = 'web_search',\n  retrieval = 'retrieval',\n  function = 'function',\n  memory = 'memory',\n  ui_resources = 'ui_resources',\n}\n\nexport enum EToolResources {\n  code_interpreter = 'code_interpreter',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  image_edit = 'image_edit',\n  ocr = 'ocr',\n}\n\nexport type Tool = {\n  [type: string]: Tools;\n};\n\nexport type FunctionTool = {\n  type: Tools;\n  function?: {\n    description: string;\n    name: string;\n    parameters: Record<string, unknown>;\n    strict?: boolean;\n    additionalProperties?: boolean; // must be false if strict is true https://platform.openai.com/docs/guides/structured-outputs/some-type-specific-keywords-are-not-yet-supported\n  };\n};\n\n/**\n * A set of resources that are used by the assistant's tools. The resources are\n * specific to the type of tool. For example, the `code_interpreter` tool requires\n * a list of file IDs, while the `file_search` tool requires a list of vector store\n * IDs.\n */\nexport interface ToolResources {\n  code_interpreter?: CodeInterpreterResource;\n  file_search?: FileSearchResource;\n}\nexport interface CodeInterpreterResource {\n  /**\n   * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n   * available to the `code_interpreter`` tool. There can be a maximum of 20 files\n   * associated with the tool.\n   */\n  file_ids?: Array<string>;\n}\n\nexport interface FileSearchResource {\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * attached to this assistant. There can be a maximum of 1 vector store attached to\n   * the assistant.\n   */\n  vector_store_ids?: Array<string>;\n}\n\n/* Assistant types */\n\nexport type Assistant = {\n  id: string;\n  created_at: number;\n  description: string | null;\n  file_ids?: string[];\n  instructions: string | null;\n  conversation_starters?: string[];\n  metadata: Metadata | null;\n  model: string;\n  name: string | null;\n  object: string;\n  tools?: FunctionTool[];\n  tool_resources?: ToolResources;\n};\n\nexport type TAssistantsMap = Record<AssistantsEndpoint, Record<string, Assistant>>;\n\nexport type AssistantCreateParams = {\n  model: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[];\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  endpoint: AssistantsEndpoint;\n  version: number | string;\n  append_current_datetime?: boolean;\n};\n\nexport type AssistantUpdateParams = {\n  model?: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[] | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  endpoint: AssistantsEndpoint;\n  append_current_datetime?: boolean;\n};\n\nexport type AssistantListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListResponse = {\n  object: string;\n  data: Assistant[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type File = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n\n/* Agent types */\n\nexport type AgentParameterValue = number | string | null;\n\nexport type AgentModelParameters = {\n  model?: string;\n  temperature: AgentParameterValue;\n  maxContextTokens: AgentParameterValue;\n  max_context_tokens: AgentParameterValue;\n  max_output_tokens: AgentParameterValue;\n  top_p: AgentParameterValue;\n  frequency_penalty: AgentParameterValue;\n  presence_penalty: AgentParameterValue;\n};\n\nexport interface AgentBaseResource {\n  /**\n   * A list of file IDs made available to the tool.\n   */\n  file_ids?: Array<string>;\n  /**\n   * A list of files already fetched.\n   */\n  files?: Array<TFile>;\n}\n\nexport interface AgentToolResources {\n  [EToolResources.image_edit]?: AgentBaseResource;\n  [EToolResources.execute_code]?: ExecuteCodeResource;\n  [EToolResources.file_search]?: AgentFileResource;\n  [EToolResources.ocr]?: AgentBaseResource;\n}\n/**\n * A resource for the execute_code tool.\n * Contains file IDs made available to the tool (max 20 files) and already fetched files.\n */\nexport type ExecuteCodeResource = AgentBaseResource;\n\nexport interface AgentFileResource extends AgentBaseResource {\n  /**\n   * The ID of the vector store attached to this agent. There\n   * can be a maximum of 1 vector store attached to the agent.\n   */\n  vector_store_ids?: Array<string>;\n}\nexport type SupportContact = {\n  name?: string;\n  email?: string;\n};\n\nexport type Agent = {\n  _id?: string;\n  id: string;\n  name: string | null;\n  author?: string | null;\n  /** The original custom endpoint name, lowercased */\n  endpoint?: string | null;\n  authorName?: string | null;\n  description: string | null;\n  created_at: number;\n  avatar: AgentAvatar | null;\n  instructions: string | null;\n  additional_instructions?: string | null;\n  tools?: string[];\n  projectIds?: string[];\n  tool_kwargs?: Record<string, unknown>;\n  metadata?: Record<string, unknown>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n  conversation_starters?: string[];\n  /** @deprecated Use ACL permissions instead */\n  isCollaborative?: boolean;\n  tool_resources?: AgentToolResources;\n  agent_ids?: string[];\n  end_after_tools?: boolean;\n  hide_sequential_outputs?: boolean;\n  artifacts?: ArtifactModes;\n  recursion_limit?: number;\n  isPublic?: boolean;\n  version?: number;\n  category?: string;\n  support_contact?: SupportContact;\n};\n\nexport type TAgentsMap = Record<string, Agent | undefined>;\n\nexport type AgentCreateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n} & Pick<\n  Agent,\n  | 'agent_ids'\n  | 'end_after_tools'\n  | 'hide_sequential_outputs'\n  | 'artifacts'\n  | 'recursion_limit'\n  | 'category'\n  | 'support_contact'\n>;\n\nexport type AgentUpdateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  provider?: AgentProvider;\n  model?: string | null;\n  model_parameters?: AgentModelParameters;\n  projectIds?: string[];\n  removeProjectIds?: string[];\n  isCollaborative?: boolean;\n} & Pick<\n  Agent,\n  | 'agent_ids'\n  | 'end_after_tools'\n  | 'hide_sequential_outputs'\n  | 'artifacts'\n  | 'recursion_limit'\n  | 'category'\n  | 'support_contact'\n>;\n\nexport type AgentListParams = {\n  limit?: number;\n  requiredPermission: number;\n  category?: string;\n  search?: string;\n  cursor?: string;\n  promoted?: 0 | 1;\n};\n\nexport type AgentListResponse = {\n  object: string;\n  data: Agent[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n  after?: string;\n};\n\nexport type AgentFile = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'agents' | 'agents_output';\n};\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n * Includes the tool call ID, the code interpreter definition, and the type of tool call.\n */\nexport type CodeToolCall = {\n  id: string; // The ID of the tool call.\n  code_interpreter: {\n    input: string; // The input to the Code Interpreter tool call.\n    outputs: Array<Record<string, unknown>>; // The outputs from the Code Interpreter tool call.\n  };\n  type: 'code_interpreter'; // The type of tool call, always 'code_interpreter'.\n};\n\n/**\n * Details of a Function tool call the run step was involved in.\n * Includes the tool call ID, the function definition, and the type of tool call.\n */\nexport type FunctionToolCall = {\n  id: string; // The ID of the tool call object.\n  function: {\n    arguments: string; // The arguments passed to the function.\n    name: string; // The name of the function.\n    output: string | null; // The output of the function, null if not submitted.\n  };\n  type: 'function'; // The type of tool call, always 'function'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type RetrievalToolCall = {\n  id: string; // The ID of the tool call object.\n  retrieval: unknown; // An empty object for now.\n  type: 'retrieval'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type FileSearchToolCall = {\n  id: string; // The ID of the tool call object.\n  file_search: unknown; // An empty object for now.\n  type: 'file_search'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of the tool calls involved in a run step.\n * Can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n */\nexport type ToolCallsStepDetails = {\n  tool_calls: Array<CodeToolCall | RetrievalToolCall | FileSearchToolCall | FunctionToolCall>; // An array of tool calls the run step was involved in.\n  type: 'tool_calls'; // Always 'tool_calls'.\n};\n\nexport type ImageFile = TFile & {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content.\n   */\n  file_id: string;\n  filename: string;\n  filepath: string;\n  height: number;\n  width: number;\n  /**\n   * Prompt used to generate the image if applicable.\n   */\n  prompt?: string;\n  /**\n   * Additional metadata used to generate or about the image/tool_call.\n   */\n  metadata?: Record<string, unknown>;\n};\n\n// FileCitation.ts\nexport type FileCitation = {\n  end_index: number;\n  file_citation: FileCitationDetails;\n  start_index: number;\n  text: string;\n  type: 'file_citation';\n};\n\nexport type FileCitationDetails = {\n  file_id: string;\n  quote: string;\n};\n\n// Bedrock Citation Types\nexport type BedrockCitationLocation = {\n  documentPage: {\n    documentIndex: number;\n    end: number;\n    start: number;\n  };\n};\n\nexport type BedrockCitationSourceContent = {\n  text: string;\n};\n\nexport type BedrockCitation = {\n  location: BedrockCitationLocation;\n  sourceContent: BedrockCitationSourceContent[];\n  title: string;\n};\n\nexport type FilePath = {\n  end_index: number;\n  file_path: FilePathDetails;\n  start_index: number;\n  text: string;\n  type: 'file_path';\n};\n\nexport type FilePathDetails = {\n  file_id: string;\n};\n\nexport type Text = {\n  annotations?: Array<FileCitation | FilePath>;\n  value: string;\n};\n\nexport enum AnnotationTypes {\n  FILE_CITATION = 'file_citation',\n  FILE_PATH = 'file_path',\n}\n\nexport enum StepStatus {\n  IN_PROGRESS = 'in_progress',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport enum MessageContentTypes {\n  TEXT = 'text',\n  IMAGE_FILE = 'image_file',\n}\n\n//enum for RunStatus\n// The status of the run: queued, in_progress, requires_action, cancelling, cancelled, failed, completed, or expired.\nexport enum RunStatus {\n  QUEUED = 'queued',\n  IN_PROGRESS = 'in_progress',\n  REQUIRES_ACTION = 'requires_action',\n  CANCELLING = 'cancelling',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport type PartMetadata = {\n  progress?: number;\n  asset_pointer?: string;\n  status?: string;\n  action?: boolean;\n  auth?: string;\n  expires_at?: number;\n};\n\nexport type ContentPart = (\n  | CodeToolCall\n  | RetrievalToolCall\n  | FileSearchToolCall\n  | FunctionToolCall\n  | Agents.AgentToolCall\n  | ImageFile\n  | Text\n) &\n  PartMetadata;\n\nexport type TMessageContentParts =\n  | { type: ContentTypes.ERROR; text?: string | (Text & PartMetadata); error?: string }\n  | { type: ContentTypes.THINK; think: string | (Text & PartMetadata) }\n  | { type: ContentTypes.TEXT; text: string | (Text & PartMetadata); tool_call_ids?: string[] }\n  | {\n      type: ContentTypes.TOOL_CALL;\n      tool_call: (\n        | CodeToolCall\n        | RetrievalToolCall\n        | FileSearchToolCall\n        | FunctionToolCall\n        | Agents.AgentToolCall\n      ) &\n        PartMetadata;\n    }\n  | { type: ContentTypes.IMAGE_FILE; image_file: ImageFile & PartMetadata }\n  | { type: ContentTypes.CITATION; citation: BedrockCitation & PartMetadata }\n  | Agents.AgentUpdate\n  | Agents.MessageContentImageUrl;\n\nexport type StreamContentData = TMessageContentParts & {\n  /** The index of the current content part */\n  index: number;\n  /** The current text content was already served but edited to replace elements therein */\n  edited?: boolean;\n};\n\nexport type TContentData = StreamContentData & {\n  messageId: string;\n  conversationId: string;\n  userMessageId: string;\n  thread_id: string;\n  stream?: boolean;\n};\n\nexport const actionDelimiter = '_action_';\nexport const actionDomainSeparator = '---';\nexport const hostImageIdSuffix = '_host_copy';\nexport const hostImageNamePrefix = 'host_copy_';\n\nexport type AssistantAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport type AssistantDocument = {\n  user: string;\n  assistant_id: string;\n  conversation_starters?: string[];\n  avatar?: AssistantAvatar;\n  access_level?: number;\n  file_ids?: string[];\n  actions?: string[];\n  createdAt?: Date;\n  updatedAt?: Date;\n  append_current_datetime?: boolean;\n};\n\n/* Agent types */\n\nexport type AgentAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport enum FilePurpose {\n  Vision = 'vision',\n  FineTune = 'fine-tune',\n  FineTuneResults = 'fine-tune-results',\n  Assistants = 'assistants',\n  AssistantsOutput = 'assistants_output',\n}\n\nexport const defaultOrderQuery: {\n  order: 'desc';\n  limit: 100;\n} = {\n  order: 'desc',\n  limit: 100,\n};\n\nexport enum AssistantStreamEvents {\n  ThreadCreated = 'thread.created',\n  ThreadRunCreated = 'thread.run.created',\n  ThreadRunQueued = 'thread.run.queued',\n  ThreadRunInProgress = 'thread.run.in_progress',\n  ThreadRunRequiresAction = 'thread.run.requires_action',\n  ThreadRunCompleted = 'thread.run.completed',\n  ThreadRunFailed = 'thread.run.failed',\n  ThreadRunCancelling = 'thread.run.cancelling',\n  ThreadRunCancelled = 'thread.run.cancelled',\n  ThreadRunExpired = 'thread.run.expired',\n  ThreadRunStepCreated = 'thread.run.step.created',\n  ThreadRunStepInProgress = 'thread.run.step.in_progress',\n  ThreadRunStepCompleted = 'thread.run.step.completed',\n  ThreadRunStepFailed = 'thread.run.step.failed',\n  ThreadRunStepCancelled = 'thread.run.step.cancelled',\n  ThreadRunStepExpired = 'thread.run.step.expired',\n  ThreadRunStepDelta = 'thread.run.step.delta',\n  ThreadMessageCreated = 'thread.message.created',\n  ThreadMessageInProgress = 'thread.message.in_progress',\n  ThreadMessageCompleted = 'thread.message.completed',\n  ThreadMessageIncomplete = 'thread.message.incomplete',\n  ThreadMessageDelta = 'thread.message.delta',\n  ErrorEvent = 'error',\n}\n","import { z } from 'zod';\n\nexport type TFeedbackRating = 'thumbsUp' | 'thumbsDown';\nexport const FEEDBACK_RATINGS = ['thumbsUp', 'thumbsDown'] as const;\n\nexport const FEEDBACK_REASON_KEYS = [\n  // Down\n  'not_matched',\n  'inaccurate',\n  'bad_style',\n  'missing_image',\n  'unjustified_refusal',\n  'not_helpful',\n  'other',\n  // Up\n  'accurate_reliable',\n  'creative_solution',\n  'clear_well_written',\n  'attention_to_detail',\n] as const;\n\nexport type TFeedbackTagKey = (typeof FEEDBACK_REASON_KEYS)[number];\n\nexport interface TFeedbackTag {\n  key: TFeedbackTagKey;\n  label: string;\n  direction: TFeedbackRating;\n  icon: string;\n}\n\n// --- Tag Registry ---\nexport const FEEDBACK_TAGS: TFeedbackTag[] = [\n  // Thumbs Down\n  {\n    key: 'not_matched',\n    label: 'com_ui_feedback_tag_not_matched',\n    direction: 'thumbsDown',\n    icon: 'AlertCircle',\n  },\n  {\n    key: 'inaccurate',\n    label: 'com_ui_feedback_tag_inaccurate',\n    direction: 'thumbsDown',\n    icon: 'AlertCircle',\n  },\n  {\n    key: 'bad_style',\n    label: 'com_ui_feedback_tag_bad_style',\n    direction: 'thumbsDown',\n    icon: 'PenTool',\n  },\n  {\n    key: 'missing_image',\n    label: 'com_ui_feedback_tag_missing_image',\n    direction: 'thumbsDown',\n    icon: 'ImageOff',\n  },\n  {\n    key: 'unjustified_refusal',\n    label: 'com_ui_feedback_tag_unjustified_refusal',\n    direction: 'thumbsDown',\n    icon: 'Ban',\n  },\n  {\n    key: 'not_helpful',\n    label: 'com_ui_feedback_tag_not_helpful',\n    direction: 'thumbsDown',\n    icon: 'ThumbsDown',\n  },\n  {\n    key: 'other',\n    label: 'com_ui_feedback_tag_other',\n    direction: 'thumbsDown',\n    icon: 'HelpCircle',\n  },\n  // Thumbs Up\n  {\n    key: 'accurate_reliable',\n    label: 'com_ui_feedback_tag_accurate_reliable',\n    direction: 'thumbsUp',\n    icon: 'CheckCircle',\n  },\n  {\n    key: 'creative_solution',\n    label: 'com_ui_feedback_tag_creative_solution',\n    direction: 'thumbsUp',\n    icon: 'Lightbulb',\n  },\n  {\n    key: 'clear_well_written',\n    label: 'com_ui_feedback_tag_clear_well_written',\n    direction: 'thumbsUp',\n    icon: 'PenTool',\n  },\n  {\n    key: 'attention_to_detail',\n    label: 'com_ui_feedback_tag_attention_to_detail',\n    direction: 'thumbsUp',\n    icon: 'Search',\n  },\n];\n\nexport function getTagsForRating(rating: TFeedbackRating): TFeedbackTag[] {\n  return FEEDBACK_TAGS.filter((tag) => tag.direction === rating);\n}\n\nexport const feedbackTagKeySchema = z.enum(FEEDBACK_REASON_KEYS);\nexport const feedbackRatingSchema = z.enum(FEEDBACK_RATINGS);\n\nexport const feedbackSchema = z.object({\n  rating: feedbackRatingSchema,\n  tag: feedbackTagKeySchema,\n  text: z.string().max(1024).optional(),\n});\n\nexport type TMinimalFeedback = z.infer<typeof feedbackSchema>;\n\nexport type TFeedback = {\n  rating: TFeedbackRating;\n  tag: TFeedbackTag | undefined;\n  text?: string;\n};\n\nexport function toMinimalFeedback(feedback: TFeedback | undefined): TMinimalFeedback | undefined {\n  if (!feedback?.rating || !feedback?.tag || !feedback.tag.key) {\n    return undefined;\n  }\n\n  return {\n    rating: feedback.rating,\n    tag: feedback.tag.key,\n    text: feedback.text,\n  };\n}\n\nexport function getTagByKey(key: TFeedbackTagKey | undefined): TFeedbackTag | undefined {\n  if (!key) {\n    return undefined;\n  }\n  return FEEDBACK_TAGS.find((tag) => tag.key === key);\n}\n","import { z } from 'zod';\nimport { Tools } from './types/assistants';\nimport type { TMessageContentParts, FunctionTool, FunctionToolCall } from './types/assistants';\nimport { TFeedback, feedbackSchema } from './feedback';\nimport type { SearchResultData } from './types/web';\nimport type { TFile } from './types/files';\n\nexport const isUUID = z.string().uuid();\n\nexport enum AuthType {\n  OVERRIDE_AUTH = 'override_auth',\n  USER_PROVIDED = 'user_provided',\n  SYSTEM_DEFINED = 'system_defined',\n}\n\nexport const authTypeSchema = z.nativeEnum(AuthType);\n\nexport enum EModelEndpoint {\n  azureOpenAI = 'azureOpenAI',\n  openAI = 'openAI',\n  google = 'google',\n  anthropic = 'anthropic',\n  assistants = 'assistants',\n  azureAssistants = 'azureAssistants',\n  agents = 'agents',\n  custom = 'custom',\n  bedrock = 'bedrock',\n  /** @deprecated */\n  chatGPTBrowser = 'chatGPTBrowser',\n  /** @deprecated */\n  gptPlugins = 'gptPlugins',\n}\n\nexport const paramEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.agents,\n  EModelEndpoint.openAI,\n  EModelEndpoint.bedrock,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.google,\n]);\n\nexport enum BedrockProviders {\n  AI21 = 'ai21',\n  Amazon = 'amazon',\n  Anthropic = 'anthropic',\n  Cohere = 'cohere',\n  Meta = 'meta',\n  MistralAI = 'mistral',\n  StabilityAI = 'stability',\n  DeepSeek = 'deepseek',\n}\n\nexport const getModelKey = (endpoint: EModelEndpoint | string, model: string) => {\n  if (endpoint === EModelEndpoint.bedrock) {\n    const parts = model.split('.');\n    const provider = [parts[0], parts[1]].find((part) =>\n      Object.values(BedrockProviders).includes(part as BedrockProviders),\n    );\n    return (provider ?? parts[0]) as BedrockProviders;\n  }\n  return model;\n};\n\nexport const getSettingsKeys = (endpoint: EModelEndpoint | string, model: string) => {\n  const endpointKey = endpoint;\n  const modelKey = getModelKey(endpointKey, model);\n  const combinedKey = `${endpointKey}-${modelKey}`;\n  return [combinedKey, endpointKey];\n};\n\nexport type AssistantsEndpoint = EModelEndpoint.assistants | EModelEndpoint.azureAssistants;\n\nexport const isAssistantsEndpoint = (_endpoint?: AssistantsEndpoint | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint.toLowerCase().endsWith(EModelEndpoint.assistants);\n};\n\nexport type AgentProvider = Exclude<keyof typeof EModelEndpoint, EModelEndpoint.agents> | string;\n\nexport const isAgentsEndpoint = (_endpoint?: EModelEndpoint.agents | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint === EModelEndpoint.agents;\n};\n\nexport const isParamEndpoint = (\n  endpoint: EModelEndpoint | string,\n  endpointType?: EModelEndpoint | string,\n): boolean => {\n  if (paramEndpoints.has(endpoint)) {\n    return true;\n  }\n\n  if (endpointType != null) {\n    return paramEndpoints.has(endpointType);\n  }\n\n  return false;\n};\n\nexport enum ImageDetail {\n  low = 'low',\n  auto = 'auto',\n  high = 'high',\n}\n\nexport enum ReasoningEffort {\n  none = '',\n  minimal = 'minimal',\n  low = 'low',\n  medium = 'medium',\n  high = 'high',\n}\n\nexport enum ReasoningSummary {\n  none = '',\n  auto = 'auto',\n  concise = 'concise',\n  detailed = 'detailed',\n}\n\nexport enum Verbosity {\n  none = '',\n  low = 'low',\n  medium = 'medium',\n  high = 'high',\n}\n\nexport const imageDetailNumeric = {\n  [ImageDetail.low]: 0,\n  [ImageDetail.auto]: 1,\n  [ImageDetail.high]: 2,\n};\n\nexport const imageDetailValue = {\n  0: ImageDetail.low,\n  1: ImageDetail.auto,\n  2: ImageDetail.high,\n};\n\nexport const eImageDetailSchema = z.nativeEnum(ImageDetail);\nexport const eReasoningEffortSchema = z.nativeEnum(ReasoningEffort);\nexport const eReasoningSummarySchema = z.nativeEnum(ReasoningSummary);\nexport const eVerbositySchema = z.nativeEnum(Verbosity);\n\nexport const defaultAssistantFormValues = {\n  assistant: '',\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  conversation_starters: [],\n  model: '',\n  functions: [],\n  code_interpreter: false,\n  image_vision: false,\n  retrieval: false,\n  append_current_datetime: false,\n};\n\nexport const defaultAgentFormValues = {\n  agent: {},\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  model: '',\n  model_parameters: {},\n  tools: [],\n  provider: {},\n  projectIds: [],\n  artifacts: '',\n  /** @deprecated Use ACL permissions instead */\n  isCollaborative: false,\n  recursion_limit: undefined,\n  [Tools.execute_code]: false,\n  [Tools.file_search]: false,\n  [Tools.web_search]: false,\n  category: 'general',\n  support_contact: {\n    name: '',\n    email: '',\n  },\n};\n\nexport const ImageVisionTool: FunctionTool = {\n  type: Tools.function,\n  [Tools.function]: {\n    name: 'image_vision',\n    description: 'Get detailed text descriptions for all current image attachments.',\n    parameters: {\n      type: 'object',\n      properties: {},\n      required: [],\n    },\n  },\n};\n\nexport const isImageVisionTool = (tool: FunctionTool | FunctionToolCall) =>\n  tool.type === 'function' && tool.function?.name === ImageVisionTool.function?.name;\n\nexport const openAISettings = {\n  model: {\n    default: 'gpt-4o-mini' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  top_p: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  presence_penalty: {\n    min: -2 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  frequency_penalty: {\n    min: -2 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto as const,\n    min: 0 as const,\n    max: 2 as const,\n    step: 1 as const,\n  },\n};\n\nexport const googleSettings = {\n  model: {\n    default: 'gemini-1.5-flash-latest' as const,\n  },\n  maxOutputTokens: {\n    min: 1 as const,\n    max: 64000 as const,\n    step: 1 as const,\n    default: 8192 as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  topP: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 0.95 as const,\n  },\n  topK: {\n    min: 1 as const,\n    max: 40 as const,\n    step: 1 as const,\n    default: 40 as const,\n  },\n  thinking: {\n    default: true as const,\n  },\n  thinkingBudget: {\n    min: -1 as const,\n    max: 32768 as const,\n    step: 1 as const,\n    /** `-1` = Dynamic Thinking, meaning the model will adjust\n     * the budget based on the complexity of the request.\n     */\n    default: -1 as const,\n  },\n};\n\nconst ANTHROPIC_MAX_OUTPUT = 128000 as const;\nconst DEFAULT_MAX_OUTPUT = 8192 as const;\nconst LEGACY_ANTHROPIC_MAX_OUTPUT = 4096 as const;\nexport const anthropicSettings = {\n  model: {\n    default: 'claude-3-5-sonnet-latest' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  promptCache: {\n    default: true as const,\n  },\n  thinking: {\n    default: true as const,\n  },\n  thinkingBudget: {\n    min: 1024 as const,\n    step: 100 as const,\n    max: 200000 as const,\n    default: 2000 as const,\n  },\n  maxOutputTokens: {\n    min: 1 as const,\n    max: ANTHROPIC_MAX_OUTPUT,\n    step: 1 as const,\n    default: DEFAULT_MAX_OUTPUT,\n    reset: (modelName: string) => {\n      if (/claude-3[-.]5-sonnet/.test(modelName) || /claude-3[-.]7/.test(modelName)) {\n        return DEFAULT_MAX_OUTPUT;\n      }\n\n      return 4096;\n    },\n    set: (value: number, modelName: string) => {\n      if (\n        !(/claude-3[-.]5-sonnet/.test(modelName) || /claude-3[-.]7/.test(modelName)) &&\n        value > LEGACY_ANTHROPIC_MAX_OUTPUT\n      ) {\n        return LEGACY_ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return value;\n    },\n  },\n  topP: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 0.7 as const,\n  },\n  topK: {\n    min: 1 as const,\n    max: 40 as const,\n    step: 1 as const,\n    default: 5 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  legacy: {\n    maxOutputTokens: {\n      min: 1 as const,\n      max: LEGACY_ANTHROPIC_MAX_OUTPUT,\n      step: 1 as const,\n      default: LEGACY_ANTHROPIC_MAX_OUTPUT,\n    },\n  },\n  web_search: {\n    default: false as const,\n  },\n};\n\nexport const agentsSettings = {\n  model: {\n    default: 'gpt-3.5-turbo-test' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  top_p: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  presence_penalty: {\n    min: -2 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  frequency_penalty: {\n    min: -2 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto as const,\n  },\n};\n\nexport const endpointSettings = {\n  [EModelEndpoint.openAI]: openAISettings,\n  [EModelEndpoint.google]: googleSettings,\n  [EModelEndpoint.anthropic]: anthropicSettings,\n  [EModelEndpoint.agents]: agentsSettings,\n  [EModelEndpoint.bedrock]: agentsSettings,\n};\n\nconst google = endpointSettings[EModelEndpoint.google];\n\nexport const eModelEndpointSchema = z.nativeEnum(EModelEndpoint);\n\nexport const extendedModelEndpointSchema = z.union([eModelEndpointSchema, z.string()]);\n\nexport const tPluginAuthConfigSchema = z.object({\n  authField: z.string(),\n  label: z.string(),\n  description: z.string(),\n});\n\nexport type TPluginAuthConfig = z.infer<typeof tPluginAuthConfigSchema>;\n\nexport const tPluginSchema = z.object({\n  name: z.string(),\n  pluginKey: z.string(),\n  description: z.string().optional(),\n  icon: z.string().optional(),\n  authConfig: z.array(tPluginAuthConfigSchema).optional(),\n  authenticated: z.boolean().optional(),\n  chatMenu: z.boolean().optional(),\n  isButton: z.boolean().optional(),\n  toolkit: z.boolean().optional(),\n});\n\nexport type TPlugin = z.infer<typeof tPluginSchema>;\n\nexport type TInput = {\n  inputStr: string;\n};\n\nexport type TResPlugin = {\n  plugin: string;\n  input: string;\n  thought: string;\n  loading?: boolean;\n  outputs?: string;\n  latest?: string;\n  inputs?: TInput[];\n};\n\nexport const tExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nexport type TExample = z.infer<typeof tExampleSchema>;\n\nexport enum EAgent {\n  functions = 'functions',\n  classic = 'classic',\n}\n\nexport const agentOptionSettings = {\n  model: {\n    default: 'gpt-4o-mini',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0,\n  },\n  agent: {\n    default: EAgent.functions,\n    options: [EAgent.functions, EAgent.classic],\n  },\n  skipCompletion: {\n    default: true,\n  },\n};\n\nexport const eAgentOptionsSchema = z.nativeEnum(EAgent);\n\nexport const tAgentOptionsSchema = z.object({\n  agent: z.string().default(EAgent.functions),\n  skipCompletion: z.boolean().default(agentOptionSettings.skipCompletion.default),\n  model: z.string(),\n  temperature: z.number().default(agentOptionSettings.temperature.default),\n});\n\nexport const tMessageSchema = z.object({\n  messageId: z.string(),\n  endpoint: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  conversationId: z.string().nullable(),\n  parentMessageId: z.string().nullable(),\n  responseMessageId: z.string().nullable().optional(),\n  overrideParentMessageId: z.string().nullable().optional(),\n  bg: z.string().nullable().optional(),\n  model: z.string().nullable().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  sender: z.string().optional(),\n  text: z.string(),\n  /** @deprecated */\n  generation: z.string().nullable().optional(),\n  isCreatedByUser: z.boolean(),\n  error: z.boolean().optional(),\n  clientTimestamp: z.string().optional(),\n  createdAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  updatedAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  current: z.boolean().optional(),\n  unfinished: z.boolean().optional(),\n  searchResult: z.boolean().optional(),\n  finish_reason: z.string().optional(),\n  /* assistant */\n  thread_id: z.string().optional(),\n  /* frontend components */\n  iconURL: z.string().nullable().optional(),\n  feedback: feedbackSchema.optional(),\n});\n\nexport type MemoryArtifact = {\n  key: string;\n  value?: string;\n  tokenCount?: number;\n  type: 'update' | 'delete' | 'error';\n};\n\nexport type UIResource = {\n  type?: string;\n  data?: unknown;\n  uri?: string;\n  mimeType?: string;\n  text?: string;\n  [key: string]: unknown;\n};\n\nexport type TAttachmentMetadata = {\n  type?: Tools;\n  messageId: string;\n  toolCallId: string;\n  [Tools.memory]?: MemoryArtifact;\n  [Tools.ui_resources]?: UIResource[];\n  [Tools.web_search]?: SearchResultData;\n  [Tools.file_search]?: SearchResultData;\n};\n\nexport type TAttachment =\n  | (TFile & TAttachmentMetadata)\n  | (Pick<TFile, 'filename' | 'filepath' | 'conversationId'> & {\n      expiresAt: number;\n    } & TAttachmentMetadata)\n  | (Partial<Pick<TFile, 'filename' | 'filepath'>> &\n      Pick<TFile, 'conversationId'> &\n      TAttachmentMetadata);\n\nexport type TMessage = z.input<typeof tMessageSchema> & {\n  children?: TMessage[];\n  plugin?: TResPlugin | null;\n  plugins?: TResPlugin[];\n  content?: TMessageContentParts[];\n  files?: Partial<TFile>[];\n  depth?: number;\n  siblingIndex?: number;\n  attachments?: TAttachment[];\n  clientTimestamp?: string;\n  feedback?: TFeedback;\n};\n\nexport const coerceNumber = z.union([z.number(), z.string()]).transform((val) => {\n  if (typeof val === 'string') {\n    return val.trim() === '' ? undefined : parseFloat(val);\n  }\n  return val;\n});\n\ntype DocumentTypeValue =\n  | null\n  | boolean\n  | number\n  | string\n  | DocumentTypeValue[]\n  | { [key: string]: DocumentTypeValue };\n\nconst DocumentType: z.ZodType<DocumentTypeValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.boolean(),\n    z.number(),\n    z.string(),\n    z.array(z.lazy(() => DocumentType)),\n    z.record(z.lazy(() => DocumentType)),\n  ]),\n);\n\nexport const tConversationSchema = z.object({\n  conversationId: z.string().nullable(),\n  endpoint: eModelEndpointSchema.nullable(),\n  endpointType: eModelEndpointSchema.nullable().optional(),\n  isArchived: z.boolean().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  user: z.string().optional(),\n  messages: z.array(z.string()).optional(),\n  tools: z.union([z.array(tPluginSchema), z.array(z.string())]).optional(),\n  modelLabel: z.string().nullable().optional(),\n  userLabel: z.string().optional(),\n  model: z.string().nullable().optional(),\n  promptPrefix: z.string().nullable().optional(),\n  temperature: z.number().nullable().optional(),\n  topP: z.number().optional(),\n  topK: z.number().optional(),\n  top_p: z.number().optional(),\n  frequency_penalty: z.number().optional(),\n  presence_penalty: z.number().optional(),\n  parentMessageId: z.string().optional(),\n  maxOutputTokens: coerceNumber.nullable().optional(),\n  maxContextTokens: coerceNumber.optional(),\n  max_tokens: coerceNumber.optional(),\n  /* Anthropic */\n  promptCache: z.boolean().optional(),\n  system: z.string().optional(),\n  thinking: z.boolean().optional(),\n  thinkingBudget: coerceNumber.optional(),\n  stream: z.boolean().optional(),\n  /* artifacts */\n  artifacts: z.string().optional(),\n  /* google */\n  context: z.string().nullable().optional(),\n  examples: z.array(tExampleSchema).optional(),\n  /* DB */\n  tags: z.array(z.string()).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  /* Files */\n  resendFiles: z.boolean().optional(),\n  file_ids: z.array(z.string()).optional(),\n  /* vision */\n  imageDetail: eImageDetailSchema.optional(),\n  /* OpenAI: Reasoning models only */\n  reasoning_effort: eReasoningEffortSchema.optional().nullable(),\n  reasoning_summary: eReasoningSummarySchema.optional().nullable(),\n  /* OpenAI: Verbosity control */\n  verbosity: eVerbositySchema.optional().nullable(),\n  /* OpenAI: use Responses API */\n  useResponsesApi: z.boolean().optional(),\n  /* OpenAI Responses API / Anthropic API / Google API */\n  web_search: z.boolean().optional(),\n  /* disable streaming */\n  disableStreaming: z.boolean().optional(),\n  /* assistant */\n  assistant_id: z.string().optional(),\n  /* agents */\n  agent_id: z.string().optional(),\n  /* AWS Bedrock */\n  region: z.string().optional(),\n  maxTokens: coerceNumber.optional(),\n  additionalModelRequestFields: DocumentType.optional(),\n  /* assistants */\n  instructions: z.string().optional(),\n  additional_instructions: z.string().optional(),\n  append_current_datetime: z.boolean().optional(),\n  /** Used to overwrite active conversation settings when saving a Preset */\n  presetOverride: z.record(z.unknown()).optional(),\n  stop: z.array(z.string()).optional(),\n  /* frontend components */\n  greeting: z.string().optional(),\n  spec: z.string().nullable().optional(),\n  iconURL: z.string().nullable().optional(),\n  /* temporary chat */\n  expiredAt: z.string().nullable().optional(),\n  /* file token limits */\n  fileTokenLimit: coerceNumber.optional(),\n  /** @deprecated */\n  resendImages: z.boolean().optional(),\n  /** @deprecated */\n  agentOptions: tAgentOptionsSchema.nullable().optional(),\n  /** @deprecated Prefer `modelLabel` over `chatGptLabel` */\n  chatGptLabel: z.string().nullable().optional(),\n});\n\nexport const tPresetSchema = tConversationSchema\n  .omit({\n    conversationId: true,\n    createdAt: true,\n    updatedAt: true,\n    title: true,\n  })\n  .merge(\n    z.object({\n      conversationId: z.string().nullable().optional(),\n      presetId: z.string().nullable().optional(),\n      title: z.string().nullable().optional(),\n      defaultPreset: z.boolean().optional(),\n      order: z.number().optional(),\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport const tConvoUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n    createdAt: z.string().optional(),\n    updatedAt: z.string().optional(),\n  }),\n);\n\nexport const tQueryParamsSchema = tConversationSchema\n  .pick({\n    // librechat settings\n    /** The model spec to be used */\n    spec: true,\n    /** The AI context window, overrides the system-defined window as determined by `model` value */\n    maxContextTokens: true,\n    /**\n     * Whether or not to re-submit files from previous messages on subsequent messages\n     * */\n    resendFiles: true,\n    /**\n     * @endpoints openAI, custom, azureOpenAI\n     *\n     * System parameter that only affects the above endpoints.\n     * Image detail for re-sizing according to OpenAI spec, defaults to `auto`\n     * */\n    imageDetail: true,\n    /**\n     * AKA Custom Instructions, dynamically added to chat history as a system message;\n     * for `bedrock` endpoint, this is used as the `system` model param if the provider uses it;\n     * for `assistants` endpoint, this is used as the `additional_instructions` model param:\n     * https://platform.openai.com/docs/api-reference/runs/createRun#runs-createrun-additional_instructions\n     * ; otherwise, a message with `system` role is added to the chat history\n     */\n    promptPrefix: true,\n    // Model parameters\n    /** @endpoints openAI, custom, azureOpenAI, google, anthropic, assistants, azureAssistants, bedrock */\n    model: true,\n    /** @endpoints openAI, custom, azureOpenAI, google, anthropic, bedrock */\n    temperature: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    presence_penalty: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    frequency_penalty: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    stop: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    top_p: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    max_tokens: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    reasoning_effort: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    reasoning_summary: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    verbosity: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    useResponsesApi: true,\n    /** @endpoints openAI, anthropic, google */\n    web_search: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    disableStreaming: true,\n    /** @endpoints google, anthropic, bedrock */\n    topP: true,\n    /** @endpoints google, anthropic */\n    topK: true,\n    /** @endpoints google, anthropic */\n    maxOutputTokens: true,\n    /** @endpoints anthropic */\n    promptCache: true,\n    thinking: true,\n    thinkingBudget: true,\n    /** @endpoints bedrock */\n    region: true,\n    /** @endpoints bedrock */\n    maxTokens: true,\n    /** @endpoints agents */\n    agent_id: true,\n    /** @endpoints assistants, azureAssistants */\n    assistant_id: true,\n    /** @endpoints assistants, azureAssistants */\n    append_current_datetime: true,\n    /**\n     * @endpoints assistants, azureAssistants\n     *\n     * Overrides existing assistant instructions, only used for the current run:\n     * https://platform.openai.com/docs/api-reference/runs/createRun#runs-createrun-instructions\n     * */\n    instructions: true,\n    /** @endpoints openAI, google, anthropic */\n    fileTokenLimit: true,\n  })\n  .merge(\n    z.object({\n      /** @endpoints openAI, custom, azureOpenAI, google, anthropic, assistants, azureAssistants, bedrock, agents */\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport type TPreset = z.infer<typeof tPresetSchema>;\n\nexport type TSetOption = (\n  param: number | string,\n) => (newValue: number | string | boolean | string[] | Partial<TPreset>) => void;\n\nexport type TConversation = z.infer<typeof tConversationSchema> & {\n  presetOverride?: Partial<TPreset>;\n  disableParams?: boolean;\n};\n\nexport const tSharedLinkSchema = z.object({\n  conversationId: z.string(),\n  shareId: z.string(),\n  messages: z.array(z.string()),\n  isPublic: z.boolean(),\n  title: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\nexport type TSharedLink = z.infer<typeof tSharedLinkSchema>;\n\nexport const tConversationTagSchema = z.object({\n  _id: z.string(),\n  user: z.string(),\n  tag: z.string(),\n  description: z.string().optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  count: z.number(),\n  position: z.number(),\n});\nexport type TConversationTag = z.infer<typeof tConversationTagSchema>;\n\nexport const googleBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  promptPrefix: true,\n  examples: true,\n  temperature: true,\n  maxOutputTokens: true,\n  artifacts: true,\n  topP: true,\n  topK: true,\n  thinking: true,\n  thinkingBudget: true,\n  web_search: true,\n  fileTokenLimit: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const googleSchema = googleBaseSchema\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj))\n  .catch(() => ({}));\n\n/**\n   * TODO: Map the following fields:\n  - presence_penalty -> presencePenalty\n  - frequency_penalty -> frequencyPenalty\n  - stop -> stopSequences\n   */\nexport const googleGenConfigSchema = z\n  .object({\n    maxOutputTokens: coerceNumber.optional(),\n    temperature: coerceNumber.optional(),\n    topP: coerceNumber.optional(),\n    topK: coerceNumber.optional(),\n    presencePenalty: coerceNumber.optional(),\n    frequencyPenalty: coerceNumber.optional(),\n    stopSequences: z.array(z.string()).optional(),\n    thinkingConfig: z\n      .object({\n        includeThoughts: z.boolean().optional(),\n        thinkingBudget: coerceNumber.optional(),\n      })\n      .optional(),\n    web_search: z.boolean().optional(),\n  })\n  .strip()\n  .optional();\n\nconst gptPluginsBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  chatGptLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  artifacts: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  tools: true,\n  agentOptions: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const gptPluginsSchema = gptPluginsBaseSchema\n  .transform((obj) => {\n    const result = {\n      ...obj,\n      model: obj.model ?? 'gpt-3.5-turbo',\n      chatGptLabel: obj.chatGptLabel ?? obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? 0.8,\n      top_p: obj.top_p ?? 1,\n      presence_penalty: obj.presence_penalty ?? 0,\n      frequency_penalty: obj.frequency_penalty ?? 0,\n      tools: obj.tools ?? [],\n      agentOptions: obj.agentOptions ?? {\n        agent: EAgent.functions,\n        skipCompletion: true,\n        model: 'gpt-3.5-turbo',\n        temperature: 0,\n      },\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n\n    if (obj.modelLabel != null && obj.modelLabel !== '') {\n      result.modelLabel = null;\n    }\n\n    return result;\n  })\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 0.8,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    tools: [],\n    agentOptions: {\n      agent: EAgent.functions,\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport function removeNullishValues<T extends Record<string, unknown>>(\n  obj: T,\n  removeEmptyStrings?: boolean,\n): Partial<T> {\n  const newObj: Partial<T> = { ...obj };\n\n  (Object.keys(newObj) as Array<keyof T>).forEach((key) => {\n    const value = newObj[key];\n    if (value === undefined || value === null) {\n      delete newObj[key];\n    }\n    if (removeEmptyStrings && typeof value === 'string' && value === '') {\n      delete newObj[key];\n    }\n  });\n\n  return newObj;\n}\n\nconst assistantBaseSchema = tConversationSchema.pick({\n  model: true,\n  assistant_id: true,\n  instructions: true,\n  artifacts: true,\n  promptPrefix: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  append_current_datetime: true,\n});\n\nexport const assistantSchema = assistantBaseSchema\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? openAISettings.model.default,\n    assistant_id: obj.assistant_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    spec: obj.spec ?? undefined,\n    append_current_datetime: obj.append_current_datetime ?? false,\n  }))\n  .catch(() => ({\n    model: openAISettings.model.default,\n    assistant_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    append_current_datetime: false,\n  }));\n\nconst compactAssistantBaseSchema = tConversationSchema.pick({\n  model: true,\n  assistant_id: true,\n  instructions: true,\n  promptPrefix: true,\n  artifacts: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n});\n\nexport const compactAssistantSchema = compactAssistantBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const agentsBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  temperature: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  resendFiles: true,\n  imageDetail: true,\n  agent_id: true,\n  instructions: true,\n  promptPrefix: true,\n  iconURL: true,\n  greeting: true,\n  maxContextTokens: true,\n});\n\nexport const agentsSchema = agentsBaseSchema\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? agentsSettings.model.default,\n    modelLabel: obj.modelLabel ?? null,\n    temperature: obj.temperature ?? 1,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    resendFiles:\n      typeof obj.resendFiles === 'boolean' ? obj.resendFiles : agentsSettings.resendFiles.default,\n    imageDetail: obj.imageDetail ?? ImageDetail.auto,\n    agent_id: obj.agent_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    maxContextTokens: obj.maxContextTokens ?? undefined,\n  }))\n  .catch(() => ({\n    model: agentsSettings.model.default,\n    modelLabel: null,\n    temperature: 1,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    resendFiles: agentsSettings.resendFiles.default,\n    imageDetail: ImageDetail.auto,\n    agent_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const openAIBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  chatGptLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  resendFiles: true,\n  artifacts: true,\n  imageDetail: true,\n  stop: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n  max_tokens: true,\n  reasoning_effort: true,\n  reasoning_summary: true,\n  verbosity: true,\n  useResponsesApi: true,\n  web_search: true,\n  disableStreaming: true,\n  fileTokenLimit: true,\n});\n\nexport const openAISchema = openAIBaseSchema\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj, true))\n  .catch(() => ({}));\n\nexport const compactGoogleSchema = googleBaseSchema\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.temperature === google.temperature.default) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === google.maxOutputTokens.default) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === google.topP.default) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === google.topK.default) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const anthropicBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  maxOutputTokens: true,\n  topP: true,\n  topK: true,\n  resendFiles: true,\n  promptCache: true,\n  thinking: true,\n  thinkingBudget: true,\n  artifacts: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n  web_search: true,\n  fileTokenLimit: true,\n  stop: true,\n  stream: true,\n});\n\nexport const anthropicSchema = anthropicBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactPluginsSchema = gptPluginsBaseSchema\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.modelLabel === null) {\n      delete newObj.modelLabel;\n    }\n    if (newObj.chatGptLabel === null) {\n      delete newObj.chatGptLabel;\n    }\n    if (newObj.promptPrefix === null) {\n      delete newObj.promptPrefix;\n    }\n    if (newObj.temperature === 0.8) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.tools?.length === 0) {\n      delete newObj.tools;\n    }\n\n    if (\n      newObj.agentOptions &&\n      newObj.agentOptions.agent === EAgent.functions &&\n      newObj.agentOptions.skipCompletion === true &&\n      newObj.agentOptions.model === 'gpt-3.5-turbo' &&\n      newObj.agentOptions.temperature === 0\n    ) {\n      delete newObj.agentOptions;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const tBannerSchema = z.object({\n  bannerId: z.string(),\n  message: z.string(),\n  displayFrom: z.string(),\n  displayTo: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  isPublic: z.boolean(),\n});\nexport type TBanner = z.infer<typeof tBannerSchema>;\n\nexport const compactAgentsBaseSchema = tConversationSchema.pick({\n  spec: true,\n  // model: true,\n  iconURL: true,\n  greeting: true,\n  agent_id: true,\n  instructions: true,\n  additional_instructions: true,\n});\n\nexport const compactAgentsSchema = compactAgentsBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n","import { EToolResources } from './assistants';\n\nexport enum FileSources {\n  local = 'local',\n  firebase = 'firebase',\n  azure = 'azure',\n  azure_blob = 'azure_blob',\n  openai = 'openai',\n  s3 = 's3',\n  vectordb = 'vectordb',\n  execute_code = 'execute_code',\n  mistral_ocr = 'mistral_ocr',\n  azure_mistral_ocr = 'azure_mistral_ocr',\n  vertexai_mistral_ocr = 'vertexai_mistral_ocr',\n  text = 'text',\n}\n\nexport const checkOpenAIStorage = (source: string) =>\n  source === FileSources.openai || source === FileSources.azure;\n\nexport enum FileContext {\n  avatar = 'avatar',\n  unknown = 'unknown',\n  agents = 'agents',\n  assistants = 'assistants',\n  execute_code = 'execute_code',\n  image_generation = 'image_generation',\n  assistants_output = 'assistants_output',\n  message_attachment = 'message_attachment',\n  filename = 'filename',\n  updatedAt = 'updatedAt',\n  source = 'source',\n  filterSource = 'filterSource',\n  context = 'context',\n  bytes = 'bytes',\n}\n\nexport type EndpointFileConfig = {\n  disabled?: boolean;\n  fileLimit?: number;\n  fileSizeLimit?: number;\n  totalSizeLimit?: number;\n  supportedMimeTypes?: RegExp[];\n};\n\nexport type FileConfig = {\n  endpoints: {\n    [key: string]: EndpointFileConfig;\n  };\n  fileTokenLimit?: number;\n  serverFileSizeLimit?: number;\n  avatarSizeLimit?: number;\n  clientImageResize?: {\n    enabled?: boolean;\n    maxWidth?: number;\n    maxHeight?: number;\n    quality?: number;\n  };\n  ocr?: {\n    supportedMimeTypes?: RegExp[];\n  };\n  text?: {\n    supportedMimeTypes?: RegExp[];\n  };\n  stt?: {\n    supportedMimeTypes?: RegExp[];\n  };\n  checkType?: (fileType: string, supportedTypes: RegExp[]) => boolean;\n};\n\nexport type FileConfigInput = {\n  endpoints?: {\n    [key: string]: EndpointFileConfig;\n  };\n  serverFileSizeLimit?: number;\n  avatarSizeLimit?: number;\n  clientImageResize?: {\n    enabled?: boolean;\n    maxWidth?: number;\n    maxHeight?: number;\n    quality?: number;\n  };\n  ocr?: {\n    supportedMimeTypes?: string[];\n  };\n  text?: {\n    supportedMimeTypes?: string[];\n  };\n  stt?: {\n    supportedMimeTypes?: string[];\n  };\n  checkType?: (fileType: string, supportedTypes: RegExp[]) => boolean;\n};\n\nexport type TFile = {\n  _id?: string;\n  __v?: number;\n  user: string;\n  conversationId?: string;\n  message?: string;\n  file_id: string;\n  temp_file_id?: string;\n  bytes: number;\n  embedded: boolean;\n  filename: string;\n  filepath: string;\n  object: 'file';\n  type: string;\n  usage: number;\n  context?: FileContext;\n  source?: FileSources;\n  filterSource?: FileSources;\n  width?: number;\n  height?: number;\n  expiresAt?: string | Date;\n  preview?: string;\n  metadata?: { fileIdentifier?: string };\n  createdAt?: string | Date;\n  updatedAt?: string | Date;\n};\n\nexport type TFileUpload = TFile & {\n  temp_file_id: string;\n};\n\nexport type AvatarUploadResponse = {\n  url: string;\n};\n\nexport type SpeechToTextResponse = {\n  text: string;\n};\n\nexport type VoiceResponse = string[];\n\nexport type UploadMutationOptions = {\n  onSuccess?: (data: TFileUpload, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type UploadAvatarOptions = {\n  onSuccess?: (data: AvatarUploadResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type SpeechToTextOptions = {\n  onSuccess?: (data: SpeechToTextResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type TextToSpeechOptions = {\n  onSuccess?: (data: ArrayBuffer, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type VoiceOptions = {\n  onSuccess?: (data: VoiceResponse, variables: unknown, context?: unknown) => void;\n  onMutate?: () => void | Promise<unknown>;\n  onError?: (error: unknown, variables: unknown, context?: unknown) => void;\n};\n\nexport type DeleteFilesResponse = {\n  message: string;\n  result: Record<string, unknown>;\n};\n\nexport type BatchFile = {\n  file_id: string;\n  filepath: string;\n  embedded: boolean;\n  source: FileSources;\n  temp_file_id?: string;\n};\n\nexport type DeleteFilesBody = {\n  files: BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: EToolResources;\n};\n\nexport type DeleteMutationOptions = {\n  onSuccess?: (data: DeleteFilesResponse, variables: DeleteFilesBody, context?: unknown) => void;\n  onMutate?: (variables: DeleteFilesBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: DeleteFilesBody, context?: unknown) => void;\n};\n","import { z } from 'zod';\nimport type { TPreset } from './schemas';\nimport {\n  EModelEndpoint,\n  tPresetSchema,\n  eModelEndpointSchema,\n  AuthType,\n  authTypeSchema,\n} from './schemas';\n\nexport type TModelSpec = {\n  name: string;\n  label: string;\n  preset: TPreset;\n  order?: number;\n  default?: boolean;\n  description?: string;\n  showIconInMenu?: boolean;\n  showIconInHeader?: boolean;\n  iconURL?: string | EModelEndpoint; // Allow using project-included icons\n  authType?: AuthType;\n};\n\nexport const tModelSpecSchema = z.object({\n  name: z.string(),\n  label: z.string(),\n  preset: tPresetSchema,\n  order: z.number().optional(),\n  default: z.boolean().optional(),\n  description: z.string().optional(),\n  showIconInMenu: z.boolean().optional(),\n  showIconInHeader: z.boolean().optional(),\n  iconURL: z.union([z.string(), eModelEndpointSchema]).optional(),\n  authType: authTypeSchema.optional(),\n});\n\nexport const specsConfigSchema = z.object({\n  enforce: z.boolean().default(false),\n  prioritize: z.boolean().default(true),\n  list: z.array(tModelSpecSchema).min(1),\n  addedEndpoints: z.array(z.union([z.string(), eModelEndpointSchema])).optional(),\n});\n\nexport type TSpecsConfig = z.infer<typeof specsConfigSchema>;\n","import { z } from 'zod';\nimport { EModelEndpoint } from './schemas';\nimport type { EndpointFileConfig, FileConfig } from './types/files';\n\nexport const supportsFiles = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.google]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const excelFileTypes = [\n  'application/vnd.ms-excel',\n  'application/msexcel',\n  'application/x-msexcel',\n  'application/x-ms-excel',\n  'application/x-excel',\n  'application/x-dos_ms_excel',\n  'application/xls',\n  'application/x-xls',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\nexport const fullMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'application/msword', // .doc files\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'text/vtt',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'image/heic',\n  'image/heif',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  'image/svg',\n  'image/svg+xml',\n  ...excelFileTypes,\n];\n\nexport const codeInterpreterMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'application/msword', // .doc files\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'image/heic',\n  'image/heif',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const retrievalMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n];\n\nexport const imageExtRegex = /\\.(jpg|jpeg|png|gif|webp|heic|heif)$/i;\n\nexport const excelMimeTypes =\n  /^application\\/(vnd\\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet)$/;\n\nexport const textMimeTypes =\n  /^(text\\/(x-c|x-csharp|tab-separated-values|x-c\\+\\+|x-h|x-java|html|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|css|vtt|javascript))$/;\n\nexport const applicationMimeTypes =\n  /^(application\\/(epub\\+zip|json|pdf|x-tar|typescript|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation|spreadsheetml\\.sheet)|msword|vnd\\.ms-excel|xml|zip))$/;\n\nexport const imageMimeTypes = /^image\\/(jpeg|gif|png|webp|heic|heif)$/;\n\nexport const audioMimeTypes =\n  /^audio\\/(mp3|mpeg|mpeg3|wav|wave|x-wav|ogg|vorbis|mp4|x-m4a|flac|x-flac|webm)$/;\n\nexport const defaultOCRMimeTypes = [\n  imageMimeTypes, // Imágenes para OCR\n  // Solo documentos nativos de Bedrock (sin PowerPoint ni EPUB)\n  /^application\\/pdf$/,\n  /^application\\/msword$/,  // .doc files\n  /^application\\/vnd\\.openxmlformats-officedocument\\.wordprocessingml\\.document$/,  // .docx files\n  /^application\\/vnd\\.ms-excel$/,  // .xls files\n  /^application\\/vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet$/,  // .xlsx files\n  /^text\\/csv$/,  // .csv files\n  /^application\\/csv$/,  // .csv files (alt MIME type)\n];\n\nexport const defaultTextMimeTypes = [\n  textMimeTypes,\n  /^application\\/json$/, // JSON files for text processing\n];\n\nexport const defaultSTTMimeTypes = [audioMimeTypes];\n\n// Tipos de archivos que Bedrock Converse puede procesar nativamente sin OCR\n// Incluye documentos binarios/complejos y ahora también CSV\nexport const bedrockNativeDocumentMimeTypes = [\n  /^application\\/pdf$/,\n  /^application\\/msword$/,  // .doc files\n  /^application\\/vnd\\.openxmlformats-officedocument\\.wordprocessingml\\.document$/,  // .docx files\n  /^application\\/vnd\\.ms-excel$/,  // .xls files\n  /^application\\/vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet$/,  // .xlsx files\n  /^text\\/csv$/,  // .csv files - procesados nativamente por Bedrock\n  /^application\\/csv$/,  // .csv files (alt MIME type)\n];\n\nexport const supportedMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n  audioMimeTypes,\n  /** Supported by LC Code Interpreter PAI */\n  /^image\\/(svg|svg\\+xml)$/,\n  /** CSV files - processed natively by Bedrock */\n  /^text\\/csv$/,\n  /^application\\/csv$/,\n];\n\nexport const codeInterpreterMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n  /** CSV files - processed natively by Bedrock */\n  /^text\\/csv$/,\n  /^application\\/csv$/,\n];\n\nexport const codeTypeMapping: { [key: string]: string } = {\n  c: 'text/x-c',\n  cs: 'text/x-csharp',\n  cpp: 'text/x-c++',\n  h: 'text/x-h',\n  md: 'text/markdown',\n  php: 'text/x-php',\n  py: 'text/x-python',\n  rb: 'text/x-ruby',\n  tex: 'text/x-tex',\n  js: 'text/javascript',\n  sh: 'application/x-sh',\n  ts: 'application/typescript',\n  tar: 'application/x-tar',\n  zip: 'application/zip',\n  yml: 'application/x-yaml',\n  yaml: 'application/x-yaml',\n  log: 'text/plain',\n  tsv: 'text/tab-separated-values',\n  csv: 'text/csv', // CSV files - processed natively by Bedrock\n  // Document types\n  doc: 'application/msword',\n  docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  xls: 'application/vnd.ms-excel',\n  xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n};\n\nexport const retrievalMimeTypes = [\n  /^(text\\/(x-c|x-c\\+\\+|x-h|html|x-java|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|vtt|xml))$/,\n  /^(application\\/(json|pdf|msword|vnd\\.ms-excel|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation)))$/,\n];\n\nexport const megabyte = 1024 * 1024;\n/** Helper function to get megabytes value */\nexport const mbToBytes = (mb: number): number => mb * megabyte;\n\nconst defaultSizeLimit = mbToBytes(512);\nconst defaultTokenLimit = 100000;\nconst assistantsFileConfig = {\n  fileLimit: 10,\n  fileSizeLimit: defaultSizeLimit,\n  totalSizeLimit: defaultSizeLimit,\n  supportedMimeTypes,\n  disabled: false,\n};\n\nexport const fileConfig = {\n  endpoints: {\n    [EModelEndpoint.assistants]: assistantsFileConfig,\n    [EModelEndpoint.azureAssistants]: assistantsFileConfig,\n    [EModelEndpoint.agents]: assistantsFileConfig,\n    default: {\n      fileLimit: 10,\n      fileSizeLimit: defaultSizeLimit,\n      totalSizeLimit: defaultSizeLimit,\n      supportedMimeTypes,\n      disabled: false,\n    },\n  },\n  serverFileSizeLimit: defaultSizeLimit,\n  avatarSizeLimit: mbToBytes(2),\n  fileTokenLimit: defaultTokenLimit,\n  clientImageResize: {\n    enabled: false,\n    maxWidth: 1900,\n    maxHeight: 1900,\n    quality: 0.92,\n  },\n  ocr: {\n    supportedMimeTypes: defaultOCRMimeTypes,\n  },\n  text: {\n    supportedMimeTypes: defaultTextMimeTypes,\n  },\n  stt: {\n    supportedMimeTypes: defaultSTTMimeTypes,\n  },\n  checkType: function (fileType: string, supportedTypes: RegExp[] = supportedMimeTypes) {\n    return supportedTypes.some((regex) => regex.test(fileType));\n  },\n};\n\nconst supportedMimeTypesSchema = z\n  .array(z.any())\n  .optional()\n  .refine(\n    (mimeTypes) => {\n      if (!mimeTypes) {\n        return true;\n      }\n      return mimeTypes.every(\n        (mimeType) => mimeType instanceof RegExp || typeof mimeType === 'string',\n      );\n    },\n    {\n      message: 'Each mimeType must be a string or a RegExp object.',\n    },\n  );\n\nexport const endpointFileConfigSchema = z.object({\n  disabled: z.boolean().optional(),\n  fileLimit: z.number().min(0).optional(),\n  fileSizeLimit: z.number().min(0).optional(),\n  totalSizeLimit: z.number().min(0).optional(),\n  supportedMimeTypes: supportedMimeTypesSchema.optional(),\n});\n\nexport const fileConfigSchema = z.object({\n  endpoints: z.record(endpointFileConfigSchema).optional(),\n  serverFileSizeLimit: z.number().min(0).optional(),\n  avatarSizeLimit: z.number().min(0).optional(),\n  fileTokenLimit: z.number().min(0).optional(),\n  imageGeneration: z\n    .object({\n      percentage: z.number().min(0).max(100).optional(),\n      px: z.number().min(0).optional(),\n    })\n    .optional(),\n  clientImageResize: z\n    .object({\n      enabled: z.boolean().optional(),\n      maxWidth: z.number().min(0).optional(),\n      maxHeight: z.number().min(0).optional(),\n      quality: z.number().min(0).max(1).optional(),\n    })\n    .optional(),\n  ocr: z\n    .object({\n      supportedMimeTypes: supportedMimeTypesSchema.optional(),\n    })\n    .optional(),\n  text: z\n    .object({\n      supportedMimeTypes: supportedMimeTypesSchema.optional(),\n    })\n    .optional(),\n});\n\n/** Helper function to safely convert string patterns to RegExp objects */\nexport const convertStringsToRegex = (patterns: string[]): RegExp[] =>\n  patterns.reduce((acc: RegExp[], pattern) => {\n    try {\n      const regex = new RegExp(pattern);\n      acc.push(regex);\n    } catch (error) {\n      console.error(`Invalid regex pattern \"${pattern}\" skipped.`, error);\n    }\n    return acc;\n  }, []);\n\nexport function mergeFileConfig(dynamic: z.infer<typeof fileConfigSchema> | undefined): FileConfig {\n  const mergedConfig: FileConfig = {\n    ...fileConfig,\n    ocr: {\n      ...fileConfig.ocr,\n      supportedMimeTypes: fileConfig.ocr?.supportedMimeTypes || [],\n    },\n    text: {\n      ...fileConfig.text,\n      supportedMimeTypes: fileConfig.text?.supportedMimeTypes || [],\n    },\n    stt: {\n      ...fileConfig.stt,\n      supportedMimeTypes: fileConfig.stt?.supportedMimeTypes || [],\n    },\n  };\n  if (!dynamic) {\n    return mergedConfig;\n  }\n\n  if (dynamic.serverFileSizeLimit !== undefined) {\n    mergedConfig.serverFileSizeLimit = mbToBytes(dynamic.serverFileSizeLimit);\n  }\n\n  if (dynamic.avatarSizeLimit !== undefined) {\n    mergedConfig.avatarSizeLimit = mbToBytes(dynamic.avatarSizeLimit);\n  }\n\n  if (dynamic.fileTokenLimit !== undefined) {\n    mergedConfig.fileTokenLimit = dynamic.fileTokenLimit;\n  }\n\n  // Merge clientImageResize configuration\n  if (dynamic.clientImageResize !== undefined) {\n    mergedConfig.clientImageResize = {\n      ...mergedConfig.clientImageResize,\n      ...dynamic.clientImageResize,\n    };\n  }\n\n  if (dynamic.ocr !== undefined) {\n    mergedConfig.ocr = {\n      ...mergedConfig.ocr,\n      ...dynamic.ocr,\n    };\n    if (dynamic.ocr.supportedMimeTypes) {\n      mergedConfig.ocr.supportedMimeTypes = convertStringsToRegex(dynamic.ocr.supportedMimeTypes);\n    }\n  }\n\n  if (dynamic.text !== undefined) {\n    mergedConfig.text = {\n      ...mergedConfig.text,\n      ...dynamic.text,\n    };\n    if (dynamic.text.supportedMimeTypes) {\n      mergedConfig.text.supportedMimeTypes = convertStringsToRegex(dynamic.text.supportedMimeTypes);\n    }\n  }\n\n  if (!dynamic.endpoints) {\n    return mergedConfig;\n  }\n\n  for (const key in dynamic.endpoints) {\n    const dynamicEndpoint = (dynamic.endpoints as Record<string, EndpointFileConfig>)[key];\n\n    if (!mergedConfig.endpoints[key]) {\n      mergedConfig.endpoints[key] = {};\n    }\n\n    const mergedEndpoint = mergedConfig.endpoints[key];\n\n    if (dynamicEndpoint.disabled === true) {\n      mergedEndpoint.disabled = true;\n      mergedEndpoint.fileLimit = 0;\n      mergedEndpoint.fileSizeLimit = 0;\n      mergedEndpoint.totalSizeLimit = 0;\n      mergedEndpoint.supportedMimeTypes = [];\n      continue;\n    }\n\n    if (dynamicEndpoint.fileSizeLimit !== undefined) {\n      mergedEndpoint.fileSizeLimit = mbToBytes(dynamicEndpoint.fileSizeLimit);\n    }\n\n    if (dynamicEndpoint.totalSizeLimit !== undefined) {\n      mergedEndpoint.totalSizeLimit = mbToBytes(dynamicEndpoint.totalSizeLimit);\n    }\n\n    const configKeys = ['fileLimit'] as const;\n    configKeys.forEach((field) => {\n      if (dynamicEndpoint[field] !== undefined) {\n        mergedEndpoint[field] = dynamicEndpoint[field];\n      }\n    });\n\n    if (dynamicEndpoint.supportedMimeTypes) {\n      mergedEndpoint.supportedMimeTypes = convertStringsToRegex(\n        dynamicEndpoint.supportedMimeTypes as unknown as string[],\n      );\n    }\n  }\n\n  return mergedConfig;\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\nimport { StepTypes, ContentTypes, ToolCallTypes } from './runs';\nimport type { TAttachment, TPlugin } from 'src/schemas';\nimport type { FunctionToolCall } from './assistants';\n\nexport namespace Agents {\n  export type MessageType = 'human' | 'ai' | 'generic' | 'system' | 'function' | 'tool' | 'remove';\n\n  export type ImageDetail = 'auto' | 'low' | 'high';\n\n  export type ReasoningContentText = {\n    type: ContentTypes.THINK;\n    think: string;\n  };\n\n  export type MessageContentText = {\n    type: ContentTypes.TEXT;\n    text: string;\n    tool_call_ids?: string[];\n  };\n\n  export type AgentUpdate = {\n    type: ContentTypes.AGENT_UPDATE;\n    agent_update: {\n      index: number;\n      runId: string;\n      agentId: string;\n    };\n  };\n\n  export type MessageContentImageUrl = {\n    type: ContentTypes.IMAGE_URL;\n    image_url: string | { url: string; detail?: ImageDetail };\n  };\n\n  export type MessageContentComplex =\n    | ReasoningContentText\n    | AgentUpdate\n    | MessageContentText\n    | MessageContentImageUrl\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | (Record<string, any> & { type?: ContentTypes | string })\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | (Record<string, any> & { type?: never });\n\n  export type MessageContent = string | MessageContentComplex[];\n\n  /**\n   * A call to a tool.\n   */\n  export type ToolCall = {\n    /** Type (\"tool_call\") according to Assistants Tool Call Structure */\n    type: ToolCallTypes.TOOL_CALL;\n    /** The name of the tool to be called */\n    name: string;\n\n    /** The arguments to the tool call */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args?: string | Record<string, any>;\n\n    /** If provided, an identifier associated with the tool call */\n    id?: string;\n    /** If provided, the output of the tool call */\n    output?: string;\n    /** Auth URL */\n    auth?: string;\n    /** Expiration time */\n    expires_at?: number;\n  };\n\n  export type ToolEndEvent = {\n    /** The Step Id of the Tool Call */\n    id: string;\n    /** The Completed Tool Call */\n    tool_call?: ToolCall;\n    /** The content index of the tool call */\n    index: number;\n  };\n\n  export type ToolCallContent = {\n    type: ContentTypes.TOOL_CALL;\n    tool_call?: ToolCall;\n  };\n\n  /**\n   * A chunk of a tool call (e.g., as part of a stream).\n   * When merging ToolCallChunks (e.g., via AIMessageChunk.__add__),\n   * all string attributes are concatenated. Chunks are only merged if their\n   * values of `index` are equal and not None.\n   *\n   * @example\n   * ```ts\n   * const leftChunks = [\n   *   {\n   *     name: \"foo\",\n   *     args: '{\"a\":',\n   *     index: 0\n   *   }\n   * ];\n   *\n   * const leftAIMessageChunk = new AIMessageChunk({\n   *   content: \"\",\n   *   tool_call_chunks: leftChunks\n   * });\n   *\n   * const rightChunks = [\n   *   {\n   *     name: undefined,\n   *     args: '1}',\n   *     index: 0\n   *   }\n   * ];\n   *\n   * const rightAIMessageChunk = new AIMessageChunk({\n   *   content: \"\",\n   *   tool_call_chunks: rightChunks\n   * });\n   *\n   * const result = leftAIMessageChunk.concat(rightAIMessageChunk);\n   * // result.tool_call_chunks is equal to:\n   * // [\n   * //   {\n   * //     name: \"foo\",\n   * //     args: '{\"a\":1}'\n   * //     index: 0\n   * //   }\n   * // ]\n   * ```\n   *\n   * @property {string} [name] - If provided, a substring of the name of the tool to be called\n   * @property {string} [args] - If provided, a JSON substring of the arguments to the tool call\n   * @property {string} [id] - If provided, a substring of an identifier for the tool call\n   * @property {number} [index] - If provided, the index of the tool call in a sequence\n   */\n  export type ToolCallChunk = {\n    name?: string;\n\n    args?: string;\n\n    id?: string;\n\n    index?: number;\n\n    type?: 'tool_call_chunk';\n  };\n\n  /** Event names are of the format: on_[runnable_type]_(start|stream|end).\n\n  Runnable types are one of:\n\n  llm - used by non chat models\n  chat_model - used by chat models\n  prompt -- e.g., ChatPromptTemplate\n  tool -- LangChain tools\n  chain - most Runnables are of this type\n  Further, the events are categorized as one of:\n\n  start - when the runnable starts\n  stream - when the runnable is streaming\n  end - when the runnable ends\n  start, stream and end are associated with slightly different data payload.\n\n  Please see the documentation for EventData for more details. */\n  export type EventName = string;\n  export type RunStep = {\n    type: StepTypes;\n    id: string; // #new\n    runId?: string; // #new\n    index: number; // #new\n    stepIndex?: number; // #new\n    stepDetails: StepDetails;\n    usage: null | object;\n  };\n  /**\n   * Represents a run step delta i.e. any changed fields on a run step during\n   * streaming.\n   */\n  export interface RunStepDeltaEvent {\n    /**\n     * The identifier of the run step, which can be referenced in API endpoints.\n     */\n    id: string;\n    /**\n     * The delta containing the fields that have changed on the run step.\n     */\n    delta: ToolCallDelta;\n  }\n  export type StepDetails = MessageCreationDetails | ToolCallsDetails;\n  export type MessageCreationDetails = {\n    type: StepTypes.MESSAGE_CREATION;\n    message_creation: {\n      message_id: string;\n    };\n  };\n  export type ToolCallsDetails = {\n    type: StepTypes.TOOL_CALLS;\n    tool_calls: AgentToolCall[];\n  };\n  export type ToolCallDelta = {\n    type: StepTypes.TOOL_CALLS | string;\n    tool_calls?: ToolCallChunk[];\n    auth?: string;\n    expires_at?: number;\n  };\n  export type AgentToolCall = FunctionToolCall | ToolCall;\n  export interface ExtendedMessageContent {\n    type?: string;\n    text?: string;\n    input?: string;\n    index?: number;\n    id?: string;\n    name?: string;\n  }\n  /**\n   * Represents a message delta i.e. any changed fields on a message during\n   * streaming.\n   */\n  export interface MessageDeltaEvent {\n    /**\n     * The identifier of the message, which can be referenced in API endpoints.\n     */\n    id: string;\n    /**\n     * The delta containing the fields that have changed on the Message.\n     */\n    delta: MessageDelta;\n  }\n  /**\n   * The delta containing the fields that have changed on the Message.\n   */\n  export interface MessageDelta {\n    /**\n     * The content of the message in array of text and/or images.\n     */\n    content?: Agents.MessageContentComplex[];\n  }\n\n  /**\n   * Represents a reasoning delta i.e. any changed fields on a message during\n   * streaming.\n   */\n  export interface ReasoningDeltaEvent {\n    /**\n     * The identifier of the message, which can be referenced in API endpoints.\n     */\n    id: string;\n\n    /**\n     * The delta containing the fields that have changed.\n     */\n    delta: ReasoningDelta;\n  }\n\n  /**\n   * The reasoning delta containing the fields that have changed on the Message.\n   */\n  export interface ReasoningDelta {\n    /**\n     * The content of the message in array of text and/or images.\n     */\n    content?: MessageContentComplex[];\n  }\n\n  export type ReasoningDeltaUpdate = { type: ContentTypes.THINK; think: string };\n  export type ContentType =\n    | ContentTypes.THINK\n    | ContentTypes.TEXT\n    | ContentTypes.IMAGE_URL\n    | string;\n}\n\nexport type ToolCallResult = {\n  user: string;\n  toolId: string;\n  result?: unknown;\n  messageId: string;\n  partIndex?: number;\n  blockIndex?: number;\n  conversationId: string;\n  attachments?: TAttachment[];\n};\n\nexport enum AuthTypeEnum {\n  ServiceHttp = 'service_http',\n  OAuth = 'oauth',\n  None = 'none',\n}\n\nexport enum AuthorizationTypeEnum {\n  Bearer = 'bearer',\n  Basic = 'basic',\n  Custom = 'custom',\n}\n\nexport enum TokenExchangeMethodEnum {\n  DefaultPost = 'default_post',\n  BasicAuthHeader = 'basic_auth_header',\n}\n\nexport type Action = {\n  action_id: string;\n  type?: string;\n  settings?: Record<string, unknown>;\n  metadata: ActionMetadata;\n  version: number | string;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type ActionMetadata = {\n  api_key?: string;\n  auth?: ActionAuth;\n  domain?: string;\n  privacy_policy_url?: string;\n  raw_spec?: string;\n  oauth_client_id?: string;\n  oauth_client_secret?: string;\n};\n\nexport type ActionAuth = {\n  authorization_type?: AuthorizationTypeEnum;\n  custom_auth_header?: string;\n  type?: AuthTypeEnum;\n  authorization_content_type?: string;\n  authorization_url?: string;\n  client_url?: string;\n  scope?: string;\n  token_exchange_method?: TokenExchangeMethodEnum;\n};\n\nexport type ActionMetadataRuntime = ActionMetadata & {\n  oauth_access_token?: string;\n  oauth_refresh_token?: string;\n  oauth_token_expires_at?: Date;\n};\n\nexport type MCP = {\n  mcp_id: string;\n  metadata: MCPMetadata;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id?: string });\n\nexport type MCPMetadata = Omit<ActionMetadata, 'auth'> & {\n  name?: string;\n  description?: string;\n  url?: string;\n  tools?: string[];\n  auth?: MCPAuth;\n  icon?: string;\n  trust?: boolean;\n};\n\nexport type MCPAuth = ActionAuth;\n\nexport type AgentToolType = {\n  tool_id: string;\n  metadata: ToolMetadata;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id?: string });\n\nexport type ToolMetadata = TPlugin;\n","import { z } from 'zod';\nimport { TokenExchangeMethodEnum } from './types/agents';\nimport { extractEnvVariable } from './utils';\n\nconst BaseOptionsSchema = z.object({\n  /**\n   * Controls whether the MCP server is initialized during application startup.\n   * - true (default): Server is initialized during app startup and included in app-level connections\n   * - false: Skips initialization at startup and excludes from app-level connections - useful for servers\n   *   requiring manual authentication (e.g., GitHub PAT tokens) that need to be configured through the UI after startup\n   */\n  startup: z.boolean().optional(),\n  iconPath: z.string().optional(),\n  timeout: z.number().optional(),\n  initTimeout: z.number().optional(),\n  /** Controls visibility in chat dropdown menu (MCPSelect) */\n  chatMenu: z.boolean().optional(),\n  /**\n   * Controls server instruction behavior:\n   * - undefined/not set: No instructions included (default)\n   * - true: Use server-provided instructions\n   * - string: Use custom instructions (overrides server-provided)\n   */\n  serverInstructions: z.union([z.boolean(), z.string()]).optional(),\n  /**\n   * Whether this server requires OAuth authentication\n   * If not specified, will be auto-detected during construction\n   */\n  requiresOAuth: z.boolean().optional(),\n  /**\n   * OAuth configuration for SSE and Streamable HTTP transports\n   * - Optional: OAuth can be auto-discovered on 401 responses\n   * - Pre-configured values will skip discovery steps\n   */\n  oauth: z\n    .object({\n      /** OAuth authorization endpoint (optional - can be auto-discovered) */\n      authorization_url: z.string().url().optional(),\n      /** OAuth token endpoint (optional - can be auto-discovered) */\n      token_url: z.string().url().optional(),\n      /** OAuth client ID (optional - can use dynamic registration) */\n      client_id: z.string().optional(),\n      /** OAuth client secret (optional - can use dynamic registration) */\n      client_secret: z.string().optional(),\n      /** OAuth scopes to request */\n      scope: z.string().optional(),\n      /** OAuth redirect URI (defaults to /api/mcp/{serverName}/oauth/callback) */\n      redirect_uri: z.string().url().optional(),\n      /** Token exchange method */\n      token_exchange_method: z.nativeEnum(TokenExchangeMethodEnum).optional(),\n      /** Supported grant types (defaults to ['authorization_code', 'refresh_token']) */\n      grant_types_supported: z.array(z.string()).optional(),\n      /** Supported token endpoint authentication methods (defaults to ['client_secret_basic', 'client_secret_post']) */\n      token_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n      /** Supported response types (defaults to ['code']) */\n      response_types_supported: z.array(z.string()).optional(),\n      /** Supported code challenge methods (defaults to ['S256', 'plain']) */\n      code_challenge_methods_supported: z.array(z.string()).optional(),\n      /** OAuth revocation endpoint (optional - can be auto-discovered) */\n      revocation_endpoint: z.string().url().optional(),\n      /** OAuth revocation endpoint authentication methods supported (optional - can be auto-discovered) */\n      revocation_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n    })\n    .optional(),\n  customUserVars: z\n    .record(\n      z.string(),\n      z.object({\n        title: z.string(),\n        description: z.string(),\n      }),\n    )\n    .optional(),\n});\n\nexport const StdioOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('stdio').optional(),\n  /**\n   * The executable to run to start the server.\n   */\n  command: z.string(),\n  /**\n   * Command line arguments to pass to the executable.\n   */\n  args: z.array(z.string()),\n  /**\n   * The environment to use when spawning the process.\n   *\n   * If not specified, the result of getDefaultEnvironment() will be used.\n   * Environment variables can be referenced using ${VAR_NAME} syntax.\n   */\n  env: z\n    .record(z.string(), z.string())\n    .optional()\n    .transform((env) => {\n      if (!env) {\n        return env;\n      }\n\n      const processedEnv: Record<string, string> = {};\n      for (const [key, value] of Object.entries(env)) {\n        processedEnv[key] = extractEnvVariable(value);\n      }\n      return processedEnv;\n    }),\n  /**\n   * How to handle stderr of the child process. This matches the semantics of Node's `child_process.spawn`.\n   *\n   * @type {import('node:child_process').IOType | import('node:stream').Stream | number}\n   *\n   * The default is \"inherit\", meaning messages to stderr will be printed to the parent process's stderr.\n   */\n  stderr: z.any().optional(),\n});\n\nexport const WebSocketOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('websocket').optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol === 'ws:' || protocol === 'wss:';\n      },\n      {\n        message: 'WebSocket URL must start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const SSEOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('sse').optional(),\n  headers: z.record(z.string(), z.string()).optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol !== 'ws:' && protocol !== 'wss:';\n      },\n      {\n        message: 'SSE URL must not start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const StreamableHTTPOptionsSchema = BaseOptionsSchema.extend({\n  type: z.union([z.literal('streamable-http'), z.literal('http')]),\n  headers: z.record(z.string(), z.string()).optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol !== 'ws:' && protocol !== 'wss:';\n      },\n      {\n        message: 'Streamable HTTP URL must not start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const MCPOptionsSchema = z.union([\n  StdioOptionsSchema,\n  WebSocketOptionsSchema,\n  SSEOptionsSchema,\n  StreamableHTTPOptionsSchema,\n]);\n\nexport const MCPServersSchema = z.record(z.string(), MCPOptionsSchema);\n\nexport type MCPOptions = z.infer<typeof MCPOptionsSchema>;\n","import type { AssistantsEndpoint } from './schemas';\nimport * as q from './types/queries';\nimport { ResourceType } from './accessPermissions';\n\nlet BASE_URL = '';\nif (\n  typeof process === 'undefined' ||\n  (process as typeof process & { browser?: boolean }).browser === true\n) {\n  // process is only available in node context, or process.browser is true in client-side code\n  // This is to ensure that the BASE_URL is set correctly based on the <base>\n  // element in the HTML document, if it exists.\n  const baseEl = document.querySelector('base');\n  BASE_URL = baseEl?.getAttribute('href') || '/';\n}\n\nif (BASE_URL && BASE_URL.endsWith('/')) {\n  BASE_URL = BASE_URL.slice(0, -1);\n}\n\nexport const apiBaseUrl = () => BASE_URL;\n\n// Testing this buildQuery function\nconst buildQuery = (params: Record<string, unknown>): string => {\n  const query = Object.entries(params)\n    .filter(([, value]) => {\n      if (Array.isArray(value)) {\n        return value.length > 0;\n      }\n      return value !== undefined && value !== null && value !== '';\n    })\n    .map(([key, value]) => {\n      if (Array.isArray(value)) {\n        return value.map((v) => `${key}=${encodeURIComponent(v)}`).join('&');\n      }\n      return `${key}=${encodeURIComponent(String(value))}`;\n    })\n    .join('&');\n  return query ? `?${query}` : '';\n};\n\nexport const health = () => `${BASE_URL}/health`;\nexport const user = () => `${BASE_URL}/api/user`;\n\nexport const balance = () => `${BASE_URL}/api/balance`;\n\nexport const userPlugins = () => `${BASE_URL}/api/user/plugins`;\n\nexport const deleteUser = () => `${BASE_URL}/api/user/delete`;\n\nconst messagesRoot = `${BASE_URL}/api/messages`;\n\nexport const messages = (params: q.MessagesListParams) => {\n  const { conversationId, messageId, ...rest } = params;\n\n  if (conversationId && messageId) {\n    return `${messagesRoot}/${conversationId}/${messageId}`;\n  }\n\n  if (conversationId) {\n    return `${messagesRoot}/${conversationId}`;\n  }\n\n  return `${messagesRoot}${buildQuery(rest)}`;\n};\n\nexport const messagesArtifacts = (messageId: string) => `${messagesRoot}/artifacts/${messageId}`;\n\nconst shareRoot = `${BASE_URL}/api/share`;\nexport const shareMessages = (shareId: string) => `${shareRoot}/${shareId}`;\nexport const getSharedLink = (conversationId: string) => `${shareRoot}/link/${conversationId}`;\nexport const getSharedLinks = (\n  pageSize: number,\n  isPublic: boolean,\n  sortBy: 'title' | 'createdAt',\n  sortDirection: 'asc' | 'desc',\n  search?: string,\n  cursor?: string,\n) =>\n  `${shareRoot}?pageSize=${pageSize}&isPublic=${isPublic}&sortBy=${sortBy}&sortDirection=${sortDirection}${\n    search ? `&search=${search}` : ''\n  }${cursor ? `&cursor=${cursor}` : ''}`;\nexport const createSharedLink = (conversationId: string) => `${shareRoot}/${conversationId}`;\nexport const updateSharedLink = (shareId: string) => `${shareRoot}/${shareId}`;\n\nconst keysEndpoint = `${BASE_URL}/api/keys`;\n\nexport const keys = () => keysEndpoint;\n\nexport const userKeyQuery = (name: string) => `${keysEndpoint}?name=${name}`;\n\nexport const revokeUserKey = (name: string) => `${keysEndpoint}/${name}`;\n\nexport const revokeAllUserKeys = () => `${keysEndpoint}?all=true`;\n\nexport const conversationsRoot = `${BASE_URL}/api/convos`;\n\nexport const conversations = (params: q.ConversationListParams) => {\n  return `${conversationsRoot}${buildQuery(params)}`;\n};\n\nexport const conversationById = (id: string) => `${conversationsRoot}/${id}`;\n\nexport const genTitle = () => `${conversationsRoot}/gen_title`;\n\nexport const updateConversation = () => `${conversationsRoot}/update`;\n\nexport const deleteConversation = () => `${conversationsRoot}`;\n\nexport const deleteAllConversation = () => `${conversationsRoot}/all`;\n\nexport const importConversation = () => `${conversationsRoot}/import`;\n\nexport const forkConversation = () => `${conversationsRoot}/fork`;\n\nexport const duplicateConversation = () => `${conversationsRoot}/duplicate`;\n\nexport const search = (q: string, cursor?: string | null) =>\n  `${BASE_URL}/api/search?q=${q}${cursor ? `&cursor=${cursor}` : ''}`;\n\nexport const searchEnabled = () => `${BASE_URL}/api/search/enable`;\n\nexport const presets = () => `${BASE_URL}/api/presets`;\n\nexport const deletePreset = () => `${BASE_URL}/api/presets/delete`;\n\nexport const aiEndpoints = () => `${BASE_URL}/api/endpoints`;\n\nexport const models = () => `${BASE_URL}/api/models`;\n\nexport const tokenizer = () => `${BASE_URL}/api/tokenizer`;\n\nexport const login = () => `${BASE_URL}/api/auth/login`;\n\nexport const logout = () => `${BASE_URL}/api/auth/logout`;\n\nexport const register = () => `${BASE_URL}/api/auth/register`;\n\nexport const loginFacebook = () => `${BASE_URL}/api/auth/facebook`;\n\nexport const loginGoogle = () => `${BASE_URL}/api/auth/google`;\n\nexport const refreshToken = (retry?: boolean) =>\n  `${BASE_URL}/api/auth/refresh${retry === true ? '?retry=true' : ''}`;\n\nexport const requestPasswordReset = () => `${BASE_URL}/api/auth/requestPasswordReset`;\n\nexport const resetPassword = () => `${BASE_URL}/api/auth/resetPassword`;\n\nexport const verifyEmail = () => `${BASE_URL}/api/user/verify`;\n\nexport const resendVerificationEmail = () => `${BASE_URL}/api/user/verify/resend`;\n\nexport const plugins = () => `${BASE_URL}/api/plugins`;\n\nexport const mcpReinitialize = (serverName: string) =>\n  `${BASE_URL}/api/mcp/${serverName}/reinitialize`;\nexport const mcpConnectionStatus = () => `${BASE_URL}/api/mcp/connection/status`;\nexport const mcpServerConnectionStatus = (serverName: string) =>\n  `${BASE_URL}/api/mcp/connection/status/${serverName}`;\nexport const mcpAuthValues = (serverName: string) => {\n  return `${BASE_URL}/api/mcp/${serverName}/auth-values`;\n};\n\nexport const cancelMCPOAuth = (serverName: string) => {\n  return `${BASE_URL}/api/mcp/oauth/cancel/${serverName}`;\n};\n\nexport const config = () => `${BASE_URL}/api/config`;\n\nexport const prompts = () => `${BASE_URL}/api/prompts`;\n\nexport const addPromptToGroup = (groupId: string) =>\n  `${BASE_URL}/api/prompts/groups/${groupId}/prompts`;\n\nexport const assistants = ({\n  path = '',\n  options,\n  version,\n  endpoint,\n  isAvatar,\n}: {\n  path?: string;\n  options?: object;\n  endpoint?: AssistantsEndpoint;\n  version: number | string;\n  isAvatar?: boolean;\n}) => {\n  let url = isAvatar === true ? `${images()}/assistants` : `${BASE_URL}/api/assistants/v${version}`;\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (endpoint) {\n    options = {\n      ...(options ?? {}),\n      endpoint,\n    };\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const agents = ({ path = '', options }: { path?: string; options?: object }) => {\n  let url = `${BASE_URL}/api/agents`;\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const revertAgentVersion = (agent_id: string) => `${agents({ path: `${agent_id}/revert` })}`;\n\nexport const files = () => `${BASE_URL}/api/files`;\nexport const fileUpload = () => `${BASE_URL}/api/files`;\nexport const fileDelete = () => `${BASE_URL}/api/files`;\nexport const fileDownload = (userId: string, fileId: string) =>\n  `${BASE_URL}/api/files/download/${userId}/${fileId}`;\nexport const fileConfig = () => `${BASE_URL}/api/files/config`;\nexport const agentFiles = (agentId: string) => `${BASE_URL}/api/files/agent/${agentId}`;\n\nexport const images = () => `${files()}/images`;\n\nexport const avatar = () => `${images()}/avatar`;\n\nexport const speech = () => `${files()}/speech`;\n\nexport const speechToText = () => `${speech()}/stt`;\n\nexport const textToSpeech = () => `${speech()}/tts`;\n\nexport const textToSpeechManual = () => `${textToSpeech()}/manual`;\n\nexport const textToSpeechVoices = () => `${textToSpeech()}/voices`;\n\nexport const getCustomConfigSpeech = () => `${speech()}/config/get`;\n\nexport const getPromptGroup = (_id: string) => `${prompts()}/groups/${_id}`;\n\nexport const getPromptGroupsWithFilters = (filter: object) => {\n  let url = `${prompts()}/groups`;\n  // Filter out undefined/null values\n  const cleanedFilter = Object.entries(filter).reduce(\n    (acc, [key, value]) => {\n      if (value !== undefined && value !== null && value !== '') {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {} as Record<string, string>,\n  );\n\n  if (Object.keys(cleanedFilter).length > 0) {\n    const queryParams = new URLSearchParams(cleanedFilter).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPromptsWithFilters = (filter: object) => {\n  let url = prompts();\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPrompt = (_id: string) => `${prompts()}/${_id}`;\n\nexport const getRandomPrompts = (limit: number, skip: number) =>\n  `${prompts()}/random?limit=${limit}&skip=${skip}`;\n\nexport const postPrompt = prompts;\n\nexport const updatePromptGroup = getPromptGroup;\n\nexport const updatePromptLabels = (_id: string) => `${getPrompt(_id)}/labels`;\n\nexport const updatePromptTag = (_id: string) => `${getPrompt(_id)}/tags/production`;\n\nexport const deletePromptGroup = getPromptGroup;\n\nexport const deletePrompt = ({ _id, groupId }: { _id: string; groupId: string }) => {\n  return `${prompts()}/${_id}?groupId=${groupId}`;\n};\n\nexport const getCategories = () => `${BASE_URL}/api/categories`;\n\nexport const getAllPromptGroups = () => `${prompts()}/all`;\n\n/* Roles */\nexport const roles = () => `${BASE_URL}/api/roles`;\nexport const getRole = (roleName: string) => `${roles()}/${roleName.toLowerCase()}`;\nexport const updatePromptPermissions = (roleName: string) => `${getRole(roleName)}/prompts`;\nexport const updateMemoryPermissions = (roleName: string) => `${getRole(roleName)}/memories`;\nexport const updateAgentPermissions = (roleName: string) => `${getRole(roleName)}/agents`;\nexport const updatePeoplePickerPermissions = (roleName: string) =>\n  `${getRole(roleName)}/people-picker`;\n\nexport const updateMarketplacePermissions = (roleName: string) =>\n  `${getRole(roleName)}/marketplace`;\n\n/* Conversation Tags */\nexport const conversationTags = (tag?: string) =>\n  `${BASE_URL}/api/tags${tag != null && tag ? `/${encodeURIComponent(tag)}` : ''}`;\n\nexport const conversationTagsList = (pageNumber: string, sort?: string, order?: string) =>\n  `${conversationTags()}/list?pageNumber=${pageNumber}${sort ? `&sort=${sort}` : ''}${\n    order ? `&order=${order}` : ''\n  }`;\n\nexport const addTagToConversation = (conversationId: string) =>\n  `${conversationTags()}/convo/${conversationId}`;\n\nexport const userTerms = () => `${BASE_URL}/api/user/terms`;\nexport const acceptUserTerms = () => `${BASE_URL}/api/user/terms/accept`;\nexport const banner = () => `${BASE_URL}/api/banner`;\n\n// Message Feedback\nexport const feedback = (conversationId: string, messageId: string) =>\n  `${BASE_URL}/api/messages/${conversationId}/${messageId}/feedback`;\n\n// Two-Factor Endpoints\nexport const enableTwoFactor = () => `${BASE_URL}/api/auth/2fa/enable`;\nexport const verifyTwoFactor = () => `${BASE_URL}/api/auth/2fa/verify`;\nexport const confirmTwoFactor = () => `${BASE_URL}/api/auth/2fa/confirm`;\nexport const disableTwoFactor = () => `${BASE_URL}/api/auth/2fa/disable`;\nexport const regenerateBackupCodes = () => `${BASE_URL}/api/auth/2fa/backup/regenerate`;\nexport const verifyTwoFactorTemp = () => `${BASE_URL}/api/auth/2fa/verify-temp`;\n\n/* Memories */\nexport const memories = () => `${BASE_URL}/api/memories`;\nexport const memory = (key: string) => `${memories()}/${encodeURIComponent(key)}`;\nexport const memoryPreferences = () => `${memories()}/preferences`;\n\nexport const searchPrincipals = (params: q.PrincipalSearchParams) => {\n  const { q: query, limit, types } = params;\n  let url = `${BASE_URL}/api/permissions/search-principals?q=${encodeURIComponent(query)}`;\n\n  if (limit !== undefined) {\n    url += `&limit=${limit}`;\n  }\n\n  if (types && types.length > 0) {\n    url += `&types=${types.join(',')}`;\n  }\n\n  return url;\n};\n\nexport const getAccessRoles = (resourceType: ResourceType) =>\n  `${BASE_URL}/api/permissions/${resourceType}/roles`;\n\nexport const getResourcePermissions = (resourceType: ResourceType, resourceId: string) =>\n  `${BASE_URL}/api/permissions/${resourceType}/${resourceId}`;\n\nexport const updateResourcePermissions = (resourceType: ResourceType, resourceId: string) =>\n  `${BASE_URL}/api/permissions/${resourceType}/${resourceId}`;\n\nexport const getEffectivePermissions = (resourceType: ResourceType, resourceId: string) =>\n  `${BASE_URL}/api/permissions/${resourceType}/${resourceId}/effective`;\n\n// SharePoint Graph API Token\nexport const graphToken = (scopes: string) =>\n  `${BASE_URL}/api/auth/graph-token?scopes=${encodeURIComponent(scopes)}`;\n","import { z } from 'zod';\nimport type { ZodError } from 'zod';\nimport type { TModelsConfig } from './types';\nimport { EModelEndpoint, eModelEndpointSchema } from './schemas';\nimport { specsConfigSchema, TSpecsConfig } from './models';\nimport { fileConfigSchema } from './file-config';\nimport { FileSources } from './types/files';\nimport { MCPServersSchema } from './mcp';\nimport { apiBaseUrl } from './api-endpoints';\n\nexport const defaultSocialLogins = ['google', 'facebook', 'openid', 'github', 'discord', 'saml'];\n\nexport const defaultRetrievalModels = [\n  'gpt-4o',\n  'o1-preview-2024-09-12',\n  'o1-preview',\n  'o1-mini-2024-09-12',\n  'o1-mini',\n  'o3-mini',\n  'chatgpt-4o-latest',\n  'gpt-4o-2024-05-13',\n  'gpt-4o-2024-08-06',\n  'gpt-4o-mini',\n  'gpt-4o-mini-2024-07-18',\n  'gpt-4-turbo-preview',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-0125-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-0125',\n  'gpt-4-1106',\n];\n\nexport const excludedKeys = new Set([\n  'conversationId',\n  'title',\n  'iconURL',\n  'greeting',\n  'endpoint',\n  'endpointType',\n  'createdAt',\n  'updatedAt',\n  'expiredAt',\n  'messages',\n  'isArchived',\n  'tags',\n  'user',\n  '__v',\n  '_id',\n  'tools',\n  'model',\n  'files',\n  'spec',\n  'disableParams',\n]);\n\nexport enum SettingsViews {\n  default = 'default',\n  advanced = 'advanced',\n}\n\nexport const fileSourceSchema = z.nativeEnum(FileSources);\n\nexport const fileStrategiesSchema = z\n  .object({\n    default: fileSourceSchema.optional(),\n    avatar: fileSourceSchema.optional(),\n    image: fileSourceSchema.optional(),\n    document: fileSourceSchema.optional(),\n  })\n  .optional();\n\n// Helper type to extract the shape of the Zod object schema\ntype SchemaShape<T> = T extends z.ZodObject<infer U> ? U : never;\n\n// Helper type to determine the default value or undefined based on whether the field has a default\ntype DefaultValue<T> =\n  T extends z.ZodDefault<z.ZodTypeAny> ? ReturnType<T['_def']['defaultValue']> : undefined;\n\n// Extract default values or undefined from the schema shape\ntype ExtractDefaults<T> = {\n  [P in keyof T]: DefaultValue<T[P]>;\n};\n\nexport type SchemaDefaults<T> = ExtractDefaults<SchemaShape<T>>;\n\nexport type TConfigDefaults = SchemaDefaults<typeof configSchema>;\n\nexport function getSchemaDefaults<Schema extends z.AnyZodObject>(\n  schema: Schema,\n): ExtractDefaults<SchemaShape<Schema>> {\n  const shape = schema.shape;\n  const entries = Object.entries(shape).map(([key, value]) => {\n    if (value instanceof z.ZodDefault) {\n      // Extract default value if it exists\n      return [key, value._def.defaultValue()];\n    }\n    return [key, undefined];\n  });\n\n  // Create the object with the right types\n  return Object.fromEntries(entries) as ExtractDefaults<SchemaShape<Schema>>;\n}\n\nexport const modelConfigSchema = z\n  .object({\n    deploymentName: z.string().optional(),\n    version: z.string().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .or(z.boolean());\n\nexport type TAzureModelConfig = z.infer<typeof modelConfigSchema>;\n\nexport const azureBaseSchema = z.object({\n  apiKey: z.string(),\n  serverless: z.boolean().optional(),\n  instanceName: z.string().optional(),\n  deploymentName: z.string().optional(),\n  assistants: z.boolean().optional(),\n  addParams: z.record(z.any()).optional(),\n  dropParams: z.array(z.string()).optional(),\n  forcePrompt: z.boolean().optional(),\n  version: z.string().optional(),\n  baseURL: z.string().optional(),\n  additionalHeaders: z.record(z.any()).optional(),\n});\n\nexport type TAzureBaseSchema = z.infer<typeof azureBaseSchema>;\n\nexport const azureGroupSchema = z\n  .object({\n    group: z.string(),\n    models: z.record(z.string(), modelConfigSchema),\n  })\n  .required()\n  .and(azureBaseSchema);\n\nexport const azureGroupConfigsSchema = z.array(azureGroupSchema).min(1);\nexport type TAzureGroup = z.infer<typeof azureGroupSchema>;\nexport type TAzureGroups = z.infer<typeof azureGroupConfigsSchema>;\nexport type TAzureModelMapSchema = {\n  // deploymentName?: string;\n  // version?: string;\n  group: string;\n};\n\nexport type TAzureModelGroupMap = Record<string, TAzureModelMapSchema | undefined>;\nexport type TAzureGroupMap = Record<\n  string,\n  (TAzureBaseSchema & { models: Record<string, TAzureModelConfig | undefined> }) | undefined\n>;\n\nexport type TValidatedAzureConfig = {\n  modelNames: string[];\n  modelGroupMap: TAzureModelGroupMap;\n  groupMap: TAzureGroupMap;\n};\n\nexport type TAzureConfigValidationResult = TValidatedAzureConfig & {\n  isValid: boolean;\n  errors: (ZodError | string)[];\n};\n\nexport enum Capabilities {\n  code_interpreter = 'code_interpreter',\n  image_vision = 'image_vision',\n  retrieval = 'retrieval',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport enum AgentCapabilities {\n  hide_sequential_outputs = 'hide_sequential_outputs',\n  end_after_tools = 'end_after_tools',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  web_search = 'web_search',\n  artifacts = 'artifacts',\n  actions = 'actions',\n  tools = 'tools',\n  chain = 'chain',\n  ocr = 'ocr',\n}\n\nexport const defaultAssistantsVersion = {\n  [EModelEndpoint.assistants]: 2,\n  [EModelEndpoint.azureAssistants]: 1,\n};\n\nexport const baseEndpointSchema = z.object({\n  streamRate: z.number().optional(),\n  baseURL: z.string().optional(),\n  titlePrompt: z.string().optional(),\n  titleModel: z.string().optional(),\n  titleConvo: z.boolean().optional(),\n  titleMethod: z\n    .union([z.literal('completion'), z.literal('functions'), z.literal('structured')])\n    .optional(),\n  titleEndpoint: z.string().optional(),\n  titlePromptTemplate: z.string().optional(),\n});\n\nexport type TBaseEndpoint = z.infer<typeof baseEndpointSchema>;\n\nexport const bedrockEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    availableRegions: z.array(z.string()).optional(),\n  }),\n);\n\nexport const assistantEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAssistantEndpoint = z.infer<typeof assistantEndpointSchema>;\n\nexport const defaultAgentCapabilities = [\n  AgentCapabilities.execute_code,\n  AgentCapabilities.file_search,\n  AgentCapabilities.web_search,\n  AgentCapabilities.artifacts,\n  AgentCapabilities.actions,\n  AgentCapabilities.tools,\n  AgentCapabilities.chain,\n  AgentCapabilities.ocr,\n];\n\nexport const agentsEndpointSchema = baseEndpointSchema\n  .merge(\n    z.object({\n      /* agents specific */\n      recursionLimit: z.number().optional(),\n      disableBuilder: z.boolean().optional().default(false),\n      maxRecursionLimit: z.number().optional(),\n      maxCitations: z.number().min(1).max(50).optional().default(30),\n      maxCitationsPerFile: z.number().min(1).max(10).optional().default(7),\n      minRelevanceScore: z.number().min(0.0).max(1.0).optional().default(0.45),\n      allowedProviders: z.array(z.union([z.string(), eModelEndpointSchema])).optional(),\n      capabilities: z\n        .array(z.nativeEnum(AgentCapabilities))\n        .optional()\n        .default(defaultAgentCapabilities),\n    }),\n  )\n  .default({\n    disableBuilder: false,\n    capabilities: defaultAgentCapabilities,\n    maxCitations: 30,\n    maxCitationsPerFile: 7,\n    minRelevanceScore: 0.45,\n  });\n\nexport type TAgentsEndpoint = z.infer<typeof agentsEndpointSchema>;\n\nexport const endpointSchema = baseEndpointSchema.merge(\n  z.object({\n    name: z.string().refine((value) => !eModelEndpointSchema.safeParse(value).success, {\n      message: `Value cannot be one of the default endpoint (EModelEndpoint) values: ${Object.values(\n        EModelEndpoint,\n      ).join(', ')}`,\n    }),\n    apiKey: z.string(),\n    baseURL: z.string(),\n    models: z.object({\n      default: z.array(z.string()).min(1),\n      fetch: z.boolean().optional(),\n      userIdQuery: z.boolean().optional(),\n    }),\n    summarize: z.boolean().optional(),\n    summaryModel: z.string().optional(),\n    iconURL: z.string().optional(),\n    forcePrompt: z.boolean().optional(),\n    modelDisplayLabel: z.string().optional(),\n    headers: z.record(z.any()).optional(),\n    addParams: z.record(z.any()).optional(),\n    dropParams: z.array(z.string()).optional(),\n    customParams: z\n      .object({\n        defaultParamsEndpoint: z.string().default('custom'),\n        paramDefinitions: z.array(z.record(z.any())).optional(),\n      })\n      .strict(),\n    customOrder: z.number().optional(),\n    directEndpoint: z.boolean().optional(),\n    titleMessageRole: z.string().optional(),\n  }),\n);\n\nexport type TEndpoint = z.infer<typeof endpointSchema>;\n\nexport const azureEndpointSchema = z\n  .object({\n    groups: azureGroupConfigsSchema,\n    plugins: z.boolean().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .and(\n    endpointSchema\n      .pick({\n        streamRate: true,\n        titleConvo: true,\n        titleMethod: true,\n        titleModel: true,\n        titlePrompt: true,\n        titlePromptTemplate: true,\n        summarize: true,\n        summaryModel: true,\n        customOrder: true,\n      })\n      .partial(),\n  );\n\nexport type TAzureConfig = Omit<z.infer<typeof azureEndpointSchema>, 'groups'> &\n  TAzureConfigValidationResult;\n\nconst ttsOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsElevenLabsSchema = z.object({\n  url: z.string().optional(),\n  websocketUrl: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n  voice_settings: z\n    .object({\n      similarity_boost: z.number().optional(),\n      stability: z.number().optional(),\n      style: z.number().optional(),\n      use_speaker_boost: z.boolean().optional(),\n    })\n    .optional(),\n  pronunciation_dictionary_locators: z.array(z.string()).optional(),\n});\n\nconst ttsLocalaiSchema = z.object({\n  url: z.string(),\n  apiKey: z.string().optional(),\n  voices: z.array(z.string()),\n  backend: z.string(),\n});\n\nconst ttsSchema = z.object({\n  openai: ttsOpenaiSchema.optional(),\n  azureOpenAI: ttsAzureOpenAISchema.optional(),\n  elevenlabs: ttsElevenLabsSchema.optional(),\n  localai: ttsLocalaiSchema.optional(),\n});\n\nconst sttOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n});\n\nconst sttAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n});\n\nconst sttSchema = z.object({\n  openai: sttOpenaiSchema.optional(),\n  azureOpenAI: sttAzureOpenAISchema.optional(),\n});\n\nconst speechTab = z\n  .object({\n    conversationMode: z.boolean().optional(),\n    advancedMode: z.boolean().optional(),\n    speechToText: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineSTT: z.string().optional(),\n          languageSTT: z.string().optional(),\n          autoTranscribeAudio: z.boolean().optional(),\n          decibelValue: z.number().optional(),\n          autoSendText: z.number().optional(),\n        }),\n      )\n      .optional(),\n    textToSpeech: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineTTS: z.string().optional(),\n          voice: z.string().optional(),\n          languageTTS: z.string().optional(),\n          automaticPlayback: z.boolean().optional(),\n          playbackRate: z.number().optional(),\n          cacheTTS: z.boolean().optional(),\n        }),\n      )\n      .optional(),\n  })\n  .optional();\n\nexport enum RateLimitPrefix {\n  FILE_UPLOAD = 'FILE_UPLOAD',\n  IMPORT = 'IMPORT',\n  TTS = 'TTS',\n  STT = 'STT',\n}\n\nexport const rateLimitSchema = z.object({\n  fileUploads: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  conversationsImport: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  tts: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  stt: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n});\n\nexport enum EImageOutputType {\n  PNG = 'png',\n  WEBP = 'webp',\n  JPEG = 'jpeg',\n}\n\nconst termsOfServiceSchema = z.object({\n  externalUrl: z.string().optional(),\n  openNewTab: z.boolean().optional(),\n  modalAcceptance: z.boolean().optional(),\n  modalTitle: z.string().optional(),\n  modalContent: z.string().or(z.array(z.string())).optional(),\n});\n\nexport type TTermsOfService = z.infer<typeof termsOfServiceSchema>;\n\nconst mcpServersSchema = z.object({\n  placeholder: z.string().optional(),\n});\n\nexport type TMcpServersConfig = z.infer<typeof mcpServersSchema>;\n\nexport const interfaceSchema = z\n  .object({\n    privacyPolicy: z\n      .object({\n        externalUrl: z.string().optional(),\n        openNewTab: z.boolean().optional(),\n      })\n      .optional(),\n    termsOfService: termsOfServiceSchema.optional(),\n    customWelcome: z.string().optional(),\n    mcpServers: mcpServersSchema.optional(),\n    endpointsMenu: z.boolean().optional(),\n    modelSelect: z.boolean().optional(),\n    parameters: z.boolean().optional(),\n    sidePanel: z.boolean().optional(),\n    multiConvo: z.boolean().optional(),\n    modularChat: z.boolean().optional(),\n    bookmarks: z.boolean().optional(),\n    memories: z.boolean().optional(),\n    presets: z.boolean().optional(),\n    prompts: z.boolean().optional(),\n    agents: z.boolean().optional(),\n    temporaryChat: z.boolean().optional(),\n    temporaryChatRetention: z.number().min(1).max(8760).optional(),\n    speechToText: z.boolean().optional(),\n    textToSpeech: z.boolean().optional(),\n    editAgentMessages: z.boolean().optional(),\n    runCode: z.boolean().optional(),\n    webSearch: z.boolean().optional(),\n    peoplePicker: z\n      .object({\n        users: z.boolean().optional(),\n        groups: z.boolean().optional(),\n        roles: z.boolean().optional(),\n      })\n      .optional(),\n    marketplace: z\n      .object({\n        use: z.boolean().optional(),\n      })\n      .optional(),\n    fileSearch: z.boolean().optional(),\n    fileCitations: z.boolean().optional(),\n  })\n  .default({\n    endpointsMenu: true,\n    modelSelect: true,\n    parameters: true,\n    sidePanel: true,\n    presets: true,\n    multiConvo: true,\n    modularChat: true,\n    bookmarks: true,\n    memories: true,\n    prompts: true,\n    agents: true,\n    temporaryChat: true,\n    speechToText: true,\n    textToSpeech: true,\n    editAgentMessages: true,\n    runCode: true,\n    webSearch: true,\n    peoplePicker: {\n      users: true,\n      groups: true,\n      roles: true,\n    },\n    marketplace: {\n      use: false,\n    },\n    fileSearch: true,\n    fileCitations: true,\n  });\n\nexport type TInterfaceConfig = z.infer<typeof interfaceSchema>;\nexport type TBalanceConfig = z.infer<typeof balanceSchema>;\nexport type TTransactionsConfig = z.infer<typeof transactionsSchema>;\n\nexport const turnstileOptionsSchema = z\n  .object({\n    language: z.string().default('auto'),\n    size: z.enum(['normal', 'compact', 'flexible', 'invisible']).default('normal'),\n  })\n  .default({\n    language: 'auto',\n    size: 'normal',\n  });\n\nexport const turnstileSchema = z.object({\n  siteKey: z.string(),\n  options: turnstileOptionsSchema.optional(),\n});\n\nexport type TTurnstileConfig = z.infer<typeof turnstileSchema>;\n\nexport type TStartupConfig = {\n  appTitle: string;\n  socialLogins?: string[];\n  interface?: TInterfaceConfig;\n  turnstile?: TTurnstileConfig;\n  balance?: TBalanceConfig;\n  transactions?: TTransactionsConfig;\n  discordLoginEnabled: boolean;\n  facebookLoginEnabled: boolean;\n  githubLoginEnabled: boolean;\n  googleLoginEnabled: boolean;\n  openidLoginEnabled: boolean;\n  appleLoginEnabled: boolean;\n  samlLoginEnabled: boolean;\n  openidLabel: string;\n  openidImageUrl: string;\n  openidAutoRedirect: boolean;\n  samlLabel: string;\n  samlImageUrl: string;\n  /** LDAP Auth Configuration */\n  ldap?: {\n    /** LDAP enabled */\n    enabled: boolean;\n    /** Whether LDAP uses username vs. email */\n    username?: boolean;\n  };\n  serverDomain: string;\n  emailLoginEnabled: boolean;\n  registrationEnabled: boolean;\n  socialLoginEnabled: boolean;\n  passwordResetEnabled: boolean;\n  emailEnabled: boolean;\n  showBirthdayIcon: boolean;\n  helpAndFaqURL: string;\n  customFooter?: string;\n  modelSpecs?: TSpecsConfig;\n  defaultModel?: TDefaultModelConfig;\n  sharedLinksEnabled: boolean;\n  publicSharedLinksEnabled: boolean;\n  analyticsGtmId?: string;\n  instanceProjectId: string;\n  bundlerURL?: string;\n  staticBundlerURL?: string;\n  sharePointFilePickerEnabled?: boolean;\n  sharePointBaseUrl?: string;\n  sharePointPickerGraphScope?: string;\n  sharePointPickerSharePointScope?: string;\n  openidReuseTokens?: boolean;\n  minPasswordLength?: number;\n  webSearch?: {\n    searchProvider?: SearchProviders;\n    scraperType?: ScraperTypes;\n    rerankerType?: RerankerTypes;\n  };\n  mcpServers?: Record<\n    string,\n    {\n      customUserVars: Record<\n        string,\n        {\n          title: string;\n          description: string;\n        }\n      >;\n      chatMenu?: boolean;\n      isOAuth?: boolean;\n      startup?: boolean;\n    }\n  >;\n  mcpPlaceholder?: string;\n};\n\nexport enum OCRStrategy {\n  MISTRAL_OCR = 'mistral_ocr',\n  CUSTOM_OCR = 'custom_ocr',\n  AZURE_MISTRAL_OCR = 'azure_mistral_ocr',\n  VERTEXAI_MISTRAL_OCR = 'vertexai_mistral_ocr',\n}\n\nexport enum SearchCategories {\n  PROVIDERS = 'providers',\n  SCRAPERS = 'scrapers',\n  RERANKERS = 'rerankers',\n}\n\nexport enum SearchProviders {\n  SERPER = 'serper',\n  SEARXNG = 'searxng',\n}\n\nexport enum ScraperTypes {\n  FIRECRAWL = 'firecrawl',\n  SERPER = 'serper',\n}\n\nexport enum RerankerTypes {\n  JINA = 'jina',\n  COHERE = 'cohere',\n}\n\nexport enum SafeSearchTypes {\n  OFF = 0,\n  MODERATE = 1,\n  STRICT = 2,\n}\n\nexport const webSearchSchema = z.object({\n  serperApiKey: z.string().optional().default('${SERPER_API_KEY}'),\n  searxngInstanceUrl: z.string().optional().default('${SEARXNG_INSTANCE_URL}'),\n  searxngApiKey: z.string().optional().default('${SEARXNG_API_KEY}'),\n  firecrawlApiKey: z.string().optional().default('${FIRECRAWL_API_KEY}'),\n  firecrawlApiUrl: z.string().optional().default('${FIRECRAWL_API_URL}'),\n  jinaApiKey: z.string().optional().default('${JINA_API_KEY}'),\n  jinaApiUrl: z.string().optional().default('${JINA_API_URL}'),\n  cohereApiKey: z.string().optional().default('${COHERE_API_KEY}'),\n  searchProvider: z.nativeEnum(SearchProviders).optional(),\n  scraperType: z.nativeEnum(ScraperTypes).optional(),\n  rerankerType: z.nativeEnum(RerankerTypes).optional(),\n  scraperTimeout: z.number().optional(),\n  safeSearch: z.nativeEnum(SafeSearchTypes).default(SafeSearchTypes.MODERATE),\n  firecrawlOptions: z\n    .object({\n      formats: z.array(z.string()).optional(),\n      includeTags: z.array(z.string()).optional(),\n      excludeTags: z.array(z.string()).optional(),\n      headers: z.record(z.string()).optional(),\n      waitFor: z.number().optional(),\n      timeout: z.number().optional(),\n      maxAge: z.number().optional(),\n      mobile: z.boolean().optional(),\n      skipTlsVerification: z.boolean().optional(),\n      blockAds: z.boolean().optional(),\n      removeBase64Images: z.boolean().optional(),\n      parsePDF: z.boolean().optional(),\n      storeInCache: z.boolean().optional(),\n      zeroDataRetention: z.boolean().optional(),\n      location: z\n        .object({\n          country: z.string().optional(),\n          languages: z.array(z.string()).optional(),\n        })\n        .optional(),\n      onlyMainContent: z.boolean().optional(),\n      changeTrackingOptions: z\n        .object({\n          modes: z.array(z.string()).optional(),\n          schema: z.record(z.unknown()).optional(),\n          prompt: z.string().optional(),\n          tag: z.string().nullable().optional(),\n        })\n        .optional(),\n    })\n    .optional(),\n});\n\nexport type TWebSearchConfig = z.infer<typeof webSearchSchema>;\n\nexport const ocrSchema = z.object({\n  mistralModel: z.string().optional(),\n  apiKey: z.string().optional().default('${OCR_API_KEY}'),\n  baseURL: z.string().optional().default('${OCR_BASEURL}'),\n  strategy: z.nativeEnum(OCRStrategy).default(OCRStrategy.MISTRAL_OCR),\n});\n\nexport const balanceSchema = z.object({\n  enabled: z.boolean().optional().default(false),\n  startBalance: z.number().optional().default(20000),\n  autoRefillEnabled: z.boolean().optional().default(false),\n  refillIntervalValue: z.number().optional().default(30),\n  refillIntervalUnit: z\n    .enum(['seconds', 'minutes', 'hours', 'days', 'weeks', 'months'])\n    .optional()\n    .default('days'),\n  refillAmount: z.number().optional().default(10000),\n});\n\nexport const transactionsSchema = z.object({\n  enabled: z.boolean().optional().default(true),\n});\n\nexport const memorySchema = z.object({\n  disabled: z.boolean().optional(),\n  validKeys: z.array(z.string()).optional(),\n  tokenLimit: z.number().optional(),\n  charLimit: z.number().optional().default(10000),\n  personalize: z.boolean().default(true),\n  messageWindowSize: z.number().optional().default(5),\n  agent: z\n    .union([\n      z.object({\n        id: z.string(),\n      }),\n      z.object({\n        provider: z.string(),\n        model: z.string(),\n        instructions: z.string().optional(),\n        model_parameters: z.record(z.any()).optional(),\n      }),\n    ])\n    .optional(),\n});\n\nexport type TMemoryConfig = z.infer<typeof memorySchema>;\n\nconst customEndpointsSchema = z.array(endpointSchema.partial()).optional();\n\n// Schema for default model configuration\nconst defaultModelSchema = z.object({\n  endpoint: z.string().describe('The endpoint name (e.g., \"bedrock\", \"openAI\", etc.)'),\n  model: z.string().describe('The model name (e.g., \"us.anthropic.claude-3-5-sonnet-20241022-v2:0\")'),\n}).optional();\n\nexport const configSchema = z.object({\n  version: z.string(),\n  cache: z.boolean().default(true),\n  defaultModel: defaultModelSchema,\n  ocr: ocrSchema.optional(),\n  webSearch: webSearchSchema.optional(),\n  memory: memorySchema.optional(),\n  secureImageLinks: z.boolean().optional(),\n  imageOutputType: z.nativeEnum(EImageOutputType).default(EImageOutputType.PNG),\n  includedTools: z.array(z.string()).optional(),\n  filteredTools: z.array(z.string()).optional(),\n  mcpServers: MCPServersSchema.optional(),\n  interface: interfaceSchema,\n  turnstile: turnstileSchema.optional(),\n  fileStrategy: fileSourceSchema.default(FileSources.local),\n  fileStrategies: fileStrategiesSchema,\n  actions: z\n    .object({\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .optional(),\n  registration: z\n    .object({\n      socialLogins: z.array(z.string()).optional(),\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .default({ socialLogins: defaultSocialLogins }),\n  balance: balanceSchema.optional(),\n  transactions: transactionsSchema.optional(),\n  speech: z\n    .object({\n      tts: ttsSchema.optional(),\n      stt: sttSchema.optional(),\n      speechTab: speechTab.optional(),\n    })\n    .optional(),\n  rateLimits: rateLimitSchema.optional(),\n  fileConfig: fileConfigSchema.optional(),\n  modelSpecs: specsConfigSchema.optional(),\n  endpoints: z\n    .object({\n      all: baseEndpointSchema.optional(),\n      [EModelEndpoint.openAI]: baseEndpointSchema.optional(),\n      [EModelEndpoint.google]: baseEndpointSchema.optional(),\n      [EModelEndpoint.anthropic]: baseEndpointSchema.optional(),\n      [EModelEndpoint.gptPlugins]: baseEndpointSchema.optional(),\n      [EModelEndpoint.azureOpenAI]: azureEndpointSchema.optional(),\n      [EModelEndpoint.azureAssistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.assistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.agents]: agentsEndpointSchema.optional(),\n      [EModelEndpoint.custom]: customEndpointsSchema.optional(),\n      [EModelEndpoint.bedrock]: baseEndpointSchema.optional(),\n    })\n    .strict()\n    .refine((data) => Object.keys(data).length > 0, {\n      message: 'At least one `endpoints` field must be provided.',\n    })\n    .optional(),\n});\n\nexport const getConfigDefaults = () => getSchemaDefaults(configSchema);\n\nexport type TCustomConfig = z.infer<typeof configSchema>;\nexport type TCustomEndpoints = z.infer<typeof customEndpointsSchema>;\nexport type TDefaultModelConfig = z.infer<typeof defaultModelSchema>;\n\nexport type TProviderSchema =\n  | z.infer<typeof ttsOpenaiSchema>\n  | z.infer<typeof ttsElevenLabsSchema>\n  | z.infer<typeof ttsLocalaiSchema>\n  | undefined;\n\nexport enum KnownEndpoints {\n  anyscale = 'anyscale',\n  apipie = 'apipie',\n  cohere = 'cohere',\n  fireworks = 'fireworks',\n  deepseek = 'deepseek',\n  groq = 'groq',\n  huggingface = 'huggingface',\n  mistral = 'mistral',\n  mlx = 'mlx',\n  ollama = 'ollama',\n  openrouter = 'openrouter',\n  perplexity = 'perplexity',\n  shuttleai = 'shuttleai',\n  'together.ai' = 'together.ai',\n  unify = 'unify',\n  xai = 'xai',\n}\n\nexport enum FetchTokenConfig {\n  openrouter = KnownEndpoints.openrouter,\n}\n\nexport const defaultEndpoints: EModelEndpoint[] = [\n  EModelEndpoint.openAI,\n  EModelEndpoint.assistants,\n  EModelEndpoint.azureAssistants,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.agents,\n  EModelEndpoint.chatGPTBrowser,\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.google,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.bedrock,\n];\n\nexport const alternateName = {\n  [EModelEndpoint.openAI]: 'OpenAI',\n  [EModelEndpoint.assistants]: 'Assistants',\n  [EModelEndpoint.agents]: 'My Agents',\n  [EModelEndpoint.azureAssistants]: 'Azure Assistants',\n  [EModelEndpoint.azureOpenAI]: 'Azure OpenAI',\n  [EModelEndpoint.chatGPTBrowser]: 'ChatGPT',\n  [EModelEndpoint.gptPlugins]: 'Plugins',\n  [EModelEndpoint.google]: 'Google',\n  [EModelEndpoint.anthropic]: 'Anthropic',\n  [EModelEndpoint.custom]: 'Custom',\n  [EModelEndpoint.bedrock]: 'AWS Bedrock',\n  [KnownEndpoints.ollama]: 'Ollama',\n  [KnownEndpoints.deepseek]: 'DeepSeek',\n  [KnownEndpoints.xai]: 'xAI',\n};\n\nconst sharedOpenAIModels = [\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-4.5-preview',\n  'gpt-4.5-preview-2025-02-27',\n  'gpt-3.5-turbo',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-turbo-2024-04-09',\n  'gpt-4-0125-preview',\n  'gpt-4-turbo-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-16k-0613',\n  'gpt-3.5-turbo-16k',\n  'gpt-4',\n  'gpt-4-0314',\n  'gpt-4-32k-0314',\n  'gpt-4-0613',\n  'gpt-3.5-turbo-0613',\n];\n\nconst sharedAnthropicModels = [\n  'claude-sonnet-4-20250514',\n  'claude-sonnet-4-latest',\n  'claude-opus-4-20250514',\n  'claude-opus-4-latest',\n  'claude-3-7-sonnet-latest',\n  'claude-3-7-sonnet-20250219',\n  'claude-3-5-haiku-20241022',\n  'claude-3-5-sonnet-20241022',\n  'claude-3-5-sonnet-20240620',\n  'claude-3-5-sonnet-latest',\n  'claude-3-opus-20240229',\n  'claude-3-sonnet-20240229',\n  'claude-3-haiku-20240307',\n  'claude-2.1',\n  'claude-2',\n  'claude-1.2',\n  'claude-1',\n  'claude-1-100k',\n  'claude-instant-1',\n  'claude-instant-1-100k',\n];\n\nexport const bedrockModels = [\n  'anthropic.claude-3-5-sonnet-20241022-v2:0',\n  'anthropic.claude-3-5-sonnet-20240620-v1:0',\n  'anthropic.claude-3-5-haiku-20241022-v1:0',\n  'anthropic.claude-3-haiku-20240307-v1:0',\n  'anthropic.claude-3-opus-20240229-v1:0',\n  'anthropic.claude-3-sonnet-20240229-v1:0',\n  'anthropic.claude-v2',\n  'anthropic.claude-v2:1',\n  'anthropic.claude-instant-v1',\n  // 'cohere.command-text-v14', // no conversation history\n  // 'cohere.command-light-text-v14', // no conversation history\n  'cohere.command-r-v1:0',\n  'cohere.command-r-plus-v1:0',\n  'meta.llama2-13b-chat-v1',\n  'meta.llama2-70b-chat-v1',\n  'meta.llama3-8b-instruct-v1:0',\n  'meta.llama3-70b-instruct-v1:0',\n  'meta.llama3-1-8b-instruct-v1:0',\n  'meta.llama3-1-70b-instruct-v1:0',\n  'meta.llama3-1-405b-instruct-v1:0',\n  'mistral.mistral-7b-instruct-v0:2',\n  'mistral.mixtral-8x7b-instruct-v0:1',\n  'mistral.mistral-large-2402-v1:0',\n  'mistral.mistral-large-2407-v1:0',\n  'mistral.mistral-small-2402-v1:0',\n  'ai21.jamba-instruct-v1:0',\n  // 'ai21.j2-mid-v1', // no streaming\n  // 'ai21.j2-ultra-v1', no conversation history\n  'amazon.titan-text-lite-v1',\n  'amazon.titan-text-express-v1',\n  'amazon.titan-text-premier-v1:0',\n];\n\nexport const defaultModels = {\n  [EModelEndpoint.azureAssistants]: sharedOpenAIModels,\n  [EModelEndpoint.assistants]: [...sharedOpenAIModels, 'chatgpt-4o-latest'],\n  [EModelEndpoint.agents]: sharedOpenAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.google]: [\n    // Gemini 2.0 Models\n    'gemini-2.0-flash-001',\n    'gemini-2.0-flash-exp',\n    'gemini-2.0-flash-lite',\n    'gemini-2.0-pro-exp-02-05',\n    // Gemini 1.5 Models\n    'gemini-1.5-flash-001',\n    'gemini-1.5-flash-002',\n    'gemini-1.5-pro-001',\n    'gemini-1.5-pro-002',\n    // Gemini 1.0 Models\n    'gemini-1.0-pro-001',\n  ],\n  [EModelEndpoint.anthropic]: sharedAnthropicModels,\n  [EModelEndpoint.openAI]: [\n    ...sharedOpenAIModels,\n    'chatgpt-4o-latest',\n    'gpt-4-vision-preview',\n    'gpt-3.5-turbo-instruct-0914',\n    'gpt-3.5-turbo-instruct',\n  ],\n  [EModelEndpoint.bedrock]: bedrockModels,\n};\n\nconst fitlerAssistantModels = (str: string) => {\n  return /gpt-4|gpt-3\\\\.5/i.test(str) && !/vision|instruct/i.test(str);\n};\n\nconst openAIModels = defaultModels[EModelEndpoint.openAI];\n\nexport const initialModelsConfig: TModelsConfig = {\n  initial: [],\n  [EModelEndpoint.openAI]: openAIModels,\n  [EModelEndpoint.assistants]: openAIModels.filter(fitlerAssistantModels),\n  [EModelEndpoint.agents]: openAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.gptPlugins]: openAIModels,\n  [EModelEndpoint.azureOpenAI]: openAIModels,\n  [EModelEndpoint.chatGPTBrowser]: ['text-davinci-002-render-sha'],\n  [EModelEndpoint.google]: defaultModels[EModelEndpoint.google],\n  [EModelEndpoint.anthropic]: defaultModels[EModelEndpoint.anthropic],\n  [EModelEndpoint.bedrock]: defaultModels[EModelEndpoint.bedrock],\n};\n\nexport const EndpointURLs = {\n  [EModelEndpoint.assistants]: `${apiBaseUrl()}/api/assistants/v2/chat`,\n  [EModelEndpoint.azureAssistants]: `${apiBaseUrl()}/api/assistants/v1/chat`,\n  [EModelEndpoint.agents]: `${apiBaseUrl()}/api/${EModelEndpoint.agents}/chat`,\n} as const;\n\nexport const modularEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.google,\n  EModelEndpoint.openAI,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.custom,\n  EModelEndpoint.agents,\n  EModelEndpoint.bedrock,\n]);\n\nexport const supportsBalanceCheck = {\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.gptPlugins]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const visionModels = [\n  'qwen-vl',\n  'grok-vision',\n  'grok-2-vision',\n  'grok-3',\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-4-turbo',\n  'gpt-4-vision',\n  'o4-mini',\n  'o3',\n  'o1',\n  'gpt-4.1',\n  'gpt-4.5',\n  'llava',\n  'llava-13b',\n  'gemini-pro-vision',\n  'claude-3',\n  'gemma',\n  'gemini-exp',\n  'gemini-1.5',\n  'gemini-2',\n  'gemini-3',\n  'moondream',\n  'llama3.2-vision',\n  'llama-3.2-11b-vision',\n  'llama-3-2-11b-vision',\n  'llama-3.2-90b-vision',\n  'llama-3-2-90b-vision',\n  'llama-4',\n  'claude-opus-4',\n  'claude-sonnet-4',\n  'claude-haiku-4',\n];\nexport enum VisionModes {\n  generative = 'generative',\n  agents = 'agents',\n}\n\nexport function validateVisionModel({\n  model,\n  additionalModels = [],\n  availableModels,\n}: {\n  model: string;\n  additionalModels?: string[];\n  availableModels?: string[];\n}) {\n  if (!model) {\n    return false;\n  }\n\n  if (model.includes('gpt-4-turbo-preview') || model.includes('o1-mini')) {\n    return false;\n  }\n\n  if (availableModels && !availableModels.includes(model)) {\n    return false;\n  }\n\n  return visionModels.concat(additionalModels).some((visionModel) => model.includes(visionModel));\n}\n\nexport const imageGenTools = new Set(['dalle', 'dall-e', 'stable-diffusion', 'flux', 'nova-canvas']);\n\n/**\n * Enum for collections using infinite queries\n */\nexport enum InfiniteCollections {\n  /**\n   * Collection for Prompt Groups\n   */\n  PROMPT_GROUPS = 'promptGroups',\n  /**\n   * Collection for Shared Links\n   */\n  SHARED_LINKS = 'sharedLinks',\n}\n\n/**\n * Enum for time intervals\n */\nexport enum Time {\n  ONE_DAY = 86400000,\n  ONE_HOUR = 3600000,\n  THIRTY_MINUTES = 1800000,\n  TEN_MINUTES = 600000,\n  FIVE_MINUTES = 300000,\n  THREE_MINUTES = 180000,\n  TWO_MINUTES = 120000,\n  ONE_MINUTE = 60000,\n  THIRTY_SECONDS = 30000,\n}\n\n/**\n * Enum for cache keys.\n */\nexport enum CacheKeys {\n  /**\n   * Key for the config store namespace.\n   */\n  CONFIG_STORE = 'CONFIG_STORE',\n  /**\n   * Key for the roles cache.\n   */\n  ROLES = 'ROLES',\n  /**\n   * Key for the plugins cache.\n   */\n  PLUGINS = 'PLUGINS',\n  /**\n   * Key for the title generation cache.\n   */\n  GEN_TITLE = 'GEN_TITLE',\n  /**\n   * Key for the tools cache.\n   */\n  TOOLS = 'TOOLS',\n  /**\n   * Key for the model config cache.\n   */\n  MODELS_CONFIG = 'MODELS_CONFIG',\n  /**\n   * Key for the model queries cache.\n   */\n  MODEL_QUERIES = 'MODEL_QUERIES',\n  /**\n   * Key for the default startup config cache.\n   */\n  STARTUP_CONFIG = 'STARTUP_CONFIG',\n  /**\n   * Key for the default endpoint config cache.\n   */\n  ENDPOINT_CONFIG = 'ENDPOINT_CONFIG',\n  /**\n   * Key for accessing the model token config cache.\n   */\n  TOKEN_CONFIG = 'TOKEN_CONFIG',\n  /**\n   * Key for the app config namespace.\n   */\n  APP_CONFIG = 'APP_CONFIG',\n  /**\n   * Key for accessing Abort Keys\n   */\n  ABORT_KEYS = 'ABORT_KEYS',\n  /**\n   * Key for the bans cache.\n   */\n  BANS = 'BANS',\n  /**\n   * Key for the encoded domains cache.\n   * Used by Azure OpenAI Assistants.\n   */\n  ENCODED_DOMAINS = 'ENCODED_DOMAINS',\n  /**\n   * Key for the cached audio run Ids.\n   */\n  AUDIO_RUNS = 'AUDIO_RUNS',\n  /**\n   * Key for in-progress messages.\n   */\n  MESSAGES = 'MESSAGES',\n  /**\n   * Key for in-progress flow states.\n   */\n  FLOWS = 'FLOWS',\n  /**\n   * Key for pending chat requests (concurrency check)\n   */\n  PENDING_REQ = 'PENDING_REQ',\n  /**\n   * Key for s3 check intervals per user\n   */\n  S3_EXPIRY_INTERVAL = 'S3_EXPIRY_INTERVAL',\n  /**\n   * key for open id exchanged tokens\n   */\n  OPENID_EXCHANGED_TOKENS = 'OPENID_EXCHANGED_TOKENS',\n  /**\n   * Key for OpenID session.\n   */\n  OPENID_SESSION = 'OPENID_SESSION',\n  /**\n   * Key for SAML session.\n   */\n  SAML_SESSION = 'SAML_SESSION',\n}\n\n/**\n * Enum for violation types, used to identify, log, and cache violations.\n */\nexport enum ViolationTypes {\n  /**\n   * File Upload Violations (exceeding limit).\n   */\n  FILE_UPLOAD_LIMIT = 'file_upload_limit',\n  /**\n   * Illegal Model Request (not available).\n   */\n  ILLEGAL_MODEL_REQUEST = 'illegal_model_request',\n  /**\n   * Token Limit Violation.\n   */\n  TOKEN_BALANCE = 'token_balance',\n  /**\n   * An issued ban.\n   */\n  BAN = 'ban',\n  /**\n   * TTS Request Limit Violation.\n   */\n  TTS_LIMIT = 'tts_limit',\n  /**\n   * STT Request Limit Violation.\n   */\n  STT_LIMIT = 'stt_limit',\n  /**\n   * Reset Password Limit Violation.\n   */\n  RESET_PASSWORD_LIMIT = 'reset_password_limit',\n  /**\n   * Verify Email Limit Violation.\n   */\n  VERIFY_EMAIL_LIMIT = 'verify_email_limit',\n  /**\n   * Verify Conversation Access violation.\n   */\n  CONVO_ACCESS = 'convo_access',\n  /**\n   * Tool Call Limit Violation.\n   */\n  TOOL_CALL_LIMIT = 'tool_call_limit',\n  /**\n   * General violation (catch-all).\n   */\n  GENERAL = 'general',\n  /**\n   * Login attempt violations.\n   */\n  LOGINS = 'logins',\n  /**\n   * Concurrent request violations.\n   */\n  CONCURRENT = 'concurrent',\n  /**\n   * Non-browser access violations.\n   */\n  NON_BROWSER = 'non_browser',\n  /**\n   * Message limit violations.\n   */\n  MESSAGE_LIMIT = 'message_limit',\n  /**\n   * Registration violations.\n   */\n  REGISTRATIONS = 'registrations',\n}\n\n/**\n * Enum for error message types that are not \"violations\" as above, used to identify client-facing errors.\n */\nexport enum ErrorTypes {\n  /**\n   * No User-provided Key.\n   */\n  NO_USER_KEY = 'no_user_key',\n  /**\n   * Expired User-provided Key.\n   */\n  EXPIRED_USER_KEY = 'expired_user_key',\n  /**\n   * Invalid User-provided Key.\n   */\n  INVALID_USER_KEY = 'invalid_user_key',\n  /**\n   * No Base URL Provided.\n   */\n  NO_BASE_URL = 'no_base_url',\n  /**\n   * Moderation error\n   */\n  MODERATION = 'moderation',\n  /**\n   * Prompt exceeds max length\n   */\n  INPUT_LENGTH = 'INPUT_LENGTH',\n  /**\n   * Invalid request error, API rejected request\n   */\n  INVALID_REQUEST = 'invalid_request_error',\n  /**\n   * Invalid action request error, likely not on list of allowed domains\n   */\n  INVALID_ACTION = 'invalid_action_error',\n  /**\n   * Invalid request error, API rejected request\n   */\n  NO_SYSTEM_MESSAGES = 'no_system_messages',\n  /**\n   * Google provider returned an error\n   */\n  GOOGLE_ERROR = 'google_error',\n  /**\n   * Google provider does not allow custom tools with built-in tools\n   */\n  GOOGLE_TOOL_CONFLICT = 'google_tool_conflict',\n  /**\n   * Invalid Agent Provider (excluded by Admin)\n   */\n  INVALID_AGENT_PROVIDER = 'invalid_agent_provider',\n  /**\n   * Missing model selection\n   */\n  MISSING_MODEL = 'missing_model',\n  /**\n   * Models configuration not loaded\n   */\n  MODELS_NOT_LOADED = 'models_not_loaded',\n  /**\n   * Endpoint models not loaded\n   */\n  ENDPOINT_MODELS_NOT_LOADED = 'endpoint_models_not_loaded',\n  /**\n   * Generic Authentication failure\n   */\n  AUTH_FAILED = 'auth_failed',\n}\n\n/**\n * Enum for authentication keys.\n */\nexport enum AuthKeys {\n  /**\n   * Key for the Service Account to use Vertex AI.\n   */\n  GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY',\n  /**\n   * API key to use Google Generative AI.\n   *\n   * Note: this is not for Environment Variables, but to access encrypted object values.\n   */\n  GOOGLE_API_KEY = 'GOOGLE_API_KEY',\n}\n\n/**\n * Enum for Image Detail Cost.\n *\n * **Low Res Fixed Cost:** `85`\n *\n * **High Res Calculation:**\n *\n * Number of `512px` Tiles * `170` + `85` (Additional Cost)\n */\nexport enum ImageDetailCost {\n  /**\n   * Low resolution is a fixed value.\n   */\n  LOW = 85,\n  /**\n   * High resolution Cost Per Tile\n   */\n  HIGH = 170,\n  /**\n   * Additional Cost added to High Resolution Total Cost\n   */\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  ADDITIONAL = 85,\n}\n\n/**\n * Tab values for Settings Dialog\n */\nexport enum SettingsTabValues {\n  /**\n   * Tab for General Settings\n   */\n  GENERAL = 'general',\n  /**\n   * Tab for Chat Settings\n   */\n  CHAT = 'chat',\n  /**\n   * Tab for Speech Settings\n   */\n  SPEECH = 'speech',\n  /**\n   * Tab for Beta Features\n   */\n  BETA = 'beta',\n  /**\n   * Tab for Data Controls\n   */\n  DATA = 'data',\n  /**\n   * Tab for Balance Settings\n   */\n  BALANCE = 'balance',\n  /**\n   * Tab for Account Settings\n   */\n  ACCOUNT = 'account',\n  /**\n   * Chat input commands\n   */\n  COMMANDS = 'commands',\n  /**\n   * Tab for Personalization Settings\n   */\n  PERSONALIZATION = 'personalization',\n}\n\nexport enum STTProviders {\n  /**\n   * Provider for OpenAI STT\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure STT\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n}\n\nexport enum TTSProviders {\n  /**\n   * Provider for OpenAI TTS\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure OpenAI TTS\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n  /**\n   * Provider for ElevenLabs TTS\n   */\n  ELEVENLABS = 'elevenlabs',\n  /**\n   * Provider for LocalAI TTS\n   */\n  LOCALAI = 'localai',\n}\n\n/** Enum for app-wide constants */\nexport enum Constants {\n  /** Key for the app's version. */\n  VERSION = 'v0.8.0-rc3',\n  /** Key for the Custom Config's version (librechat.yaml). */\n  CONFIG_VERSION = '1.2.8',\n  /** Standard value for the first message's `parentMessageId` value, to indicate no parent exists. */\n  NO_PARENT = '00000000-0000-0000-0000-000000000000',\n  /** Standard value to use whatever the submission prelim. `responseMessageId` is */\n  USE_PRELIM_RESPONSE_MESSAGE_ID = 'USE_PRELIM_RESPONSE_MESSAGE_ID',\n  /** Standard value for the initial conversationId before a request is sent */\n  NEW_CONVO = 'new',\n  /** Standard value for the temporary conversationId after a request is sent and before the server responds */\n  PENDING_CONVO = 'PENDING',\n  /** Standard value for the conversationId used for search queries */\n  SEARCH = 'search',\n  /** Fixed, encoded domain length for Azure OpenAI Assistants Function name parsing. */\n  ENCODED_DOMAIN_LENGTH = 10,\n  /** Identifier for using current_model in multi-model requests. */\n  CURRENT_MODEL = 'current_model',\n  /** Common divider for text values */\n  COMMON_DIVIDER = '__',\n  /** Max length for commands */\n  COMMANDS_MAX_LENGTH = 56,\n  /** Default Stream Rate (ms) */\n  DEFAULT_STREAM_RATE = 1,\n  /** Saved Tag */\n  SAVED_TAG = 'Saved',\n  /** Max number of Conversation starters for Agents/Assistants */\n  MAX_CONVO_STARTERS = 4,\n  /** Global/instance Project Name */\n  GLOBAL_PROJECT_NAME = 'instance',\n  /** Delimiter for MCP tools */\n  mcp_delimiter = '_mcp_',\n  /** Prefix for MCP plugins */\n  mcp_prefix = 'mcp_',\n  /** Unique value to indicate all MCP servers. For backend use only. */\n  mcp_all = 'sys__all__sys',\n  /**\n   * Unique value to indicate the MCP tool was added to an agent.\n   * This helps inform the UI if the mcp server was previously added.\n   * */\n  mcp_server = 'sys__server__sys',\n  /** Placeholder Agent ID for Ephemeral Agents */\n  EPHEMERAL_AGENT_ID = 'ephemeral',\n}\n\nexport enum LocalStorageKeys {\n  /** Key for the admin defined App Title */\n  APP_TITLE = 'appTitle',\n  /** Key for the last conversation setup. */\n  LAST_CONVO_SETUP = 'lastConversationSetup',\n  /** Key for the last selected model. */\n  LAST_MODEL = 'lastSelectedModel',\n  /** Key for the last selected tools. */\n  LAST_TOOLS = 'lastSelectedTools',\n  /** Key for the last selected spec by name*/\n  LAST_SPEC = 'lastSelectedSpec',\n  /** Key for temporary files to delete */\n  FILES_TO_DELETE = 'filesToDelete',\n  /** Prefix key for the last selected assistant ID by index */\n  ASST_ID_PREFIX = 'assistant_id__',\n  /** Prefix key for the last selected agent ID by index */\n  AGENT_ID_PREFIX = 'agent_id__',\n  /** Key for the last selected fork setting */\n  FORK_SETTING = 'forkSetting',\n  /** Key for remembering the last selected option, instead of manually selecting */\n  REMEMBER_FORK_OPTION = 'rememberDefaultFork',\n  /** Key for remembering the split at target fork option modifier */\n  FORK_SPLIT_AT_TARGET = 'splitAtTarget',\n  /** Key for saving text drafts */\n  TEXT_DRAFT = 'textDraft_',\n  /** Key for saving file drafts */\n  FILES_DRAFT = 'filesDraft_',\n  /** Key for last Selected Prompt Category */\n  LAST_PROMPT_CATEGORY = 'lastPromptCategory',\n  /** Key for rendering User Messages as Markdown */\n  ENABLE_USER_MSG_MARKDOWN = 'enableUserMsgMarkdown',\n  /** Key for displaying analysis tool code input */\n  SHOW_ANALYSIS_CODE = 'showAnalysisCode',\n  /** Last selected MCP values per conversation ID */\n  LAST_MCP_ = 'LAST_MCP_',\n  /** Last checked toggle for Code Interpreter API per conversation ID */\n  LAST_CODE_TOGGLE_ = 'LAST_CODE_TOGGLE_',\n  /** Last checked toggle for Web Search per conversation ID */\n  LAST_WEB_SEARCH_TOGGLE_ = 'LAST_WEB_SEARCH_TOGGLE_',\n  /** Last checked toggle for File Search per conversation ID */\n  LAST_FILE_SEARCH_TOGGLE_ = 'LAST_FILE_SEARCH_TOGGLE_',\n  /** Last checked toggle for Artifacts per conversation ID */\n  LAST_ARTIFACTS_TOGGLE_ = 'LAST_ARTIFACTS_TOGGLE_',\n  /** Key for the last selected agent provider */\n  LAST_AGENT_PROVIDER = 'lastAgentProvider',\n  /** Key for the last selected agent model */\n  LAST_AGENT_MODEL = 'lastAgentModel',\n  /** Pin state for MCP tools per conversation ID */\n  PIN_MCP_ = 'PIN_MCP_',\n  /** Pin state for Web Search per conversation ID */\n  PIN_WEB_SEARCH_ = 'PIN_WEB_SEARCH_',\n  /** Pin state for Code Interpreter per conversation ID */\n  PIN_CODE_INTERPRETER_ = 'PIN_CODE_INTERPRETER_',\n}\n\nexport enum ForkOptions {\n  /** Key for direct path option */\n  DIRECT_PATH = 'directPath',\n  /** Key for including branches */\n  INCLUDE_BRANCHES = 'includeBranches',\n  /** Key for target level fork (default) */\n  TARGET_LEVEL = 'targetLevel',\n  /** Default option */\n  DEFAULT = 'default',\n}\n\n/**\n * Enum for Cohere related constants\n */\nexport enum CohereConstants {\n  /**\n   * Cohere API Endpoint, for special handling\n   */\n  API_URL = 'https://api.cohere.ai/v1',\n  /**\n   * Role for \"USER\" messages\n   */\n  ROLE_USER = 'USER',\n  /**\n   * Role for \"SYSTEM\" messages\n   */\n  ROLE_SYSTEM = 'SYSTEM',\n  /**\n   * Role for \"CHATBOT\" messages\n   */\n  ROLE_CHATBOT = 'CHATBOT',\n  /**\n   * Title message as required by Cohere\n   */\n  TITLE_MESSAGE = 'TITLE:',\n}\n\nexport enum SystemCategories {\n  ALL = 'sys__all__sys',\n  MY_PROMPTS = 'sys__my__prompts__sys',\n  NO_CATEGORY = 'sys__no__category__sys',\n  SHARED_PROMPTS = 'sys__shared__prompts__sys',\n}\n\nexport const providerEndpointMap = {\n  [EModelEndpoint.openAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.bedrock]: EModelEndpoint.bedrock,\n  [EModelEndpoint.anthropic]: EModelEndpoint.anthropic,\n  [EModelEndpoint.azureOpenAI]: EModelEndpoint.azureOpenAI,\n};\n\nexport const specialVariables = {\n  current_date: true,\n  current_user: true,\n  iso_datetime: true,\n  current_datetime: true,\n};\n\nexport type TSpecialVarLabel = `com_ui_special_var_${keyof typeof specialVariables}`;\n","export enum ContentTypes {\n  TEXT = 'text',\n  THINK = 'think',\n  TEXT_DELTA = 'text_delta',\n  TOOL_CALL = 'tool_call',\n  IMAGE_FILE = 'image_file',\n  IMAGE_URL = 'image_url',\n  AGENT_UPDATE = 'agent_update',\n  ERROR = 'error',\n  CITATION = 'citation',\n}\n\nexport enum StepTypes {\n  TOOL_CALLS = 'tool_calls',\n  MESSAGE_CREATION = 'message_creation',\n}\n\nexport enum ToolCallTypes {\n  FUNCTION = 'function',\n  RETRIEVAL = 'retrieval',\n  FILE_SEARCH = 'file_search',\n  CODE_INTERPRETER = 'code_interpreter',\n  /* Agents Tool Call */\n  TOOL_CALL = 'tool_call',\n}\n","import { z } from 'zod';\nimport * as s from './schemas';\n\ntype ThinkingConfig = {\n  type: 'enabled';\n  budget_tokens: number;\n};\ntype AnthropicReasoning = {\n  thinking?: ThinkingConfig | boolean;\n  thinkingBudget?: number;\n};\n\ntype AnthropicInput = BedrockConverseInput & {\n  additionalModelRequestFields: BedrockConverseInput['additionalModelRequestFields'] &\n    AnthropicReasoning;\n};\n\nexport const bedrockInputSchema = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    artifacts: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    system: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    thinking: true,\n    thinkingBudget: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .transform((obj) => {\n    if ((obj as AnthropicInput).additionalModelRequestFields?.thinking != null) {\n      const _obj = obj as AnthropicInput;\n      obj.thinking = !!_obj.additionalModelRequestFields.thinking;\n      obj.thinkingBudget =\n        typeof _obj.additionalModelRequestFields.thinking === 'object'\n          ? (_obj.additionalModelRequestFields.thinking as ThinkingConfig)?.budget_tokens\n          : undefined;\n      delete obj.additionalModelRequestFields;\n    }\n    return s.removeNullishValues(obj);\n  })\n  .catch(() => ({}));\n\nexport type BedrockConverseInput = z.infer<typeof bedrockInputSchema>;\n\nexport const bedrockInputParser = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    artifacts: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    thinking: true,\n    thinkingBudget: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .catchall(z.any())\n  .transform((data) => {\n    const knownKeys = [\n      'modelLabel',\n      'promptPrefix',\n      'resendFiles',\n      'iconURL',\n      'greeting',\n      'spec',\n      'maxOutputTokens',\n      'artifacts',\n      'additionalModelRequestFields',\n      'region',\n      'model',\n      'maxTokens',\n      'temperature',\n      'topP',\n      'stop',\n    ];\n\n    const additionalFields: Record<string, unknown> = {};\n    const typedData = data as Record<string, unknown>;\n\n    Object.entries(typedData).forEach(([key, value]) => {\n      if (!knownKeys.includes(key)) {\n        if (key === 'topK') {\n          additionalFields['top_k'] = value;\n        } else {\n          additionalFields[key] = value;\n        }\n        delete typedData[key];\n      }\n    });\n\n    /** Default thinking and thinkingBudget for 'anthropic.claude-3-7-sonnet' models, if not defined */\n    if (\n      typeof typedData.model === 'string' &&\n      (typedData.model.includes('anthropic.claude-3-7-sonnet') ||\n        /anthropic\\.claude-(?:[4-9](?:\\.\\d+)?(?:-\\d+)?-(?:sonnet|opus|haiku)|(?:sonnet|opus|haiku)-[4-9])/.test(\n          typedData.model,\n        ))\n    ) {\n      if (additionalFields.thinking === undefined) {\n        additionalFields.thinking = true;\n      } else if (additionalFields.thinking === false) {\n        delete additionalFields.thinking;\n        delete additionalFields.thinkingBudget;\n      }\n\n      if (additionalFields.thinking === true && additionalFields.thinkingBudget === undefined) {\n        additionalFields.thinkingBudget = 2000;\n      }\n      additionalFields.anthropic_beta = ['output-128k-2025-02-19'];\n    } else if (additionalFields.thinking != null || additionalFields.thinkingBudget != null) {\n      delete additionalFields.thinking;\n      delete additionalFields.thinkingBudget;\n    }\n\n    if (Object.keys(additionalFields).length > 0) {\n      typedData.additionalModelRequestFields = {\n        ...((typedData.additionalModelRequestFields as Record<string, unknown> | undefined) || {}),\n        ...additionalFields,\n      };\n    }\n\n    if (typedData.maxOutputTokens !== undefined) {\n      typedData.maxTokens = typedData.maxOutputTokens;\n    } else if (typedData.maxTokens !== undefined) {\n      typedData.maxOutputTokens = typedData.maxTokens;\n    }\n\n    return s.removeNullishValues(typedData) as BedrockConverseInput;\n  })\n  .catch(() => ({}));\n\n/**\n * Configures the \"thinking\" parameter based on given input and thinking options.\n *\n * @param data - The parsed Bedrock request options object\n * @returns The object with thinking configured appropriately\n */\nfunction configureThinking(data: AnthropicInput): AnthropicInput {\n  const updatedData = { ...data };\n  if (updatedData.additionalModelRequestFields?.thinking === true) {\n    updatedData.maxTokens = updatedData.maxTokens ?? updatedData.maxOutputTokens ?? 8192;\n    delete updatedData.maxOutputTokens;\n    const thinkingConfig: AnthropicReasoning['thinking'] = {\n      type: 'enabled',\n      budget_tokens: updatedData.additionalModelRequestFields.thinkingBudget ?? 2000,\n    };\n\n    if (thinkingConfig.budget_tokens > updatedData.maxTokens) {\n      thinkingConfig.budget_tokens = Math.floor(updatedData.maxTokens * 0.9);\n    }\n    updatedData.additionalModelRequestFields.thinking = thinkingConfig;\n    delete updatedData.additionalModelRequestFields.thinkingBudget;\n  }\n  return updatedData;\n}\n\nexport const bedrockOutputParser = (data: Record<string, unknown>) => {\n  const knownKeys = [...Object.keys(s.tConversationSchema.shape), 'topK', 'top_k'];\n  let result: Record<string, unknown> = {};\n\n  // Extract known fields from the root level\n  Object.entries(data).forEach(([key, value]) => {\n    if (knownKeys.includes(key)) {\n      result[key] = value;\n    }\n  });\n\n  // Extract known fields from additionalModelRequestFields\n  if (\n    typeof data.additionalModelRequestFields === 'object' &&\n    data.additionalModelRequestFields !== null\n  ) {\n    Object.entries(data.additionalModelRequestFields as Record<string, unknown>).forEach(\n      ([key, value]) => {\n        if (knownKeys.includes(key)) {\n          if (key === 'top_k') {\n            result['topK'] = value;\n          } else if (key === 'thinking' || key === 'thinkingBudget') {\n            return;\n          } else {\n            result[key] = value;\n          }\n        }\n      },\n    );\n  }\n\n  // Handle maxTokens and maxOutputTokens\n  if (result.maxTokens !== undefined && result.maxOutputTokens === undefined) {\n    result.maxOutputTokens = result.maxTokens;\n  } else if (result.maxOutputTokens !== undefined && result.maxTokens === undefined) {\n    result.maxTokens = result.maxOutputTokens;\n  }\n\n  result = configureThinking(result as AnthropicInput);\n  // Remove additionalModelRequestFields from the result if it doesn't thinking config\n  if ((result as AnthropicInput).additionalModelRequestFields?.thinking == null) {\n    delete result.additionalModelRequestFields;\n  }\n\n  return result;\n};\n","import dayjs from 'dayjs';\nimport type { ZodIssue } from 'zod';\nimport type * as a from './types/assistants';\nimport type * as s from './schemas';\nimport type * as t from './types';\nimport { ContentTypes } from './types/runs';\nimport {\n  openAISchema,\n  googleSchema,\n  EModelEndpoint,\n  anthropicSchema,\n  assistantSchema,\n  gptPluginsSchema,\n  // agentsSchema,\n  compactAgentsSchema,\n  compactGoogleSchema,\n  compactPluginsSchema,\n  compactAssistantSchema,\n} from './schemas';\nimport { bedrockInputSchema } from './bedrock';\nimport { alternateName } from './config';\n\ntype EndpointSchema =\n  | typeof openAISchema\n  | typeof googleSchema\n  | typeof anthropicSchema\n  | typeof gptPluginsSchema\n  | typeof assistantSchema\n  | typeof compactAgentsSchema\n  | typeof bedrockInputSchema;\n\nexport type EndpointSchemaKey = Exclude<EModelEndpoint, EModelEndpoint.chatGPTBrowser>;\n\nconst endpointSchemas: Record<EndpointSchemaKey, EndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.google]: googleSchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.gptPlugins]: gptPluginsSchema,\n  [EModelEndpoint.assistants]: assistantSchema,\n  [EModelEndpoint.azureAssistants]: assistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n};\n\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n\n/** Get the enabled endpoints from the `ENDPOINTS` environment variable */\nexport function getEnabledEndpoints() {\n  const defaultEndpoints: string[] = [\n    EModelEndpoint.openAI,\n    EModelEndpoint.agents,\n    EModelEndpoint.assistants,\n    EModelEndpoint.azureAssistants,\n    EModelEndpoint.azureOpenAI,\n    EModelEndpoint.google,\n    EModelEndpoint.chatGPTBrowser,\n    EModelEndpoint.gptPlugins,\n    EModelEndpoint.anthropic,\n    EModelEndpoint.bedrock,\n  ];\n\n  const endpointsEnv = process.env.ENDPOINTS ?? '';\n  let enabledEndpoints = defaultEndpoints;\n  if (endpointsEnv) {\n    enabledEndpoints = endpointsEnv\n      .split(',')\n      .filter((endpoint) => endpoint.trim())\n      .map((endpoint) => endpoint.trim());\n  }\n  return enabledEndpoints;\n}\n\n/** Orders an existing EndpointsConfig object based on enabled endpoint/custom ordering */\nexport function orderEndpointsConfig(endpointsConfig: t.TEndpointsConfig) {\n  if (!endpointsConfig) {\n    return {};\n  }\n  const enabledEndpoints = getEnabledEndpoints();\n  const endpointKeys = Object.keys(endpointsConfig);\n  const defaultCustomIndex = enabledEndpoints.indexOf(EModelEndpoint.custom);\n  return endpointKeys.reduce(\n    (accumulatedConfig: Record<string, t.TConfig | null | undefined>, currentEndpointKey) => {\n      const isCustom = !(currentEndpointKey in EModelEndpoint);\n      const isEnabled = enabledEndpoints.includes(currentEndpointKey);\n      if (!isEnabled && !isCustom) {\n        return accumulatedConfig;\n      }\n\n      const index = enabledEndpoints.indexOf(currentEndpointKey);\n\n      if (isCustom) {\n        accumulatedConfig[currentEndpointKey] = {\n          order: defaultCustomIndex >= 0 ? defaultCustomIndex : 9999,\n          ...(endpointsConfig[currentEndpointKey] as Omit<t.TConfig, 'order'> & { order?: number }),\n        };\n      } else if (endpointsConfig[currentEndpointKey]) {\n        accumulatedConfig[currentEndpointKey] = {\n          ...endpointsConfig[currentEndpointKey],\n          order: index,\n        };\n      }\n      return accumulatedConfig;\n    },\n    {},\n  );\n}\n\n/** Converts an array of Zod issues into a string. */\nexport function errorsToString(errors: ZodIssue[]) {\n  return errors\n    .map((error) => {\n      const field = error.path.join('.');\n      const message = error.message;\n\n      return `${field}: ${message}`;\n    })\n    .join(' ');\n}\n\nexport function getFirstDefinedValue(possibleValues: string[]) {\n  let returnValue;\n  for (const value of possibleValues) {\n    if (value) {\n      returnValue = value;\n      break;\n    }\n  }\n  return returnValue;\n}\n\nexport function getNonEmptyValue(possibleValues: string[]) {\n  for (const value of possibleValues) {\n    if (value && value.trim() !== '') {\n      return value;\n    }\n  }\n  return undefined;\n}\n\nexport type TPossibleValues = {\n  models: string[];\n  secondaryModels?: string[];\n};\n\nexport const parseConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint: EndpointSchemaKey;\n  endpointType?: EndpointSchemaKey | null;\n  conversation: Partial<s.TConversation | s.TPreset> | null;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  let schema = endpointSchemas[endpoint] as EndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = endpointSchemas[endpointType];\n  }\n\n  // if (defaultSchema && schemaCreators[endpoint]) {\n  //   schema = schemaCreators[endpoint](defaultSchema);\n  // }\n\n  const convo = schema?.parse(conversation) as s.TConversation | undefined;\n  const { models, secondaryModels } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  if (secondaryModels && convo?.agentOptions) {\n    convo.agentOptions.model = getFirstDefinedValue(secondaryModels) ?? convo.agentOptions.model;\n  }\n\n  return convo;\n};\n\n/** Match GPT followed by digit, optional decimal, and optional suffix\n *\n * Examples: gpt-4, gpt-4o, gpt-4.5, gpt-5a, etc. */\nconst extractGPTVersion = (modelStr: string): string => {\n  const gptMatch = modelStr.match(/gpt-(\\d+(?:\\.\\d+)?)([a-z])?/i);\n  if (gptMatch) {\n    const version = gptMatch[1];\n    const suffix = gptMatch[2] || '';\n    return `GPT-${version}${suffix}`;\n  }\n  return '';\n};\n\n/** Match omni models (o1, o3, etc.), \"o\" followed by a digit, possibly with decimal */\nconst extractOmniVersion = (modelStr: string): string => {\n  const omniMatch = modelStr.match(/\\bo(\\d+(?:\\.\\d+)?)\\b/i);\n  if (omniMatch) {\n    const version = omniMatch[1];\n    return `o${version}`;\n  }\n  return '';\n};\n\nexport const getResponseSender = (endpointOption: t.TEndpointOption): string => {\n  const {\n    model: _m,\n    endpoint: _e,\n    endpointType,\n    modelDisplayLabel: _mdl,\n    chatGptLabel: _cgl,\n    modelLabel: _ml,\n  } = endpointOption;\n\n  const endpoint = _e as EModelEndpoint;\n\n  const model = _m ?? '';\n  const modelDisplayLabel = _mdl ?? '';\n  const chatGptLabel = _cgl ?? '';\n  const modelLabel = _ml ?? '';\n  if (\n    [\n      EModelEndpoint.openAI,\n      EModelEndpoint.bedrock,\n      EModelEndpoint.gptPlugins,\n      EModelEndpoint.azureOpenAI,\n      EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)\n  ) {\n    if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (modelLabel) {\n      return modelLabel;\n    } else if (model && extractOmniVersion(model)) {\n      return extractOmniVersion(model);\n    } else if (model && (model.includes('mistral') || model.includes('codestral'))) {\n      return 'Mistral';\n    } else if (model && model.includes('deepseek')) {\n      return 'Deepseek';\n    } else if (model && model.includes('gpt-')) {\n      const gptVersion = extractGPTVersion(model);\n      return gptVersion || 'GPT';\n    }\n    return (alternateName[endpoint] as string | undefined) ?? 'ChatGPT';\n  }\n\n  if (endpoint === EModelEndpoint.anthropic) {\n    return modelLabel || 'Claude';\n  }\n\n  if (endpoint === EModelEndpoint.bedrock) {\n    return modelLabel || alternateName[endpoint];\n  }\n\n  if (endpoint === EModelEndpoint.google) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (model?.toLowerCase().includes('gemma') === true) {\n      return 'Gemma';\n    }\n\n    return 'Gemini';\n  }\n\n  if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && extractOmniVersion(model)) {\n      return extractOmniVersion(model);\n    } else if (model && (model.includes('mistral') || model.includes('codestral'))) {\n      return 'Mistral';\n    } else if (model && model.includes('deepseek')) {\n      return 'Deepseek';\n    } else if (model && model.includes('gpt-')) {\n      const gptVersion = extractGPTVersion(model);\n      return gptVersion || 'GPT';\n    } else if (modelDisplayLabel) {\n      return modelDisplayLabel;\n    }\n\n    return 'AI';\n  }\n\n  return '';\n};\n\ntype CompactEndpointSchema =\n  | typeof openAISchema\n  | typeof compactAssistantSchema\n  | typeof compactAgentsSchema\n  | typeof compactGoogleSchema\n  | typeof anthropicSchema\n  | typeof bedrockInputSchema\n  | typeof compactPluginsSchema;\n\nconst compactEndpointSchemas: Record<EndpointSchemaKey, CompactEndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.assistants]: compactAssistantSchema,\n  [EModelEndpoint.azureAssistants]: compactAssistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.google]: compactGoogleSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.gptPlugins]: compactPluginsSchema,\n};\n\nexport const parseCompactConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint?: EndpointSchemaKey;\n  endpointType?: EndpointSchemaKey | null;\n  conversation: Partial<s.TConversation | s.TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  if (!endpoint) {\n    throw new Error(`undefined endpoint: ${endpoint}`);\n  }\n\n  let schema = compactEndpointSchemas[endpoint] as CompactEndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = compactEndpointSchemas[endpointType];\n  }\n\n  if (!schema) {\n    throw new Error(`Unknown endpointType: ${endpointType}`);\n  }\n\n  const convo = schema.parse(conversation) as s.TConversation | null;\n  // const { models, secondaryModels } = possibleValues ?? {};\n  const { models } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  // if (secondaryModels && convo.agentOptions) {\n  //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n  // }\n\n  return convo;\n};\n\nexport function parseTextParts(\n  contentParts: a.TMessageContentParts[],\n  skipReasoning: boolean = false,\n): string {\n  let result = '';\n\n  for (const part of contentParts) {\n    if (!part.type) {\n      continue;\n    }\n    if (part.type === ContentTypes.TEXT) {\n      const textValue = typeof part.text === 'string' ? part.text : part.text.value;\n\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    } else if (part.type === ContentTypes.THINK && !skipReasoning) {\n      const textValue = typeof part.think === 'string' ? part.think : '';\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    }\n  }\n\n  return result;\n}\n\nexport const SEPARATORS = ['.', '?', '!', '۔', '。', '‥', ';', '¡', '¿', '\\n', '```'];\n\nexport function findLastSeparatorIndex(text: string, separators = SEPARATORS): number {\n  let lastIndex = -1;\n  for (const separator of separators) {\n    const index = text.lastIndexOf(separator);\n    if (index > lastIndex) {\n      lastIndex = index;\n    }\n  }\n  return lastIndex;\n}\n\nexport function replaceSpecialVars({ text, user }: { text: string; user?: t.TUser | null }) {\n  let result = text;\n  if (!result) {\n    return result;\n  }\n\n  // e.g., \"2024-04-29 (1)\" (1=Monday)\n  const currentDate = dayjs().format('YYYY-MM-DD');\n  const dayNumber = dayjs().day();\n  const combinedDate = `${currentDate} (${dayNumber})`;\n  result = result.replace(/{{current_date}}/gi, combinedDate);\n\n  const currentDatetime = dayjs().format('YYYY-MM-DD HH:mm:ss');\n  result = result.replace(/{{current_datetime}}/gi, `${currentDatetime} (${dayNumber})`);\n\n  const isoDatetime = dayjs().toISOString();\n  result = result.replace(/{{iso_datetime}}/gi, isoDatetime);\n\n  if (user && user.name) {\n    result = result.replace(/{{current_user}}/gi, user.name);\n  }\n\n  return result;\n}\n","import type { ZodError } from 'zod';\nimport type {\n  TAzureGroups,\n  TAzureGroupMap,\n  TAzureModelGroupMap,\n  TValidatedAzureConfig,\n  TAzureConfigValidationResult,\n} from '../src/config';\nimport { extractEnvVariable, envVarRegex } from '../src/utils';\nimport { azureGroupConfigsSchema } from '../src/config';\nimport { errorsToString } from '../src/parsers';\n\nexport const deprecatedAzureVariables = [\n  /* \"related to\" precedes description text */\n  { key: 'AZURE_OPENAI_DEFAULT_MODEL', description: 'setting a default model' },\n  { key: 'AZURE_OPENAI_MODELS', description: 'setting models' },\n  {\n    key: 'AZURE_USE_MODEL_AS_DEPLOYMENT_NAME',\n    description: 'using model names as deployment names',\n  },\n  { key: 'AZURE_API_KEY', description: 'setting a single Azure API key' },\n  { key: 'AZURE_OPENAI_API_INSTANCE_NAME', description: 'setting a single Azure instance name' },\n  {\n    key: 'AZURE_OPENAI_API_DEPLOYMENT_NAME',\n    description: 'setting a single Azure deployment name',\n  },\n  { key: 'AZURE_OPENAI_API_VERSION', description: 'setting a single Azure API version' },\n  {\n    key: 'AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure completions deployment name',\n  },\n  {\n    key: 'AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure embeddings deployment name',\n  },\n  {\n    key: 'PLUGINS_USE_AZURE',\n    description: 'using Azure for Plugins',\n  },\n];\n\nexport const conflictingAzureVariables = [\n  {\n    key: 'INSTANCE_NAME',\n  },\n  {\n    key: 'DEPLOYMENT_NAME',\n  },\n];\n\nexport function validateAzureGroups(configs: TAzureGroups): TAzureConfigValidationResult {\n  let isValid = true;\n  const modelNames: string[] = [];\n  const modelGroupMap: TAzureModelGroupMap = {};\n  const groupMap: TAzureGroupMap = {};\n  const errors: (ZodError | string)[] = [];\n\n  const result = azureGroupConfigsSchema.safeParse(configs);\n  if (!result.success) {\n    isValid = false;\n    errors.push(errorsToString(result.error.errors));\n  } else {\n    for (const group of result.data) {\n      const {\n        group: groupName,\n        apiKey,\n        instanceName = '',\n        deploymentName = '',\n        version = '',\n        baseURL = '',\n        additionalHeaders,\n        models,\n        serverless = false,\n        ...rest\n      } = group;\n\n      if (groupMap[groupName]) {\n        errors.push(`Duplicate group name detected: \"${groupName}\". Group names must be unique.`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (serverless && !baseURL) {\n        errors.push(`Group \"${groupName}\" is serverless but missing mandatory \"baseURL.\"`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (!instanceName && !serverless) {\n        errors.push(\n          `Group \"${groupName}\" is missing an \"instanceName\" for non-serverless configuration.`,\n        );\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      groupMap[groupName] = {\n        apiKey,\n        instanceName,\n        deploymentName,\n        version,\n        baseURL,\n        additionalHeaders,\n        models,\n        serverless,\n        ...rest,\n      };\n\n      for (const modelName in group.models) {\n        modelNames.push(modelName);\n        const model = group.models[modelName];\n\n        if (modelGroupMap[modelName]) {\n          errors.push(\n            `Duplicate model name detected: \"${modelName}\". Model names must be unique across groups.`,\n          );\n          return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n        }\n\n        if (serverless) {\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n          continue;\n        }\n\n        const groupDeploymentName = group.deploymentName ?? '';\n        const groupVersion = group.version ?? '';\n        if (typeof model === 'boolean') {\n          // For boolean models, check if group-level deploymentName and version are present.\n          if (!groupDeploymentName || !groupVersion) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n        } else {\n          const modelDeploymentName = model.deploymentName ?? '';\n          const modelVersion = model.version ?? '';\n          // For object models, check if deploymentName and version are required but missing.\n          if ((!modelDeploymentName && !groupDeploymentName) || (!modelVersion && !groupVersion)) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a required deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n            // deploymentName: modelDeploymentName || groupDeploymentName,\n            // version: modelVersion || groupVersion,\n          };\n        }\n      }\n    }\n  }\n\n  return { isValid, modelNames, modelGroupMap, groupMap, errors };\n}\n\ntype AzureOptions = {\n  azureOpenAIApiKey: string;\n  azureOpenAIApiInstanceName?: string;\n  azureOpenAIApiDeploymentName?: string;\n  azureOpenAIApiVersion?: string;\n};\n\ntype MappedAzureConfig = {\n  azureOptions: AzureOptions;\n  baseURL?: string;\n  headers?: Record<string, string>;\n  serverless?: boolean;\n};\n\nexport function mapModelToAzureConfig({\n  modelName,\n  modelGroupMap,\n  groupMap,\n}: Omit<TValidatedAzureConfig, 'modelNames'> & {\n  modelName: string;\n}): MappedAzureConfig {\n  const modelConfig = modelGroupMap[modelName];\n  if (!modelConfig) {\n    throw new Error(`Model named \"${modelName}\" not found in configuration.`);\n  }\n\n  const groupConfig = groupMap[modelConfig.group];\n  if (!groupConfig) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" for model \"${modelName}\" not found in configuration.`,\n    );\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n\n  if (!instanceName && groupConfig.serverless !== true) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const baseURL = groupConfig.baseURL ?? '';\n  if (groupConfig.serverless === true && !baseURL) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  if (groupConfig.serverless === true) {\n    const result: MappedAzureConfig = {\n      azureOptions: {\n        azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n        azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n      },\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n    };\n\n    const apiKeyValue = result.azureOptions.azureOpenAIApiKey;\n    if (typeof apiKeyValue === 'string' && envVarRegex.test(apiKeyValue)) {\n      throw new Error(`Azure configuration environment variable \"${apiKeyValue}\" was not found.`);\n    }\n\n    if (groupConfig.additionalHeaders) {\n      result.headers = groupConfig.additionalHeaders;\n    }\n\n    return result;\n  }\n\n  if (!instanceName) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const modelDetails = groupConfig.models[modelName];\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n        version: modelDetails.version ?? groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${modelName}\" in group \"${modelConfig.group}\" is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    azureOpenAIApiDeploymentName: extractEnvVariable(deploymentName),\n    azureOpenAIApiVersion: extractEnvVariable(version),\n  };\n\n  for (const value of Object.values(azureOptions)) {\n    if (typeof value === 'string' && envVarRegex.test(value)) {\n      throw new Error(`Azure configuration environment variable \"${value}\" was not found.`);\n    }\n  }\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n\nexport function mapGroupToAzureConfig({\n  groupName,\n  groupMap,\n}: {\n  groupName: string;\n  groupMap: TAzureGroupMap;\n}): MappedAzureConfig {\n  const groupConfig = groupMap[groupName];\n  if (!groupConfig) {\n    throw new Error(`Group named \"${groupName}\" not found in configuration.`);\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n  const serverless = groupConfig.serverless ?? false;\n  const baseURL = groupConfig.baseURL ?? '';\n\n  if (!instanceName && !serverless) {\n    throw new Error(\n      `Group \"${groupName}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  if (serverless && !baseURL) {\n    throw new Error(\n      `Group \"${groupName}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  const models = Object.keys(groupConfig.models);\n  if (models.length === 0) {\n    throw new Error(`Group \"${groupName}\" does not have any models configured.`);\n  }\n\n  // Use the first available model in the group\n  const firstModelName = models[0];\n  const modelDetails = groupConfig.models[firstModelName];\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    // DeploymentName and Version set below\n  };\n\n  if (serverless) {\n    return {\n      azureOptions,\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n      ...(groupConfig.additionalHeaders && { headers: groupConfig.additionalHeaders }),\n    };\n  }\n\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n        version: modelDetails.version ?? groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${firstModelName}\" in group \"${groupName}\" or the group itself is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  azureOptions.azureOpenAIApiDeploymentName = extractEnvVariable(deploymentName);\n  azureOptions.azureOpenAIApiVersion = extractEnvVariable(version);\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n","export enum ArtifactModes {\n  DEFAULT = 'default',\n  SHADCNUI = 'shadcnui',\n  CUSTOM = 'custom',\n}\n\nexport const utils = `\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`;\nexport const accordian = `import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n`;\nexport const alertDialog = `import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n`;\nexport const alert = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border border-gray-200 p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-gray-950 dark:border-gray-800 dark:[&>svg]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"border-red-500/50 text-red-500 dark:border-red-500 [&>svg]:text-red-500 dark:border-red-900/50 dark:text-red-900 dark:dark:border-red-900 dark:[&>svg]:text-red-900\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n\n`;\nexport const avatar = `import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n\n`;\nexport const badge = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-gray-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 dark:border-gray-800 dark:focus:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-gray-900 text-gray-50 hover:bg-gray-900/80 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/80\",\n        secondary:\n          \"border-transparent bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-gray-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/80\",\n        outline: \"text-gray-950 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n\n`;\nexport const breadcrumb = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-gray-500 sm:gap-2.5 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-gray-950 dark:hover:text-gray-50\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-gray-950 dark:text-gray-50\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n\n`;\nexport const button = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from '../../lib/utils';\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n        destructive:\n          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n`;\nexport const calendar = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-gray-500 rounded-md w-9 font-normal text-[0.8rem] dark:text-gray-400\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-gray-100/50 [&:has([aria-selected])]:bg-gray-100 first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20 dark:[&:has([aria-selected].day-outside)]:bg-gray-800/50 dark:[&:has([aria-selected])]:bg-gray-800\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-gray-900 text-gray-50 hover:bg-gray-900 hover:text-gray-50 focus:bg-gray-900 focus:text-gray-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50 dark:hover:text-gray-900 dark:focus:bg-gray-50 dark:focus:text-gray-900\",\n        day_today: \"bg-gray-100 text-gray-900 dark:bg-gray-800 dark:text-gray-50\",\n        day_outside:\n          \"day-outside text-gray-500 opacity-50 aria-selected:bg-gray-100/50 aria-selected:text-gray-500 aria-selected:opacity-30 dark:text-gray-400 dark:aria-selected:bg-gray-800/50 dark:aria-selected:text-gray-400\",\n        day_disabled: \"text-gray-500 opacity-50 dark:text-gray-400\",\n        day_range_middle:\n          \"aria-selected:bg-gray-100 aria-selected:text-gray-900 dark:aria-selected:bg-gray-800 dark:aria-selected:text-gray-50\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n\n`;\nexport const card = `import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-gray-200 bg-white text-gray-950 shadow-sm dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n`;\nexport const carousel = `import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { Button } from \"./button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n\n`;\nexport const checkbox = `import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-gray-200 dark:border-gray-900 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=checked]:text-gray-50  dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=checked]:bg-gray-50 dark:data-[state=checked]:text-gray-900\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n\n`;\nexport const collapsible = `import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n\n`;\nexport const dialog = `import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-gray-100 data-[state=open]:text-gray-500 dark:ring-offset-gray-950 dark:focus:ring-gray-300 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-400\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n\n`;\nexport const drawer = `import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-gray-100 dark:bg-gray-800\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n\n`;\nexport const dropdownMenu = `import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 data-[state=open]:bg-gray-100 dark:focus:bg-gray-800 dark:data-[state=open]:bg-gray-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n`;\nexport const hoverCard = `import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n\n`;\nexport const input = `import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n`;\nexport const label = `import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n`;\nexport const menuBar = `\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border border-gray-200 bg-white p-1 dark:border-gray-800 dark:bg-gray-950\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-gray-500 dark:text-gray-400\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n\n`;\nexport const navigationMenu = `import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-white px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900 focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-gray-100/50 data-[state=open]:bg-gray-100/50 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[active]:bg-gray-800/50 dark:data-[state=open]:bg-gray-800/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\"\"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)] dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-gray-200 shadow-md dark:bg-gray-800\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n\n`;\nexport const pagination = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { ButtonProps, buttonVariants } from \"./button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n\n`;\nexport const popover = `import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n\n`;\nexport const progress = `import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gray-900 transition-all dark:bg-gray-50\"\n      style={{ transform: \\`translateX(-\\${100 - (value || 0)}%)\\` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n`;\nexport const radioGroup = `import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-gray-200 dark:border-gray-900 text-gray-900 ring-offset-white focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50  dark:text-gray-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n\n`;\nexport const select = `import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus:ring-gray-300\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n\n`;\nexport const separator = `import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-gray-200 dark:bg-gray-800\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n`;\nexport const skeleton = `import { cn } from \"../../lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-gray-100 dark:bg-gray-800\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n`;\nexport const slider = `import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-gray-900 dark:bg-gray-50\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-gray-900 bg-white ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-50 dark:bg-gray-950 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n\n`;\nexport const switchComponent = `import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=unchecked]:bg-gray-200 dark:focus-visible:ring-gray-300 dark:focus-visible:ring-offset-gray-950 dark:data-[state=checked]:bg-gray-50 dark:data-[state=unchecked]:bg-gray-800\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0 dark:bg-gray-950\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n\n`;\nexport const table = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-gray-100/50 font-medium [&>tr]:last:border-b-0 dark:bg-gray-800/50\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-gray-100/50 data-[state=selected]:bg-gray-100 dark:hover:bg-gray-800/50 dark:data-[state=selected]:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-gray-500 [&:has([role=checkbox])]:pr-0 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n\n`;\nexport const tabs = `import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500 dark:bg-gray-800 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-gray-950 data-[state=active]:shadow-sm dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=active]:bg-gray-950 dark:data-[state=active]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n\n`;\nexport const textarea = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n\n`;\nexport const toast = `import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border border-gray-200 p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full dark:border-gray-800\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"destructive group border-red-500 bg-red-500 text-gray-50 dark:border-red-900 dark:bg-red-900 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border border-gray-200 bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-gray-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-gray-50 group-[.destructive]:focus:ring-red-500 dark:border-gray-800 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:focus:ring-gray-300 dark:group-[.destructive]:border-gray-800/40 dark:group-[.destructive]:hover:border-red-900/30 dark:group-[.destructive]:hover:bg-red-900 dark:group-[.destructive]:hover:text-gray-50 dark:group-[.destructive]:focus:ring-red-900\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-950/50 opacity-0 transition-opacity hover:text-gray-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600 dark:text-gray-50/50 dark:hover:text-gray-50\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n\n`;\nexport const toaster = `import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"./toast\"\nimport { useToast } from \"./use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n\n`;\nexport const toggleGroup = `import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\nimport { toggleVariants } from \"./toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n\n`;\nexport const toggle = `import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 hover:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-gray-100 data-[state=on]:text-gray-900 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-400 dark:focus-visible:ring-gray-300 dark:data-[state=on]:bg-gray-800 dark:data-[state=on]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-gray-200 bg-transparent hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n\n`;\nexport const tooltip = `import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border border-gray-200 bg-white px-3 py-1.5 text-sm text-gray-950 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n\n`;\nexport const useToast = `import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"./toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n`;\n\nexport const shadcnComponents = {\n  utils: utils,\n  accordian: accordian,\n  alertDialog: alertDialog,\n  alert: alert,\n  avatar: avatar,\n  badge: badge,\n  breadcrumb: breadcrumb,\n  button: button,\n  calendar: calendar,\n  card: card,\n  carousel: carousel,\n  checkbox: checkbox,\n  collapsible: collapsible,\n  dialog: dialog,\n  drawer: drawer,\n  dropdownMenu: dropdownMenu,\n  hoverCard: hoverCard,\n  input: input,\n  label: label,\n  menuBar: menuBar,\n  navigationMenu: navigationMenu,\n  pagination: pagination,\n  popover: popover,\n  progress: progress,\n  radioGroup: radioGroup,\n  select: select,\n  separator: separator,\n  skeleton: skeleton,\n  slider: slider,\n  switchComponent: switchComponent,\n  table: table,\n  tabs: tabs,\n  textarea: textarea,\n  toast: toast,\n  toaster: toaster,\n  toggleGroup: toggleGroup,\n  toggle: toggle,\n  tooltip: tooltip,\n  useToast: useToast,\n};\n\nexport const essentialShadcnComponents = {\n  utils: utils,\n  avatar: avatar,\n  button: button,\n  card: card,\n  checkbox: checkbox,\n  input: input,\n  label: label,\n  radioGroup: radioGroup,\n  select: select,\n  textarea: textarea,\n  // badge: badge,\n  // dialog: dialog,\n  // table: table,\n};\n","import type { TFile } from './types/files';\nimport type { TMessage } from './types';\n\nexport type ParentMessage = TMessage & { children: TMessage[]; depth: number };\nexport function buildTree({\n  messages,\n  fileMap,\n}: {\n  messages: (TMessage | undefined)[] | null;\n  fileMap?: Record<string, TFile>;\n}) {\n  if (messages === null) {\n    return null;\n  }\n\n  const messageMap: Record<string, ParentMessage> = {};\n  const rootMessages: TMessage[] = [];\n  const childrenCount: Record<string, number> = {};\n\n  messages.forEach((message) => {\n    if (!message) {\n      return;\n    }\n    const parentId = message.parentMessageId ?? '';\n    childrenCount[parentId] = (childrenCount[parentId] || 0) + 1;\n\n    const extendedMessage: ParentMessage = {\n      ...message,\n      children: [],\n      depth: 0,\n      siblingIndex: childrenCount[parentId] - 1,\n    };\n\n    if (message.files && fileMap) {\n      extendedMessage.files = message.files.map((file) => fileMap[file.file_id ?? ''] ?? file);\n    }\n\n    messageMap[message.messageId] = extendedMessage;\n\n    const parentMessage = messageMap[parentId];\n    if (parentMessage) {\n      parentMessage.children.push(extendedMessage);\n      extendedMessage.depth = parentMessage.depth + 1;\n    } else {\n      rootMessages.push(extendedMessage);\n    }\n  });\n\n  return rootMessages;\n}\n","import { z, ZodArray, ZodError, ZodIssueCode } from 'zod';\nimport { tConversationSchema, googleSettings as google, openAISettings as openAI } from './schemas';\nimport type { ZodIssue } from 'zod';\nimport type { TConversation, TSetOption, TPreset } from './schemas';\n\nexport type GoogleSettings = Partial<typeof google>;\nexport type OpenAISettings = Partial<typeof google>;\n\nexport type ComponentType =\n  | 'input'\n  | 'textarea'\n  | 'slider'\n  | 'checkbox'\n  | 'switch'\n  | 'dropdown'\n  | 'combobox'\n  | 'tags';\n\nexport type OptionType = 'conversation' | 'model' | 'custom';\n\nexport type Option = Record<string, unknown> & {\n  label?: string;\n  value: string | number | null;\n};\n\nexport type OptionWithIcon = Option & { icon?: React.ReactNode };\n\nexport enum ComponentTypes {\n  Input = 'input',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  Checkbox = 'checkbox',\n  Switch = 'switch',\n  Dropdown = 'dropdown',\n  Combobox = 'combobox',\n  Tags = 'tags',\n}\n\nexport enum SettingTypes {\n  Number = 'number',\n  Boolean = 'boolean',\n  String = 'string',\n  Enum = 'enum',\n  Array = 'array',\n}\n\nexport enum OptionTypes {\n  Conversation = 'conversation',\n  Model = 'model',\n  Custom = 'custom',\n}\nexport interface SettingDefinition {\n  key: string;\n  description?: string;\n  type: 'number' | 'boolean' | 'string' | 'enum' | 'array';\n  default?: number | boolean | string | string[];\n  showLabel?: boolean;\n  showDefault?: boolean;\n  options?: string[];\n  range?: SettingRange;\n  enumMappings?: Record<string, number | boolean | string>;\n  component: ComponentType;\n  optionType?: OptionType;\n  columnSpan?: number;\n  columns?: number;\n  label?: string;\n  placeholder?: string;\n  labelCode?: boolean;\n  placeholderCode?: boolean;\n  descriptionCode?: boolean;\n  minText?: number;\n  maxText?: number;\n  minTags?: number; // Specific to tags component\n  maxTags?: number; // Specific to tags component\n  includeInput?: boolean; // Specific to slider component\n  descriptionSide?: 'top' | 'right' | 'bottom' | 'left';\n  items?: OptionWithIcon[]; // Specific to combobox component\n  searchPlaceholder?: string; // Specific to combobox component\n  selectPlaceholder?: string; // Specific to combobox component\n  searchPlaceholderCode?: boolean; // Specific to combobox component\n  selectPlaceholderCode?: boolean; // Specific to combobox component\n}\n\nexport type DynamicSettingProps = Partial<SettingDefinition> & {\n  readonly?: boolean;\n  settingKey: string;\n  setOption: TSetOption;\n  conversation: Partial<TConversation> | Partial<TPreset> | null;\n  defaultValue?: number | boolean | string | string[];\n  className?: string;\n  inputClassName?: string;\n};\n\nconst requiredSettingFields = ['key', 'type', 'component'];\n\nexport interface SettingRange {\n  min: number;\n  max: number;\n  step?: number;\n}\n\nexport type SettingsConfiguration = SettingDefinition[];\n\nexport function generateDynamicSchema(settings: SettingsConfiguration) {\n  const schemaFields: { [key: string]: z.ZodTypeAny } = {};\n\n  for (const setting of settings) {\n    const {\n      key,\n      type,\n      default: defaultValue,\n      range,\n      options,\n      minText,\n      maxText,\n      minTags,\n      maxTags,\n    } = setting;\n\n    if (type === SettingTypes.Number) {\n      let schema = z.number();\n      if (range) {\n        schema = schema.min(range.min);\n        schema = schema.max(range.max);\n      }\n      if (typeof defaultValue === 'number') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Boolean) {\n      const schema = z.boolean();\n      if (typeof defaultValue === 'boolean') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.String) {\n      let schema = z.string();\n      if (minText) {\n        schema = schema.min(minText);\n      }\n      if (maxText) {\n        schema = schema.max(maxText);\n      }\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Enum) {\n      if (!options || options.length === 0) {\n        console.warn(`Missing or empty 'options' for enum setting '${key}'.`);\n        continue;\n      }\n\n      const schema = z.enum(options as [string, ...string[]]);\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Array) {\n      let schema: z.ZodSchema = z.array(z.string().or(z.number()));\n      if (minTags && schema instanceof ZodArray) {\n        schema = schema.min(minTags);\n      }\n      if (maxTags && schema instanceof ZodArray) {\n        schema = schema.max(maxTags);\n      }\n\n      if (defaultValue && Array.isArray(defaultValue)) {\n        schema = schema.default(defaultValue);\n      }\n\n      schemaFields[key] = schema;\n      continue;\n    }\n\n    console.warn(`Unsupported setting type: ${type}`);\n  }\n\n  return z.object(schemaFields);\n}\n\nconst ZodTypeToSettingType: Record<string, string | undefined> = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBoolean: 'boolean',\n};\n\nconst minColumns = 1;\nconst maxColumns = 4;\nconst minSliderOptions = 2;\nconst minDropdownOptions = 2;\nconst minComboboxOptions = 2;\n\n/**\n * Validates the provided setting using the constraints unique to each component type.\n * @throws {ZodError} Throws a ZodError if any validation fails.\n */\nexport function validateSettingDefinitions(settings: SettingsConfiguration): void {\n  const errors: ZodIssue[] = [];\n  // Validate columns\n  const columnsSet = new Set<number>();\n  for (const setting of settings) {\n    if (setting.columns !== undefined) {\n      if (setting.columns < minColumns || setting.columns > maxColumns) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid columns value for setting ${setting.key}. Must be between ${minColumns} and ${maxColumns}.`,\n          path: ['columns'],\n        });\n      } else {\n        columnsSet.add(setting.columns);\n      }\n    }\n  }\n\n  const columns = columnsSet.size === 1 ? columnsSet.values().next().value : 2;\n\n  for (const setting of settings) {\n    for (const field of requiredSettingFields) {\n      if (setting[field as keyof SettingDefinition] === undefined) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Missing required field ${field} for setting ${setting.key}.`,\n          path: [field],\n        });\n      }\n    }\n\n    // check accepted types\n    const settingTypes = Object.values(SettingTypes);\n    if (!settingTypes.includes(setting.type as SettingTypes)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid type for setting ${setting.key}. Must be one of ${settingTypes.join(\n          ', ',\n        )}.`,\n        path: ['type'],\n      });\n    }\n\n    // Predefined constraints based on components\n    if (\n      (setting.component === ComponentTypes.Tags && setting.type !== SettingTypes.Array) ||\n      (setting.component !== ComponentTypes.Tags && setting.type === SettingTypes.Array)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Tags component for setting ${setting.key} must have type array.`,\n        path: ['type'],\n      });\n    }\n\n    if (setting.component === ComponentTypes.Tags) {\n      if (setting.minTags !== undefined && setting.minTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minTags'],\n        });\n      }\n      if (setting.maxTags !== undefined && setting.maxTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxTags'],\n        });\n      }\n      if (setting.default && !Array.isArray(setting.default)) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must be an array.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.maxTags && (setting.default as []).length > setting.maxTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at most ${setting.maxTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.minTags && (setting.default as []).length < setting.minTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at least ${setting.minTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (!setting.default) {\n        setting.default = [];\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.type === SettingTypes.Number && setting.component === ComponentTypes.Textarea) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Textarea component for setting ${setting.key} must have type string.`,\n          path: ['type'],\n        });\n        // continue;\n      }\n\n      if (\n        setting.minText !== undefined &&\n        setting.maxText !== undefined &&\n        setting.minText > setting.maxText\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `For setting ${setting.key}, minText cannot be greater than maxText.`,\n          path: [setting.key, 'minText', 'maxText'],\n        });\n        // continue;\n      }\n      if (!setting.placeholder) {\n        setting.placeholder = '';\n      } // Default placeholder\n    }\n\n    if (setting.component === ComponentTypes.Slider) {\n      if (setting.type === SettingTypes.Number && !setting.range) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} must have a range if type is number.`,\n          path: ['range'],\n        });\n        // continue;\n      }\n      if (\n        setting.type === SettingTypes.Enum &&\n        (!setting.options || setting.options.length < minSliderOptions)\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} requires at least ${minSliderOptions} options for enum type.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      setting.includeInput =\n        setting.type === SettingTypes.Number ? (setting.includeInput ?? true) : false; // Default to true if type is number\n    }\n\n    if (setting.component === ComponentTypes.Slider && setting.type === SettingTypes.Number) {\n      if (setting.default === undefined && setting.range) {\n        // Set default to the middle of the range if unspecified\n        setting.default = Math.round((setting.range.min + setting.range.max) / 2);\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Checkbox ||\n      setting.component === ComponentTypes.Switch\n    ) {\n      if (setting.options && setting.options.length > 2) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Checkbox/Switch component for setting ${setting.key} must have 1-2 options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.type === SettingTypes.Boolean) {\n        setting.default = false; // Default to false if type is boolean\n      }\n    }\n\n    if (setting.component === ComponentTypes.Dropdown) {\n      if (!setting.options || setting.options.length < minDropdownOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Dropdown component for setting ${setting.key} requires at least ${minDropdownOptions} options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0]; // Default to first option if not specified\n      }\n    }\n\n    if (setting.component === ComponentTypes.Combobox) {\n      if (!setting.options || setting.options.length < minComboboxOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Combobox component for setting ${setting.key} requires at least ${minComboboxOptions} options.`,\n          path: ['options'],\n        });\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0];\n      }\n    }\n\n    // Default columnSpan\n    if (!setting.columnSpan) {\n      setting.columnSpan = Math.floor((columns ?? 0) / 2);\n    }\n\n    // Default label to key\n    if (!setting.label) {\n      setting.label = setting.key;\n    }\n\n    // Validate minText and maxText for input/textarea\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.minText !== undefined && setting.minText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minText'],\n        });\n      }\n      if (setting.maxText !== undefined && setting.maxText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxText'],\n        });\n      }\n    }\n\n    // Validate optionType and conversation schema\n    if (setting.optionType !== OptionTypes.Custom) {\n      const conversationSchema =\n        tConversationSchema.shape[setting.key as keyof Omit<TConversation, 'disableParams'>];\n      if (!conversationSchema) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must be defined in tConversationSchema.`,\n          path: ['optionType'],\n        });\n      } else {\n        const zodType = conversationSchema._def.typeName;\n        const settingTypeEquivalent = ZodTypeToSettingType[zodType] || null;\n        if (settingTypeEquivalent !== setting.type) {\n          errors.push({\n            code: ZodIssueCode.custom,\n            message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must match the type defined in tConversationSchema.`,\n            path: ['optionType'],\n          });\n        }\n      }\n    }\n\n    /* Default value checks */\n    if (\n      setting.type === SettingTypes.Number &&\n      isNaN(setting.default as number) &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a number.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Boolean &&\n      typeof setting.default !== 'boolean' &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a boolean.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      (setting.type === SettingTypes.String || setting.type === SettingTypes.Enum) &&\n      typeof setting.default !== 'string' &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a string.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Enum &&\n      setting.options &&\n      !setting.options.includes(setting.default as string)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${\n          setting.key\n        }. Must be one of the options: [${setting.options.join(', ')}].`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Number &&\n      setting.range &&\n      typeof setting.default === 'number' &&\n      (setting.default < setting.range.min || setting.default > setting.range.max)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be within the range [${setting.range.min}, ${setting.range.max}].`,\n        path: ['default'],\n      });\n    }\n\n    // Validate enumMappings\n    if (setting.enumMappings && setting.type === SettingTypes.Enum && setting.options) {\n      for (const option of setting.options) {\n        if (!(option in setting.enumMappings)) {\n          errors.push({\n            code: ZodIssueCode.custom,\n            message: `Missing enumMapping for option \"${option}\" in setting ${setting.key}.`,\n            path: ['enumMappings'],\n          });\n        }\n      }\n    }\n  }\n\n  if (errors.length > 0) {\n    throw new ZodError(errors);\n  }\n}\n\nexport const generateOpenAISchema = (customOpenAI: OpenAISettings) => {\n  const defaults = { ...openAI, ...customOpenAI };\n  return tConversationSchema\n    .pick({\n      model: true,\n      chatGptLabel: true,\n      promptPrefix: true,\n      temperature: true,\n      top_p: true,\n      presence_penalty: true,\n      frequency_penalty: true,\n      resendFiles: true,\n      imageDetail: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => ({\n      ...obj,\n      model: obj.model ?? defaults.model.default,\n      chatGptLabel: obj.chatGptLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? defaults.temperature.default,\n      top_p: obj.top_p ?? defaults.top_p.default,\n      presence_penalty: obj.presence_penalty ?? defaults.presence_penalty.default,\n      frequency_penalty: obj.frequency_penalty ?? defaults.frequency_penalty.default,\n      resendFiles:\n        typeof obj.resendFiles === 'boolean' ? obj.resendFiles : defaults.resendFiles.default,\n      imageDetail: obj.imageDetail ?? defaults.imageDetail.default,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    }))\n    .catch(() => ({\n      model: defaults.model.default,\n      chatGptLabel: null,\n      promptPrefix: null,\n      temperature: defaults.temperature.default,\n      top_p: defaults.top_p.default,\n      presence_penalty: defaults.presence_penalty.default,\n      frequency_penalty: defaults.frequency_penalty.default,\n      resendFiles: defaults.resendFiles.default,\n      imageDetail: defaults.imageDetail.default,\n      maxContextTokens: undefined,\n    }));\n};\n\nexport const generateGoogleSchema = (customGoogle: GoogleSettings) => {\n  const defaults = { ...google, ...customGoogle };\n  return tConversationSchema\n    .pick({\n      model: true,\n      modelLabel: true,\n      promptPrefix: true,\n      examples: true,\n      temperature: true,\n      maxOutputTokens: true,\n      topP: true,\n      topK: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => {\n      return {\n        ...obj,\n        model: obj.model ?? defaults.model.default,\n        modelLabel: obj.modelLabel ?? null,\n        promptPrefix: obj.promptPrefix ?? null,\n        examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n        temperature: obj.temperature ?? defaults.temperature.default,\n        maxOutputTokens: obj.maxOutputTokens ?? defaults.maxOutputTokens.default,\n        topP: obj.topP ?? defaults.topP.default,\n        topK: obj.topK ?? defaults.topK.default,\n        maxContextTokens: obj.maxContextTokens ?? undefined,\n      };\n    })\n    .catch(() => ({\n      model: defaults.model.default,\n      modelLabel: null,\n      promptPrefix: null,\n      examples: [{ input: { content: '' }, output: { content: '' } }],\n      temperature: defaults.temperature.default,\n      maxOutputTokens: defaults.maxOutputTokens.default,\n      topP: defaults.topP.default,\n      topK: defaults.topK.default,\n      maxContextTokens: undefined,\n    }));\n};\n","import type { TCustomConfig } from '../src/config';\nimport { OCRStrategy } from '../src/config';\n\nexport function loadOCRConfig(config: TCustomConfig['ocr']): TCustomConfig['ocr'] {\n  const baseURL = config?.baseURL ?? '';\n  const apiKey = config?.apiKey ?? '';\n  const mistralModel = config?.mistralModel ?? '';\n  return {\n    apiKey,\n    baseURL,\n    mistralModel,\n    strategy: config?.strategy ?? OCRStrategy.MISTRAL_OCR,\n  };\n}\n","import { z } from 'zod';\n\n/**\n * Enum for Permission Types\n */\nexport enum PermissionTypes {\n  /**\n   * Type for Prompt Permissions\n   */\n  PROMPTS = 'PROMPTS',\n  /**\n   * Type for Bookmark Permissions\n   */\n  BOOKMARKS = 'BOOKMARKS',\n  /**\n   * Type for Agent Permissions\n   */\n  AGENTS = 'AGENTS',\n  /**\n   * Type for Memory Permissions\n   */\n  MEMORIES = 'MEMORIES',\n  /**\n   * Type for Multi-Conversation Permissions\n   */\n  MULTI_CONVO = 'MULTI_CONVO',\n  /**\n   * Type for Temporary Chat\n   */\n  TEMPORARY_CHAT = 'TEMPORARY_CHAT',\n  /**\n   * Type for using the \"Run Code\" LC Code Interpreter API feature\n   */\n  RUN_CODE = 'RUN_CODE',\n  /**\n   * Type for using the \"Web Search\" feature\n   */\n  WEB_SEARCH = 'WEB_SEARCH',\n  /**\n   * Type for People Picker Permissions\n   */\n  PEOPLE_PICKER = 'PEOPLE_PICKER',\n  /**\n   * Type for Marketplace Permissions\n   */\n  MARKETPLACE = 'MARKETPLACE',\n  /**\n   * Type for using the \"File Search\" feature\n   */\n  FILE_SEARCH = 'FILE_SEARCH',\n  /**\n   * Type for using the \"File Citations\" feature in agents\n   */\n  FILE_CITATIONS = 'FILE_CITATIONS',\n}\n\n/**\n * Enum for Role-Based Access Control Constants\n */\nexport enum Permissions {\n  SHARED_GLOBAL = 'SHARED_GLOBAL',\n  USE = 'USE',\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  READ = 'READ',\n  READ_AUTHOR = 'READ_AUTHOR',\n  SHARE = 'SHARE',\n  /** Can disable if desired */\n  OPT_OUT = 'OPT_OUT',\n  VIEW_USERS = 'VIEW_USERS',\n  VIEW_GROUPS = 'VIEW_GROUPS',\n  VIEW_ROLES = 'VIEW_ROLES',\n}\n\nexport const promptPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\nexport type TPromptPermissions = z.infer<typeof promptPermissionsSchema>;\n\nexport const bookmarkPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TBookmarkPermissions = z.infer<typeof bookmarkPermissionsSchema>;\n\nexport const memoryPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  [Permissions.UPDATE]: z.boolean().default(true),\n  [Permissions.READ]: z.boolean().default(true),\n  [Permissions.OPT_OUT]: z.boolean().default(true),\n});\nexport type TMemoryPermissions = z.infer<typeof memoryPermissionsSchema>;\n\nexport const agentPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\nexport type TAgentPermissions = z.infer<typeof agentPermissionsSchema>;\n\nexport const multiConvoPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TMultiConvoPermissions = z.infer<typeof multiConvoPermissionsSchema>;\n\nexport const temporaryChatPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TTemporaryChatPermissions = z.infer<typeof temporaryChatPermissionsSchema>;\n\nexport const runCodePermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TRunCodePermissions = z.infer<typeof runCodePermissionsSchema>;\n\nexport const webSearchPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TWebSearchPermissions = z.infer<typeof webSearchPermissionsSchema>;\n\nexport const peoplePickerPermissionsSchema = z.object({\n  [Permissions.VIEW_USERS]: z.boolean().default(true),\n  [Permissions.VIEW_GROUPS]: z.boolean().default(true),\n  [Permissions.VIEW_ROLES]: z.boolean().default(true),\n});\nexport type TPeoplePickerPermissions = z.infer<typeof peoplePickerPermissionsSchema>;\n\nexport const marketplacePermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(false),\n});\nexport type TMarketplacePermissions = z.infer<typeof marketplacePermissionsSchema>;\n\nexport const fileSearchPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TFileSearchPermissions = z.infer<typeof fileSearchPermissionsSchema>;\n\nexport const fileCitationsPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TFileCitationsPermissions = z.infer<typeof fileCitationsPermissionsSchema>;\n\n// Define a single permissions schema that holds all permission types.\nexport const permissionsSchema = z.object({\n  [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n  [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n  [PermissionTypes.MEMORIES]: memoryPermissionsSchema,\n  [PermissionTypes.AGENTS]: agentPermissionsSchema,\n  [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n  [PermissionTypes.TEMPORARY_CHAT]: temporaryChatPermissionsSchema,\n  [PermissionTypes.RUN_CODE]: runCodePermissionsSchema,\n  [PermissionTypes.WEB_SEARCH]: webSearchPermissionsSchema,\n  [PermissionTypes.PEOPLE_PICKER]: peoplePickerPermissionsSchema,\n  [PermissionTypes.MARKETPLACE]: marketplacePermissionsSchema,\n  [PermissionTypes.FILE_SEARCH]: fileSearchPermissionsSchema,\n  [PermissionTypes.FILE_CITATIONS]: fileCitationsPermissionsSchema,\n});\n","import { z } from 'zod';\nimport {\n  Permissions,\n  PermissionTypes,\n  permissionsSchema,\n  agentPermissionsSchema,\n  promptPermissionsSchema,\n  memoryPermissionsSchema,\n  runCodePermissionsSchema,\n  bookmarkPermissionsSchema,\n  webSearchPermissionsSchema,\n  fileSearchPermissionsSchema,\n  multiConvoPermissionsSchema,\n  temporaryChatPermissionsSchema,\n  peoplePickerPermissionsSchema,\n  fileCitationsPermissionsSchema,\n} from './permissions';\n\n/**\n * Enum for System Defined Roles\n */\nexport enum SystemRoles {\n  /**\n   * The Admin role\n   */\n  ADMIN = 'ADMIN',\n  /**\n   * The default user role\n   */\n  USER = 'USER',\n}\n\nexport const roleSchema = z.object({\n  name: z.string(),\n  permissions: permissionsSchema,\n});\n\nexport type TRole = z.infer<typeof roleSchema>;\n\nconst defaultRolesSchema = z.object({\n  [SystemRoles.ADMIN]: roleSchema.extend({\n    name: z.literal(SystemRoles.ADMIN),\n    permissions: permissionsSchema.extend({\n      [PermissionTypes.PROMPTS]: promptPermissionsSchema.extend({\n        [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        // [Permissions.SHARE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MEMORIES]: memoryPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        [Permissions.UPDATE]: z.boolean().default(true),\n        [Permissions.READ]: z.boolean().default(true),\n        [Permissions.OPT_OUT]: z.boolean().default(true),\n      }),\n      [PermissionTypes.AGENTS]: agentPermissionsSchema.extend({\n        [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        // [Permissions.SHARE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.TEMPORARY_CHAT]: temporaryChatPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.RUN_CODE]: runCodePermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.WEB_SEARCH]: webSearchPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.PEOPLE_PICKER]: peoplePickerPermissionsSchema.extend({\n        [Permissions.VIEW_USERS]: z.boolean().default(true),\n        [Permissions.VIEW_GROUPS]: z.boolean().default(true),\n        [Permissions.VIEW_ROLES]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MARKETPLACE]: z.object({\n        [Permissions.USE]: z.boolean().default(false),\n      }),\n      [PermissionTypes.FILE_SEARCH]: fileSearchPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.FILE_CITATIONS]: fileCitationsPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n    }),\n  }),\n  [SystemRoles.USER]: roleSchema.extend({\n    name: z.literal(SystemRoles.USER),\n    permissions: permissionsSchema,\n  }),\n});\n\nexport const roleDefaults = defaultRolesSchema.parse({\n  [SystemRoles.ADMIN]: {\n    name: SystemRoles.ADMIN,\n    permissions: {\n      [PermissionTypes.PROMPTS]: {\n        [Permissions.SHARED_GLOBAL]: true,\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n      },\n      [PermissionTypes.BOOKMARKS]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.MEMORIES]: {\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n        [Permissions.UPDATE]: true,\n        [Permissions.READ]: true,\n        [Permissions.OPT_OUT]: true,\n      },\n      [PermissionTypes.AGENTS]: {\n        [Permissions.SHARED_GLOBAL]: true,\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n      },\n      [PermissionTypes.MULTI_CONVO]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.TEMPORARY_CHAT]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.RUN_CODE]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.WEB_SEARCH]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.PEOPLE_PICKER]: {\n        [Permissions.VIEW_USERS]: true,\n        [Permissions.VIEW_GROUPS]: true,\n        [Permissions.VIEW_ROLES]: true,\n      },\n      [PermissionTypes.MARKETPLACE]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.FILE_SEARCH]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.FILE_CITATIONS]: {\n        [Permissions.USE]: true,\n      },\n    },\n  },\n  [SystemRoles.USER]: {\n    name: SystemRoles.USER,\n    permissions: {\n      [PermissionTypes.PROMPTS]: {},\n      [PermissionTypes.BOOKMARKS]: {},\n      [PermissionTypes.MEMORIES]: {},\n      [PermissionTypes.AGENTS]: {},\n      [PermissionTypes.MULTI_CONVO]: {},\n      [PermissionTypes.TEMPORARY_CHAT]: {},\n      [PermissionTypes.RUN_CODE]: {},\n      [PermissionTypes.WEB_SEARCH]: {},\n      [PermissionTypes.PEOPLE_PICKER]: {\n        [Permissions.VIEW_USERS]: false,\n        [Permissions.VIEW_GROUPS]: false,\n        [Permissions.VIEW_ROLES]: false,\n      },\n      [PermissionTypes.MARKETPLACE]: {\n        [Permissions.USE]: false,\n      },\n      [PermissionTypes.FILE_SEARCH]: {},\n      [PermissionTypes.FILE_CITATIONS]: {},\n    },\n  },\n});\n","import type { Logger as WinstonLogger } from 'winston';\nimport type { RunnableConfig } from '@langchain/core/runnables';\n\nexport type SearchRefType = 'search' | 'image' | 'news' | 'video' | 'ref';\n\nexport enum DATE_RANGE {\n  PAST_HOUR = 'h',\n  PAST_24_HOURS = 'd',\n  PAST_WEEK = 'w',\n  PAST_MONTH = 'm',\n  PAST_YEAR = 'y',\n}\n\nexport type SearchProvider = 'serper' | 'searxng';\nexport type RerankerType = 'infinity' | 'jina' | 'cohere' | 'none';\n\nexport interface Highlight {\n  score: number;\n  text: string;\n  references?: UsedReferences;\n}\n\nexport type ProcessedSource = {\n  content?: string;\n  attribution?: string;\n  references?: References;\n  highlights?: Highlight[];\n  processed?: boolean;\n};\n\nexport type ProcessedOrganic = OrganicResult & ProcessedSource;\nexport type ProcessedTopStory = TopStoryResult & ProcessedSource;\nexport type ValidSource = ProcessedOrganic | ProcessedTopStory;\n\nexport type ResultReference = {\n  link: string;\n  type: 'link' | 'image' | 'video' | 'file';\n  title?: string;\n  attribution?: string;\n};\nexport interface SearchResultData {\n  turn?: number;\n  organic?: ProcessedOrganic[];\n  topStories?: ProcessedTopStory[];\n  images?: ImageResult[];\n  videos?: VideoResult[];\n  places?: PlaceResult[];\n  news?: NewsResult[];\n  shopping?: ShoppingResult[];\n  knowledgeGraph?: KnowledgeGraphResult;\n  answerBox?: AnswerBoxResult;\n  peopleAlsoAsk?: PeopleAlsoAskResult[];\n  relatedSearches?: Array<{ query: string }>;\n  references?: ResultReference[];\n  error?: string;\n}\n\nexport interface SearchResult {\n  data?: SearchResultData;\n  error?: string;\n  success: boolean;\n}\n\nexport interface Source {\n  link: string;\n  html?: string;\n  title?: string;\n  snippet?: string;\n  date?: string;\n}\n\nexport interface SearchConfig {\n  searchProvider?: SearchProvider;\n  serperApiKey?: string;\n  searxngInstanceUrl?: string;\n  searxngApiKey?: string;\n}\n\nexport type References = {\n  links: MediaReference[];\n  images: MediaReference[];\n  videos: MediaReference[];\n};\nexport interface ScrapeResult {\n  url: string;\n  error?: boolean;\n  content: string;\n  attribution?: string;\n  references?: References;\n  highlights?: Highlight[];\n}\n\nexport interface ProcessSourcesConfig {\n  topResults?: number;\n  strategies?: string[];\n  filterContent?: boolean;\n  reranker?: unknown;\n  logger?: Logger;\n}\n\nexport interface FirecrawlConfig {\n  firecrawlApiKey?: string;\n  firecrawlApiUrl?: string;\n  firecrawlOptions?: {\n    formats?: string[];\n    includeTags?: string[];\n    excludeTags?: string[];\n    headers?: Record<string, string>;\n    waitFor?: number;\n    timeout?: number;\n    maxAge?: number;\n    mobile?: boolean;\n    skipTlsVerification?: boolean;\n    blockAds?: boolean;\n    removeBase64Images?: boolean;\n    parsePDF?: boolean;\n    storeInCache?: boolean;\n    zeroDataRetention?: boolean;\n    location?: {\n      country?: string;\n      languages?: string[];\n    };\n    onlyMainContent?: boolean;\n    changeTrackingOptions?: {\n      modes?: string[];\n      schema?: Record<string, unknown>;\n      prompt?: string;\n      tag?: string | null;\n    };\n  };\n}\n\nexport interface ScraperContentResult {\n  content: string;\n}\n\nexport interface ScraperExtractionResult {\n  no_extraction: ScraperContentResult;\n}\n\nexport interface JinaRerankerResult {\n  index: number;\n  relevance_score: number;\n  document?: string | { text: string };\n}\n\nexport interface JinaRerankerResponse {\n  model: string;\n  usage: {\n    total_tokens: number;\n  };\n  results: JinaRerankerResult[];\n}\n\nexport interface CohereRerankerResult {\n  index: number;\n  relevance_score: number;\n}\n\nexport interface CohereRerankerResponse {\n  results: CohereRerankerResult[];\n  id: string;\n  meta: {\n    api_version: {\n      version: string;\n      is_experimental: boolean;\n    };\n    billed_units: {\n      search_units: number;\n    };\n  };\n}\n\nexport type SafeSearchLevel = 0 | 1 | 2;\n\nexport type Logger = WinstonLogger;\nexport interface SearchToolConfig extends SearchConfig, ProcessSourcesConfig, FirecrawlConfig {\n  logger?: Logger;\n  safeSearch?: SafeSearchLevel;\n  jinaApiKey?: string;\n  jinaApiUrl?: string;\n  cohereApiKey?: string;\n  rerankerType?: RerankerType;\n  onSearchResults?: (results: SearchResult, runnableConfig?: RunnableConfig) => void;\n  onGetHighlights?: (link: string) => void;\n}\nexport interface MediaReference {\n  originalUrl: string;\n  title?: string;\n  text?: string;\n}\n\nexport type UsedReferences = {\n  type: 'link' | 'image' | 'video';\n  originalIndex: number;\n  reference: MediaReference;\n}[];\n\n/** Firecrawl */\n\nexport interface FirecrawlScrapeOptions {\n  formats?: string[];\n  includeTags?: string[];\n  excludeTags?: string[];\n  headers?: Record<string, string>;\n  waitFor?: number;\n  timeout?: number;\n}\n\nexport interface ScrapeMetadata {\n  // Core source information\n  sourceURL?: string;\n  url?: string;\n  scrapeId?: string;\n  statusCode?: number;\n  // Basic metadata\n  title?: string;\n  description?: string;\n  language?: string;\n  favicon?: string;\n  viewport?: string;\n  robots?: string;\n  'theme-color'?: string;\n  // Open Graph metadata\n  'og:url'?: string;\n  'og:title'?: string;\n  'og:description'?: string;\n  'og:type'?: string;\n  'og:image'?: string;\n  'og:image:width'?: string;\n  'og:image:height'?: string;\n  'og:site_name'?: string;\n  ogUrl?: string;\n  ogTitle?: string;\n  ogDescription?: string;\n  ogImage?: string;\n  ogSiteName?: string;\n  // Article metadata\n  'article:author'?: string;\n  'article:published_time'?: string;\n  'article:modified_time'?: string;\n  'article:section'?: string;\n  'article:tag'?: string;\n  'article:publisher'?: string;\n  publishedTime?: string;\n  modifiedTime?: string;\n  // Twitter metadata\n  'twitter:site'?: string | boolean | number | null;\n  'twitter:creator'?: string;\n  'twitter:card'?: string;\n  'twitter:image'?: string;\n  'twitter:dnt'?: string;\n  'twitter:app:name:iphone'?: string;\n  'twitter:app:id:iphone'?: string;\n  'twitter:app:url:iphone'?: string;\n  'twitter:app:name:ipad'?: string;\n  'twitter:app:id:ipad'?: string;\n  'twitter:app:url:ipad'?: string;\n  'twitter:app:name:googleplay'?: string;\n  'twitter:app:id:googleplay'?: string;\n  'twitter:app:url:googleplay'?: string;\n  // Facebook metadata\n  'fb:app_id'?: string;\n  // App links\n  'al:ios:url'?: string;\n  'al:ios:app_name'?: string;\n  'al:ios:app_store_id'?: string;\n  // Allow for additional properties that might be present\n  [key: string]: string | number | boolean | null | undefined;\n}\n\nexport interface FirecrawlScrapeResponse {\n  success: boolean;\n  data?: {\n    markdown?: string;\n    html?: string;\n    rawHtml?: string;\n    screenshot?: string;\n    links?: string[];\n    metadata?: ScrapeMetadata;\n  };\n  error?: string;\n}\n\nexport interface FirecrawlScraperConfig {\n  apiKey?: string;\n  apiUrl?: string;\n  formats?: string[];\n  timeout?: number;\n  logger?: Logger;\n}\n\nexport type GetSourcesParams = {\n  query: string;\n  date?: DATE_RANGE;\n  country?: string;\n  numResults?: number;\n  safeSearch?: SearchToolConfig['safeSearch'];\n  images?: boolean;\n  videos?: boolean;\n  news?: boolean;\n  type?: 'search' | 'images' | 'videos' | 'news';\n};\n\n/** Serper API */\nexport interface VideoResult {\n  title?: string;\n  link?: string;\n  snippet?: string;\n  imageUrl?: string;\n  duration?: string;\n  source?: string;\n  channel?: string;\n  date?: string;\n  position?: number;\n}\n\nexport interface PlaceResult {\n  position?: number;\n  name?: string;\n  address?: string;\n  latitude?: number;\n  longitude?: number;\n  rating?: number;\n  ratingCount?: number;\n  category?: string;\n  identifier?: string;\n}\n\nexport interface NewsResult {\n  title?: string;\n  link?: string;\n  snippet?: string;\n  date?: string;\n  source?: string;\n  imageUrl?: string;\n  position?: number;\n}\n\nexport interface ShoppingResult {\n  title?: string;\n  source?: string;\n  link?: string;\n  price?: string;\n  delivery?: string;\n  imageUrl?: string;\n  rating?: number;\n  ratingCount?: number;\n  offers?: string;\n  productId?: string;\n  position?: number;\n}\n\nexport interface ScholarResult {\n  title?: string;\n  link?: string;\n  publicationInfo?: string;\n  snippet?: string;\n  year?: number;\n  citedBy?: number;\n}\n\nexport interface ImageResult {\n  title?: string;\n  imageUrl?: string;\n  imageWidth?: number;\n  imageHeight?: number;\n  thumbnailUrl?: string;\n  thumbnailWidth?: number;\n  thumbnailHeight?: number;\n  source?: string;\n  domain?: string;\n  link?: string;\n  googleUrl?: string;\n  position?: number;\n}\n\nexport interface SerperSearchPayload extends SerperSearchInput {\n  /**\n   * Search type/vertical\n   * Options: \"search\" (web), \"images\", \"news\", \"places\", \"videos\"\n   */\n  type?: 'search' | 'images' | 'news' | 'places' | 'videos';\n\n  /**\n   * Starting index for search results pagination (used instead of page)\n   */\n  start?: number;\n\n  /**\n   * Filtering for safe search\n   * Options: \"off\", \"moderate\", \"active\"\n   */\n  safe?: 'off' | 'moderate' | 'active';\n}\n\nexport type SerperSearchParameters = Pick<SerperSearchPayload, 'q' | 'type'> & {\n  engine: 'google';\n};\n\nexport interface OrganicResult {\n  position?: number;\n  title?: string;\n  link: string;\n  snippet?: string;\n  date?: string;\n  sitelinks?: Array<{\n    title: string;\n    link: string;\n  }>;\n}\n\nexport interface TopStoryResult {\n  title?: string;\n  link: string;\n  source?: string;\n  date?: string;\n  imageUrl?: string;\n}\nexport interface KnowledgeGraphResult {\n  title?: string;\n  type?: string;\n  imageUrl?: string;\n  description?: string;\n  descriptionSource?: string;\n  descriptionLink?: string;\n  attributes?: Record<string, string>;\n  website?: string;\n}\n\nexport interface AnswerBoxResult {\n  title?: string;\n  snippet?: string;\n  snippetHighlighted?: string[];\n  link?: string;\n  date?: string;\n}\n\nexport interface PeopleAlsoAskResult {\n  question?: string;\n  snippet?: string;\n  title?: string;\n  link?: string;\n}\n\nexport type RelatedSearches = Array<{ query: string }>;\n\nexport interface SerperSearchInput {\n  /**\n   * The search query string\n   */\n  q: string;\n\n  /**\n   * Country code for localized results\n   * Examples: \"us\", \"uk\", \"ca\", \"de\", etc.\n   */\n  gl?: string;\n\n  /**\n   * Interface language\n   * Examples: \"en\", \"fr\", \"de\", etc.\n   */\n  hl?: string;\n\n  /**\n   * Number of results to return (up to 100)\n   */\n  num?: number;\n  /**\n   * Specific location for contextual results\n   * Example: \"New York, NY\"\n   */\n  location?: string;\n\n  /**\n   * Search autocorrection setting\n   */\n  autocorrect?: boolean;\n  page?: number;\n  /**\n   * Date range for search results\n   * Options: \"h\" (past hour), \"d\" (past 24 hours), \"w\" (past week),\n   * \"m\" (past month), \"y\" (past year)\n   * `qdr:${DATE_RANGE}`\n   */\n  tbs?: string;\n}\n\nexport type SerperResultData = {\n  searchParameters: SerperSearchPayload;\n  organic?: OrganicResult[];\n  topStories?: TopStoryResult[];\n  images?: ImageResult[];\n  videos?: VideoResult[];\n  places?: PlaceResult[];\n  news?: NewsResult[];\n  shopping?: ShoppingResult[];\n  peopleAlsoAsk?: PeopleAlsoAskResult[];\n  relatedSearches?: RelatedSearches;\n  knowledgeGraph?: KnowledgeGraphResult;\n  answerBox?: AnswerBoxResult;\n  credits?: number;\n};\n\n/** SearXNG */\n\nexport interface SearxNGSearchPayload {\n  /**\n   * The search query string\n   * Supports syntax specific to different search engines\n   * Example: \"site:github.com SearXNG\"\n   */\n  q: string;\n\n  /**\n   * Comma-separated list of search categories\n   * Example: \"general,images,news\"\n   */\n  categories?: string;\n\n  /**\n   * Comma-separated list of search engines to use\n   * Example: \"google,bing,duckduckgo\"\n   */\n  engines?: string;\n\n  /**\n   * Code of the language for search results\n   * Example: \"en\", \"fr\", \"de\", \"es\"\n   */\n  language?: string;\n\n  /**\n   * Search page number\n   * Default: 1\n   */\n  pageno?: number;\n\n  /**\n   * Time range filter for search results\n   * Options: \"day\", \"month\", \"year\"\n   */\n  time_range?: 'day' | 'month' | 'year';\n\n  /**\n   * Output format of results\n   * Options: \"json\", \"csv\", \"rss\"\n   */\n  format?: 'json' | 'csv' | 'rss';\n\n  /**\n   * Open search results on new tab\n   * Options: `0` (off), `1` (on)\n   */\n  results_on_new_tab?: 0 | 1;\n\n  /**\n   * Proxy image results through SearxNG\n   * Options: true, false\n   */\n  image_proxy?: boolean;\n\n  /**\n   * Service for autocomplete suggestions\n   * Options: \"google\", \"dbpedia\", \"duckduckgo\", \"mwmbl\",\n   *          \"startpage\", \"wikipedia\", \"stract\", \"swisscows\", \"qwant\"\n   */\n  autocomplete?: string;\n\n  /**\n   * Safe search filtering level\n   * Options: \"0\" (off), \"1\" (moderate), \"2\" (strict)\n   */\n  safesearch?: 0 | 1 | 2;\n\n  /**\n   * Theme to use for results page\n   * Default: \"simple\" (other themes may be available per instance)\n   */\n  theme?: string;\n\n  /**\n   * List of enabled plugins\n   * Default: \"Hash_plugin,Self_Information,Tracker_URL_remover,Ahmia_blacklist\"\n   */\n  enabled_plugins?: string;\n\n  /**\n   * List of disabled plugins\n   */\n  disabled_plugins?: string;\n\n  /**\n   * List of enabled engines\n   */\n  enabled_engines?: string;\n\n  /**\n   * List of disabled engines\n   */\n  disabled_engines?: string;\n}\n\nexport interface SearXNGResult {\n  title?: string;\n  url?: string;\n  content?: string;\n  publishedDate?: string;\n  img_src?: string;\n}\n\nexport type ProcessSourcesFields = {\n  result: SearchResult;\n  numElements: number;\n  query: string;\n  news: boolean;\n  proMode: boolean;\n  onGetHighlights: SearchToolConfig['onGetHighlights'];\n};\n","import { z } from 'zod';\n\n/**\n * Granular Permission System Types for Agent Sharing\n *\n * This file contains TypeScript interfaces and Zod schemas for the enhanced\n * agent permission system that supports sharing with specific users/groups\n * and Entra ID integration.\n */\n\n// ===== ENUMS & CONSTANTS =====\n\n/**\n * Principal types for permission system\n */\nexport enum PrincipalType {\n  USER = 'user',\n  GROUP = 'group',\n  PUBLIC = 'public',\n  ROLE = 'role',\n}\n\n/**\n * Principal model types for MongoDB references\n */\nexport enum PrincipalModel {\n  USER = 'User',\n  GROUP = 'Group',\n  ROLE = 'Role',\n}\n\n/**\n * Source of the principal (local LibreChat or external Entra ID)\n */\nexport type TPrincipalSource = 'local' | 'entra';\n\n/**\n * Access levels for agents\n */\nexport type TAccessLevel = 'none' | 'viewer' | 'editor' | 'owner';\n\n/**\n * Resource types for permission system\n */\nexport enum ResourceType {\n  AGENT = 'agent',\n  PROMPTGROUP = 'promptGroup',\n}\n\n/**\n * Permission bit constants for bitwise operations\n */\nexport enum PermissionBits {\n  /** 001 - Can view and use agent */\n  VIEW = 1,\n  /**  010 - Can modify agent settings */\n  EDIT = 2,\n  /**  100 - Can delete agent */\n  DELETE = 4,\n  /**  1000 - Can share agent with others (future) */\n  SHARE = 8,\n}\n\n/**\n * Standard access role IDs\n */\nexport enum AccessRoleIds {\n  AGENT_VIEWER = 'agent_viewer',\n  AGENT_EDITOR = 'agent_editor',\n  AGENT_OWNER = 'agent_owner',\n  PROMPTGROUP_VIEWER = 'promptGroup_viewer',\n  PROMPTGROUP_EDITOR = 'promptGroup_editor',\n  PROMPTGROUP_OWNER = 'promptGroup_owner',\n}\n\n// ===== ZOD SCHEMAS =====\n\n/**\n * Principal schema - represents a user, group, role, or public access\n */\nexport const principalSchema = z.object({\n  type: z.nativeEnum(PrincipalType),\n  id: z.string().optional(), // undefined for 'public' type, role name for 'role' type\n  name: z.string().optional(),\n  email: z.string().optional(), // for user and group types\n  source: z.enum(['local', 'entra']).optional(),\n  avatar: z.string().optional(), // for user and group types\n  description: z.string().optional(), // for group and role types\n  idOnTheSource: z.string().optional(), // Entra ID for users/groups\n  accessRoleId: z.nativeEnum(AccessRoleIds).optional(), // Access role ID for permissions\n  memberCount: z.number().optional(), // for group type\n});\n\n/**\n * Access role schema - defines named permission sets\n */\nexport const accessRoleSchema = z.object({\n  accessRoleId: z.nativeEnum(AccessRoleIds),\n  name: z.string(),\n  description: z.string().optional(),\n  resourceType: z.nativeEnum(ResourceType).default(ResourceType.AGENT),\n  permBits: z.number(),\n});\n\n/**\n * Permission entry schema - represents a single ACL entry\n */\nexport const permissionEntrySchema = z.object({\n  id: z.string(),\n  principalType: z.nativeEnum(PrincipalType),\n  principalId: z.string().optional(), // undefined for 'public'\n  principalName: z.string().optional(),\n  role: accessRoleSchema,\n  grantedBy: z.string(),\n  grantedAt: z.string(), // ISO date string\n  inheritedFrom: z.string().optional(), // for project-level inheritance\n  source: z.enum(['local', 'entra']).optional(),\n});\n\n/**\n * Resource permissions response schema\n */\nexport const resourcePermissionsResponseSchema = z.object({\n  resourceType: z.nativeEnum(ResourceType),\n  resourceId: z.string(),\n  permissions: z.array(permissionEntrySchema),\n});\n\n/**\n * Update resource permissions request schema\n * This matches the user's requirement for the frontend DTO structure\n */\nexport const updateResourcePermissionsRequestSchema = z.object({\n  updated: principalSchema.array(),\n  removed: principalSchema.array(),\n  public: z.boolean(),\n  publicAccessRoleId: z.string().optional(),\n});\n\n/**\n * Update resource permissions response schema\n * Returns the updated permissions with accessRoleId included\n */\nexport const updateResourcePermissionsResponseSchema = z.object({\n  message: z.string(),\n  results: z.object({\n    principals: principalSchema.array(),\n    public: z.boolean(),\n    publicAccessRoleId: z.string().optional(),\n  }),\n});\n\n// ===== TYPESCRIPT TYPES =====\n\n/**\n * Principal - represents a user, group, or public access\n */\nexport type TPrincipal = z.infer<typeof principalSchema>;\n\n/**\n * Access role - defines named permission sets\n */\nexport type TAccessRole = z.infer<typeof accessRoleSchema>;\n\n/**\n * Permission entry - represents a single ACL entry\n */\nexport type TPermissionEntry = z.infer<typeof permissionEntrySchema>;\n\n/**\n * Resource permissions response\n */\nexport type TResourcePermissionsResponse = z.infer<typeof resourcePermissionsResponseSchema>;\n\n/**\n * Update resource permissions request\n * This matches the user's requirement for the frontend DTO structure\n */\nexport type TUpdateResourcePermissionsRequest = z.infer<\n  typeof updateResourcePermissionsRequestSchema\n>;\n\n/**\n * Update resource permissions response\n * Returns the updated permissions with accessRoleId included\n */\nexport type TUpdateResourcePermissionsResponse = z.infer<\n  typeof updateResourcePermissionsResponseSchema\n>;\n\n/**\n * Principal search request parameters\n */\nexport type TPrincipalSearchParams = {\n  q: string; // search query (required)\n  limit?: number; // max results (1-50, default 10)\n  type?: PrincipalType.USER | PrincipalType.GROUP | PrincipalType.ROLE; // filter by type (optional)\n};\n\n/**\n * Principal search result item\n */\nexport type TPrincipalSearchResult = {\n  id?: string | null; // null for Entra ID principals that don't exist locally yet\n  type: PrincipalType.USER | PrincipalType.GROUP | PrincipalType.ROLE;\n  name: string;\n  email?: string; // for users and groups\n  username?: string; // for users\n  avatar?: string; // for users and groups\n  provider?: string; // for users\n  source: 'local' | 'entra';\n  memberCount?: number; // for groups\n  description?: string; // for groups\n  idOnTheSource?: string; // Entra ID for users (maps to openidId) and groups (maps to idOnTheSource)\n};\n\n/**\n * Principal search response\n */\nexport type TPrincipalSearchResponse = {\n  query: string;\n  limit: number;\n  type?: PrincipalType.USER | PrincipalType.GROUP | PrincipalType.ROLE;\n  results: TPrincipalSearchResult[];\n  count: number;\n  sources: {\n    local: number;\n    entra: number;\n  };\n};\n\n/**\n * Available roles response\n */\nexport type TAvailableRolesResponse = {\n  resourceType: ResourceType;\n  roles: TAccessRole[];\n};\n\n/**\n * Get resource permissions response schema\n * This matches the enhanced aggregation-based endpoint response format\n */\nexport const getResourcePermissionsResponseSchema = z.object({\n  resourceType: z.nativeEnum(ResourceType),\n  resourceId: z.nativeEnum(AccessRoleIds),\n  principals: z.array(principalSchema),\n  public: z.boolean(),\n  publicAccessRoleId: z.nativeEnum(AccessRoleIds).optional(),\n});\n\n/**\n * Get resource permissions response type\n * This matches the enhanced aggregation-based endpoint response format\n */\nexport type TGetResourcePermissionsResponse = z.infer<typeof getResourcePermissionsResponseSchema>;\n\n/**\n * Effective permissions response schema\n * Returns just the permission bitmask for a user on a resource\n */\nexport const effectivePermissionsResponseSchema = z.object({\n  permissionBits: z.number(),\n});\n\n/**\n * Effective permissions response type\n * Returns just the permission bitmask for a user on a resource\n */\nexport type TEffectivePermissionsResponse = z.infer<typeof effectivePermissionsResponseSchema>;\n\n// ===== UTILITY TYPES =====\n\n/**\n * Permission check result\n */\nexport interface TPermissionCheck {\n  canView: boolean;\n  canEdit: boolean;\n  canDelete: boolean;\n  canShare: boolean;\n  accessLevel: TAccessLevel;\n}\n\n// ===== HELPER FUNCTIONS =====\n\n/**\n * Convert permission bits to access level\n */\nexport function permBitsToAccessLevel(permBits: number): TAccessLevel {\n  if ((permBits & PermissionBits.DELETE) > 0) return 'owner';\n  if ((permBits & PermissionBits.EDIT) > 0) return 'editor';\n  if ((permBits & PermissionBits.VIEW) > 0) return 'viewer';\n  return 'none';\n}\n\n/**\n * Convert access role ID to permission bits\n */\nexport function accessRoleToPermBits(accessRoleId: string): number {\n  switch (accessRoleId) {\n    case AccessRoleIds.AGENT_VIEWER:\n      return PermissionBits.VIEW;\n    case AccessRoleIds.AGENT_EDITOR:\n      return PermissionBits.VIEW | PermissionBits.EDIT;\n    case AccessRoleIds.AGENT_OWNER:\n      return PermissionBits.VIEW | PermissionBits.EDIT | PermissionBits.DELETE;\n    default:\n      return PermissionBits.VIEW;\n  }\n}\n\n/**\n * Check if permission bitmask contains other bitmask\n * @param permissions - The permission bitmask to check\n * @param requiredPermission - The required permission bit(s)\n * @returns {boolean} Whether permissions contains requiredPermission\n */\nexport function hasPermissions(permissions: number, requiredPermission: number): boolean {\n  return (permissions & requiredPermission) === requiredPermission;\n}\n","export enum QueryKeys {\n  messages = 'messages',\n  sharedMessages = 'sharedMessages',\n  sharedLinks = 'sharedLinks',\n  allConversations = 'allConversations',\n  archivedConversations = 'archivedConversations',\n  searchConversations = 'searchConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  name = 'name', // user key name\n  models = 'models',\n  balance = 'balance',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount',\n  availablePlugins = 'availablePlugins',\n  startupConfig = 'startupConfig',\n  assistants = 'assistants',\n  assistant = 'assistant',\n  agents = 'agents',\n  agent = 'agent',\n  files = 'files',\n  fileConfig = 'fileConfig',\n  tools = 'tools',\n  toolAuth = 'toolAuth',\n  toolCalls = 'toolCalls',\n  mcpConnectionStatus = 'mcpConnectionStatus',\n  mcpAuthValues = 'mcpAuthValues',\n  agentTools = 'agentTools',\n  actions = 'actions',\n  assistantDocs = 'assistantDocs',\n  agentDocs = 'agentDocs',\n  fileDownload = 'fileDownload',\n  voices = 'voices',\n  customConfigSpeech = 'customConfigSpeech',\n  prompts = 'prompts',\n  prompt = 'prompt',\n  promptGroups = 'promptGroups',\n  allPromptGroups = 'allPromptGroups',\n  promptGroup = 'promptGroup',\n  categories = 'categories',\n  randomPrompts = 'randomPrompts',\n  agentCategories = 'agentCategories',\n  marketplaceAgents = 'marketplaceAgents',\n  roles = 'roles',\n  conversationTags = 'conversationTags',\n  health = 'health',\n  userTerms = 'userTerms',\n  banner = 'banner',\n  /* Memories */\n  memories = 'memories',\n  principalSearch = 'principalSearch',\n  accessRoles = 'accessRoles',\n  resourcePermissions = 'resourcePermissions',\n  effectivePermissions = 'effectivePermissions',\n  graphToken = 'graphToken',\n}\n\n// Dynamic query keys that require parameters\nexport const DynamicQueryKeys = {\n  agentFiles: (agentId: string) => ['agentFiles', agentId] as const,\n} as const;\n\nexport enum MutationKeys {\n  fileUpload = 'fileUpload',\n  fileDelete = 'fileDelete',\n  updatePreset = 'updatePreset',\n  deletePreset = 'deletePreset',\n  loginUser = 'loginUser',\n  logoutUser = 'logoutUser',\n  refreshToken = 'refreshToken',\n  avatarUpload = 'avatarUpload',\n  speechToText = 'speechToText',\n  textToSpeech = 'textToSpeech',\n  assistantAvatarUpload = 'assistantAvatarUpload',\n  agentAvatarUpload = 'agentAvatarUpload',\n  updateAction = 'updateAction',\n  updateAgentAction = 'updateAgentAction',\n  deleteAction = 'deleteAction',\n  deleteAgentAction = 'deleteAgentAction',\n  revertAgentVersion = 'revertAgentVersion',\n  deleteUser = 'deleteUser',\n  updateRole = 'updateRole',\n  enableTwoFactor = 'enableTwoFactor',\n  verifyTwoFactor = 'verifyTwoFactor',\n  updateMemoryPreferences = 'updateMemoryPreferences',\n}\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport * as endpoints from './api-endpoints';\nimport { setTokenHeader } from './headers-helpers';\nimport type * as t from './types';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _getResponse<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  return await axios.get(url, { ...options });\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n  return response.data;\n}\n\nasync function _postTTS(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'arraybuffer',\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nlet isRefreshing = false;\nlet failedQueue: { resolve: (value?: any) => void; reject: (reason?: any) => void }[] = [];\n\nconst refreshToken = (retry?: boolean): Promise<t.TRefreshTokenResponse | undefined> =>\n  _post(endpoints.refreshToken(retry));\n\nconst dispatchTokenUpdatedEvent = (token: string) => {\n  setTokenHeader(token);\n  window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: token }));\n};\n\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\nif (typeof window !== 'undefined') {\n  axios.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n      const originalRequest = error.config;\n      if (!error.response) {\n        return Promise.reject(error);\n      }\n\n      if (originalRequest.url?.includes('/api/auth/2fa') === true) {\n        return Promise.reject(error);\n      }\n      if (originalRequest.url?.includes('/api/auth/logout') === true) {\n        return Promise.reject(error);\n      }\n      if (originalRequest.url?.includes('/api/auth/refresh') === true) {\n        // Refresh token itself failed - redirect to login\n        console.log('Refresh token request failed, redirecting to login...');\n        window.location.href = '/login';\n        return Promise.reject(error);\n      }\n\n      if (error.response.status === 401 && !originalRequest._retry) {\n        console.warn('401 error, refreshing token');\n        originalRequest._retry = true;\n\n        if (isRefreshing) {\n          try {\n            const token = await new Promise((resolve, reject) => {\n              failedQueue.push({ resolve, reject });\n            });\n            originalRequest.headers['Authorization'] = 'Bearer ' + token;\n            return await axios(originalRequest);\n          } catch (err) {\n            return Promise.reject(err);\n          }\n        }\n\n        isRefreshing = true;\n\n        try {\n          const response = await refreshToken();\n\n          const token = response?.token ?? '';\n\n          if (token) {\n            originalRequest.headers['Authorization'] = 'Bearer ' + token;\n            dispatchTokenUpdatedEvent(token);\n            processQueue(null, token);\n            return await axios(originalRequest);\n          } else if (window.location.href.includes('share/')) {\n            console.log(\n              `Refresh token failed from shared link, attempting request to ${originalRequest.url}`,\n            );\n          } else {\n            window.location.href = '/login';\n          }\n        } catch (err) {\n          processQueue(err as AxiosError, null);\n          return Promise.reject(err);\n        } finally {\n          isRefreshing = false;\n        }\n      }\n\n      return Promise.reject(error);\n    },\n  );\n}\n\nexport default {\n  get: _get,\n  getResponse: _getResponse,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  postTTS: _postTTS,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch,\n  refreshToken,\n  dispatchTokenUpdatedEvent,\n};\n","import type { AxiosResponse } from 'axios';\nimport type * as t from './types';\nimport * as endpoints from './api-endpoints';\nimport * as a from './types/assistants';\nimport * as ag from './types/agents';\nimport * as m from './types/mutations';\nimport * as q from './types/queries';\nimport * as f from './types/files';\nimport * as config from './config';\nimport request from './request';\nimport * as s from './schemas';\nimport * as r from './roles';\nimport * as permissions from './accessPermissions';\n\nexport function revokeUserKey(name: string): Promise<unknown> {\n  return request.delete(endpoints.revokeUserKey(name));\n}\n\nexport function revokeAllUserKeys(): Promise<unknown> {\n  return request.delete(endpoints.revokeAllUserKeys());\n}\n\nexport function deleteUser(): Promise<s.TPreset> {\n  return request.delete(endpoints.deleteUser());\n}\n\nexport function getSharedMessages(shareId: string): Promise<t.TSharedMessagesResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport const listSharedLinks = async (\n  params: q.SharedLinksListParams,\n): Promise<q.SharedLinksResponse> => {\n  const { pageSize, isPublic, sortBy, sortDirection, search, cursor } = params;\n\n  return request.get(\n    endpoints.getSharedLinks(pageSize, isPublic, sortBy, sortDirection, search, cursor),\n  );\n};\n\nexport function getSharedLink(conversationId: string): Promise<t.TSharedLinkGetResponse> {\n  return request.get(endpoints.getSharedLink(conversationId));\n}\n\nexport function createSharedLink(conversationId: string): Promise<t.TSharedLinkResponse> {\n  return request.post(endpoints.createSharedLink(conversationId));\n}\n\nexport function updateSharedLink(shareId: string): Promise<t.TSharedLinkResponse> {\n  return request.patch(endpoints.updateSharedLink(shareId));\n}\n\nexport function deleteSharedLink(shareId: string): Promise<m.TDeleteSharedLinkResponse> {\n  return request.delete(endpoints.shareMessages(shareId));\n}\n\nexport function updateUserKey(payload: t.TUpdateUserKeyRequest) {\n  const { value } = payload;\n  if (!value) {\n    throw new Error('value is required');\n  }\n\n  return request.put(endpoints.keys(), payload);\n}\n\nexport function getPresets(): Promise<s.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport function getUserBalance(): Promise<t.TBalanceResponse> {\n  return request.get(endpoints.balance());\n}\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser): Promise<t.TLoginResponse> => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = (): Promise<m.TLogoutResponse> => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const userKeyQuery = (name: string): Promise<t.TCheckUserKeyResponse> =>\n  request.get(endpoints.userKeyQuery(name));\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (\n  payload: t.TRequestPasswordReset,\n): Promise<t.TRequestPasswordResetResponse> => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n\nexport const verifyEmail = (payload: t.TVerifyEmail): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.verifyEmail(), payload);\n};\n\nexport const resendVerificationEmail = (\n  payload: t.TResendVerificationEmail,\n): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.resendVerificationEmail(), payload);\n};\n\nexport const getAvailablePlugins = (): Promise<s.TPlugin[]> => {\n  return request.get(endpoints.plugins());\n};\n\nexport const updateUserPlugins = (payload: t.TUpdateUserPlugins) => {\n  return request.post(endpoints.userPlugins(), payload);\n};\n\nexport const reinitializeMCPServer = (serverName: string) => {\n  return request.post(endpoints.mcpReinitialize(serverName));\n};\n\nexport const getMCPConnectionStatus = (): Promise<q.MCPConnectionStatusResponse> => {\n  return request.get(endpoints.mcpConnectionStatus());\n};\n\nexport const getMCPServerConnectionStatus = (\n  serverName: string,\n): Promise<q.MCPServerConnectionStatusResponse> => {\n  return request.get(endpoints.mcpServerConnectionStatus(serverName));\n};\n\nexport const getMCPAuthValues = (serverName: string): Promise<q.MCPAuthValuesResponse> => {\n  return request.get(endpoints.mcpAuthValues(serverName));\n};\n\nexport function cancelMCPOAuth(serverName: string): Promise<m.CancelMCPOAuthResponse> {\n  return request.post(endpoints.cancelMCPOAuth(serverName), {});\n}\n\n/* Config */\n\nexport const getStartupConfig = (): Promise<\n  config.TStartupConfig & {\n    mcpCustomUserVars?: Record<string, { title: string; description: string }>;\n  }\n> => {\n  return request.get(endpoints.config());\n};\n\nexport const getAIEndpoints = (): Promise<t.TEndpointsConfig> => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const getModels = async (): Promise<t.TModelsConfig> => {\n  return request.get(endpoints.models());\n};\n\n/* Assistants */\n\nexport const createAssistant = ({\n  version,\n  ...data\n}: a.AssistantCreateParams): Promise<a.Assistant> => {\n  return request.post(endpoints.assistants({ version }), data);\n};\n\nexport const getAssistantById = ({\n  endpoint,\n  assistant_id,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint;\n  assistant_id: string;\n  version: number | string | number;\n}): Promise<a.Assistant> => {\n  return request.get(\n    endpoints.assistants({\n      path: assistant_id,\n      endpoint,\n      version,\n    }),\n  );\n};\n\nexport const updateAssistant = ({\n  assistant_id,\n  data,\n  version,\n}: {\n  assistant_id: string;\n  data: a.AssistantUpdateParams;\n  version: number | string;\n}): Promise<a.Assistant> => {\n  return request.patch(\n    endpoints.assistants({\n      path: assistant_id,\n      version,\n    }),\n    data,\n  );\n};\n\nexport const deleteAssistant = ({\n  assistant_id,\n  model,\n  endpoint,\n  version,\n}: m.DeleteAssistantBody & { version: number | string }): Promise<void> => {\n  return request.delete(\n    endpoints.assistants({\n      path: assistant_id,\n      options: { model, endpoint },\n      version,\n    }),\n  );\n};\n\nexport const listAssistants = (\n  params: a.AssistantListParams,\n  version: number | string,\n): Promise<a.AssistantListResponse> => {\n  return request.get(\n    endpoints.assistants({\n      version,\n      options: params,\n    }),\n  );\n};\n\nexport function getAssistantDocs({\n  endpoint,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint | string;\n  version: number | string;\n}): Promise<a.AssistantDocument[]> {\n  if (!s.isAssistantsEndpoint(endpoint)) {\n    return Promise.resolve([]);\n  }\n  return request.get(\n    endpoints.assistants({\n      path: 'documents',\n      version,\n      options: { endpoint },\n      endpoint: endpoint as s.AssistantsEndpoint,\n    }),\n  );\n}\n\n/* Tools */\n\nexport const getAvailableTools = (\n  _endpoint: s.AssistantsEndpoint | s.EModelEndpoint.agents,\n  version?: number | string,\n): Promise<s.TPlugin[]> => {\n  let path = '';\n  if (s.isAssistantsEndpoint(_endpoint)) {\n    const endpoint = _endpoint as s.AssistantsEndpoint;\n    path = endpoints.assistants({\n      path: 'tools',\n      endpoint: endpoint,\n      version: version ?? config.defaultAssistantsVersion[endpoint],\n    });\n  } else {\n    path = endpoints.agents({\n      path: 'tools',\n    });\n  }\n\n  return request.get(path);\n};\n\nexport const getVerifyAgentToolAuth = (\n  params: q.VerifyToolAuthParams,\n): Promise<q.VerifyToolAuthResponse> => {\n  return request.get(\n    endpoints.agents({\n      path: `tools/${params.toolId}/auth`,\n    }),\n  );\n};\n\nexport const callTool = <T extends m.ToolId>({\n  toolId,\n  toolParams,\n}: {\n  toolId: T;\n  toolParams: m.ToolParams<T>;\n}): Promise<m.ToolCallResponse> => {\n  return request.post(\n    endpoints.agents({\n      path: `tools/${toolId}/call`,\n    }),\n    toolParams,\n  );\n};\n\nexport const getToolCalls = (params: q.GetToolCallParams): Promise<q.ToolCallResults> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools/calls',\n      options: params,\n    }),\n  );\n};\n\n/* Files */\n\nexport const getFiles = (): Promise<f.TFile[]> => {\n  return request.get(endpoints.files());\n};\n\nexport const getAgentFiles = (agentId: string): Promise<f.TFile[]> => {\n  return request.get(endpoints.agentFiles(agentId));\n};\n\nexport const getFileConfig = (): Promise<f.FileConfig> => {\n  return request.get(`${endpoints.files()}/config`);\n};\n\nexport const uploadImage = (\n  data: FormData,\n  signal?: AbortSignal | null,\n): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.images(), data, requestConfig);\n};\n\nexport const uploadFile = (data: FormData, signal?: AbortSignal | null): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.files(), data, requestConfig);\n};\n\n/* actions */\n\nexport const updateAction = (data: m.UpdateActionVariables): Promise<m.UpdateActionResponse> => {\n  const { assistant_id, version, ...body } = data;\n  return request.post(\n    endpoints.assistants({\n      path: `actions/${assistant_id}`,\n      version,\n    }),\n    body,\n  );\n};\n\nexport function getActions(): Promise<ag.Action[]> {\n  return request.get(\n    endpoints.agents({\n      path: 'actions',\n    }),\n  );\n}\n\nexport const deleteAction = async ({\n  assistant_id,\n  action_id,\n  model,\n  version,\n  endpoint,\n}: m.DeleteActionVariables & { version: number | string }): Promise<void> =>\n  request.delete(\n    endpoints.assistants({\n      path: `actions/${assistant_id}/${action_id}/${model}`,\n      version,\n      endpoint,\n    }),\n  );\n\n/**\n * Agents\n */\n\nexport const createAgent = ({ ...data }: a.AgentCreateParams): Promise<a.Agent> => {\n  return request.post(endpoints.agents({}), data);\n};\n\nexport const getAgentById = ({ agent_id }: { agent_id: string }): Promise<a.Agent> => {\n  return request.get(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const getExpandedAgentById = ({ agent_id }: { agent_id: string }): Promise<a.Agent> => {\n  return request.get(\n    endpoints.agents({\n      path: `${agent_id}/expanded`,\n    }),\n  );\n};\n\nexport const updateAgent = ({\n  agent_id,\n  data,\n}: {\n  agent_id: string;\n  data: a.AgentUpdateParams;\n}): Promise<a.Agent> => {\n  return request.patch(\n    endpoints.agents({\n      path: agent_id,\n    }),\n    data,\n  );\n};\n\nexport const duplicateAgent = ({\n  agent_id,\n}: m.DuplicateAgentBody): Promise<{ agent: a.Agent; actions: ag.Action[] }> => {\n  return request.post(\n    endpoints.agents({\n      path: `${agent_id}/duplicate`,\n    }),\n  );\n};\n\nexport const deleteAgent = ({ agent_id }: m.DeleteAgentBody): Promise<void> => {\n  return request.delete(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const listAgents = (params: a.AgentListParams): Promise<a.AgentListResponse> => {\n  return request.get(\n    endpoints.agents({\n      options: params,\n    }),\n  );\n};\n\nexport const revertAgentVersion = ({\n  agent_id,\n  version_index,\n}: {\n  agent_id: string;\n  version_index: number;\n}): Promise<a.Agent> => request.post(endpoints.revertAgentVersion(agent_id), { version_index });\n\n/* Marketplace */\n\n/**\n * Get agent categories with counts for marketplace tabs\n */\nexport const getAgentCategories = (): Promise<t.TMarketplaceCategory[]> => {\n  return request.get(endpoints.agents({ path: 'categories' }));\n};\n\n/**\n * Unified marketplace agents endpoint with query string controls\n */\nexport const getMarketplaceAgents = (params: {\n  requiredPermission: number;\n  category?: string;\n  search?: string;\n  limit?: number;\n  cursor?: string;\n  promoted?: 0 | 1;\n}): Promise<a.AgentListResponse> => {\n  return request.get(\n    endpoints.agents({\n      // path: 'marketplace',\n      options: params,\n    }),\n  );\n};\n\n/* Tools */\n\nexport const getAvailableAgentTools = (): Promise<s.TPlugin[]> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools',\n    }),\n  );\n};\n\n/* Actions */\n\nexport const updateAgentAction = (\n  data: m.UpdateAgentActionVariables,\n): Promise<m.UpdateAgentActionResponse> => {\n  const { agent_id, ...body } = data;\n  return request.post(\n    endpoints.agents({\n      path: `actions/${agent_id}`,\n    }),\n    body,\n  );\n};\n\nexport const deleteAgentAction = async ({\n  agent_id,\n  action_id,\n}: m.DeleteAgentActionVariables): Promise<void> =>\n  request.delete(\n    endpoints.agents({\n      path: `actions/${agent_id}/${action_id}`,\n    }),\n  );\n\n/**\n * Imports a conversations file.\n *\n * @param data - The FormData containing the file to import.\n * @returns A Promise that resolves to the import start response.\n */\nexport const importConversationsFile = (data: FormData): Promise<t.TImportResponse> => {\n  return request.postMultiPart(endpoints.importConversation(), data);\n};\n\nexport const uploadAvatar = (data: FormData): Promise<f.AvatarUploadResponse> => {\n  return request.postMultiPart(endpoints.avatar(), data);\n};\n\nexport const uploadAssistantAvatar = (data: m.AssistantAvatarVariables): Promise<a.Assistant> => {\n  return request.postMultiPart(\n    endpoints.assistants({\n      isAvatar: true,\n      path: `${data.assistant_id}/avatar`,\n      options: { model: data.model, endpoint: data.endpoint },\n      version: data.version,\n    }),\n    data.formData,\n  );\n};\n\nexport const uploadAgentAvatar = (data: m.AgentAvatarVariables): Promise<a.Agent> => {\n  return request.postMultiPart(\n    `${endpoints.images()}/agents/${data.agent_id}/avatar`,\n    data.formData,\n  );\n};\n\nexport const getFileDownload = async (userId: string, file_id: string): Promise<AxiosResponse> => {\n  return request.getResponse(`${endpoints.files()}/download/${userId}/${file_id}`, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const getCodeOutputDownload = async (url: string): Promise<AxiosResponse> => {\n  return request.getResponse(url, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const deleteFiles = async (payload: {\n  files: f.BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: a.EToolResources;\n}): Promise<f.DeleteFilesResponse> =>\n  request.deleteWithOptions(endpoints.files(), {\n    data: payload,\n  });\n\n/* Speech */\n\nexport const speechToText = (data: FormData): Promise<f.SpeechToTextResponse> => {\n  return request.postMultiPart(endpoints.speechToText(), data);\n};\n\nexport const textToSpeech = (data: FormData): Promise<ArrayBuffer> => {\n  return request.postTTS(endpoints.textToSpeechManual(), data);\n};\n\nexport const getVoices = (): Promise<f.VoiceResponse> => {\n  return request.get(endpoints.textToSpeechVoices());\n};\n\nexport const getCustomConfigSpeech = (): Promise<t.TCustomConfigSpeechResponse> => {\n  return request.get(endpoints.getCustomConfigSpeech());\n};\n\n/* conversations */\n\nexport function duplicateConversation(\n  payload: t.TDuplicateConvoRequest,\n): Promise<t.TDuplicateConvoResponse> {\n  return request.post(endpoints.duplicateConversation(), payload);\n}\n\nexport function forkConversation(payload: t.TForkConvoRequest): Promise<t.TForkConvoResponse> {\n  return request.post(endpoints.forkConversation(), payload);\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  return request.deleteWithOptions(endpoints.deleteConversation(), { data: { arg: payload } });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.delete(endpoints.deleteAllConversation());\n}\n\nexport const listConversations = (\n  params?: q.ConversationListParams,\n): Promise<q.ConversationListResponse> => {\n  return request.get(endpoints.conversations(params ?? {}));\n};\n\nexport function getConversations(cursor: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations({ cursor }));\n}\n\nexport function getConversationById(id: string): Promise<s.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest,\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function archiveConversation(\n  payload: t.TArchiveConversationRequest,\n): Promise<t.TArchiveConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse> {\n  return request.post(endpoints.genTitle(), payload);\n}\n\nexport const listMessages = (params?: q.MessagesListParams): Promise<q.MessagesListResponse> => {\n  return request.get(endpoints.messages(params ?? {}));\n};\n\nexport function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown> {\n  const { conversationId, messageId, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages({ conversationId, messageId }), { text });\n}\n\nexport function updateMessageContent(payload: t.TUpdateMessageContent): Promise<unknown> {\n  const { conversationId, messageId, index, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages({ conversationId, messageId }), { text, index });\n}\n\nexport const editArtifact = async ({\n  messageId,\n  ...params\n}: m.TEditArtifactRequest): Promise<m.TEditArtifactResponse> => {\n  return request.post(endpoints.messagesArtifacts(messageId), params);\n};\n\nexport function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]> {\n  if (\n    conversationId === config.Constants.NEW_CONVO ||\n    conversationId === config.Constants.PENDING_CONVO\n  ) {\n    return Promise.resolve([]);\n  }\n  return request.get(endpoints.messages({ conversationId }));\n}\n\nexport function getPrompt(id: string): Promise<{ prompt: t.TPrompt }> {\n  return request.get(endpoints.getPrompt(id));\n}\n\nexport function getPrompts(filter: t.TPromptsWithFilterRequest): Promise<t.TPrompt[]> {\n  return request.get(endpoints.getPromptsWithFilters(filter));\n}\n\nexport function getAllPromptGroups(): Promise<q.AllPromptGroupsResponse> {\n  return request.get(endpoints.getAllPromptGroups());\n}\n\nexport function getPromptGroups(\n  filter: t.TPromptGroupsWithFilterRequest,\n): Promise<t.PromptGroupListResponse> {\n  return request.get(endpoints.getPromptGroupsWithFilters(filter));\n}\n\nexport function getPromptGroup(id: string): Promise<t.TPromptGroup> {\n  return request.get(endpoints.getPromptGroup(id));\n}\n\nexport function createPrompt(payload: t.TCreatePrompt): Promise<t.TCreatePromptResponse> {\n  return request.post(endpoints.postPrompt(), payload);\n}\n\nexport function addPromptToGroup(\n  groupId: string,\n  payload: t.TCreatePrompt,\n): Promise<t.TCreatePromptResponse> {\n  return request.post(endpoints.addPromptToGroup(groupId), payload);\n}\n\nexport function updatePromptGroup(\n  variables: t.TUpdatePromptGroupVariables,\n): Promise<t.TUpdatePromptGroupResponse> {\n  return request.patch(endpoints.updatePromptGroup(variables.id), variables.payload);\n}\n\nexport function deletePrompt(payload: t.TDeletePromptVariables): Promise<t.TDeletePromptResponse> {\n  return request.delete(endpoints.deletePrompt(payload));\n}\n\nexport function makePromptProduction(id: string): Promise<t.TMakePromptProductionResponse> {\n  return request.patch(endpoints.updatePromptTag(id));\n}\n\nexport function updatePromptLabels(\n  variables: t.TUpdatePromptLabelsRequest,\n): Promise<t.TUpdatePromptLabelsResponse> {\n  return request.patch(endpoints.updatePromptLabels(variables.id), variables.payload);\n}\n\nexport function deletePromptGroup(id: string): Promise<t.TDeletePromptGroupResponse> {\n  return request.delete(endpoints.deletePromptGroup(id));\n}\n\nexport function getCategories(): Promise<t.TGetCategoriesResponse> {\n  return request.get(endpoints.getCategories());\n}\n\nexport function getRandomPrompts(\n  variables: t.TGetRandomPromptsRequest,\n): Promise<t.TGetRandomPromptsResponse> {\n  return request.get(endpoints.getRandomPrompts(variables.limit, variables.skip));\n}\n\n/* Roles */\nexport function getRole(roleName: string): Promise<r.TRole> {\n  return request.get(endpoints.getRole(roleName));\n}\n\nexport function updatePromptPermissions(\n  variables: m.UpdatePromptPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updatePromptPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateAgentPermissions(\n  variables: m.UpdateAgentPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateAgentPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateMemoryPermissions(\n  variables: m.UpdateMemoryPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateMemoryPermissions(variables.roleName), variables.updates);\n}\n\nexport function updatePeoplePickerPermissions(\n  variables: m.UpdatePeoplePickerPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(\n    endpoints.updatePeoplePickerPermissions(variables.roleName),\n    variables.updates,\n  );\n}\n\nexport function updateMarketplacePermissions(\n  variables: m.UpdateMarketplacePermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateMarketplacePermissions(variables.roleName), variables.updates);\n}\n\n/* Tags */\nexport function getConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.get(endpoints.conversationTags());\n}\n\nexport function createConversationTag(\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.post(endpoints.conversationTags(), payload);\n}\n\nexport function updateConversationTag(\n  tag: string,\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.put(endpoints.conversationTags(tag), payload);\n}\nexport function deleteConversationTag(tag: string): Promise<t.TConversationTagResponse> {\n  return request.delete(endpoints.conversationTags(tag));\n}\n\nexport function addTagToConversation(\n  conversationId: string,\n  payload: t.TTagConversationRequest,\n): Promise<t.TTagConversationResponse> {\n  return request.put(endpoints.addTagToConversation(conversationId), payload);\n}\nexport function rebuildConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.post(endpoints.conversationTags('rebuild'));\n}\n\nexport function healthCheck(): Promise<string> {\n  return request.get(endpoints.health());\n}\n\nexport function getUserTerms(): Promise<t.TUserTermsResponse> {\n  return request.get(endpoints.userTerms());\n}\n\nexport function acceptTerms(): Promise<t.TAcceptTermsResponse> {\n  return request.post(endpoints.acceptUserTerms());\n}\n\nexport function getBanner(): Promise<t.TBannerResponse> {\n  return request.get(endpoints.banner());\n}\n\nexport function updateFeedback(\n  conversationId: string,\n  messageId: string,\n  payload: t.TUpdateFeedbackRequest,\n): Promise<t.TUpdateFeedbackResponse> {\n  return request.put(endpoints.feedback(conversationId, messageId), payload);\n}\n\n// 2FA\nexport function enableTwoFactor(): Promise<t.TEnable2FAResponse> {\n  return request.get(endpoints.enableTwoFactor());\n}\n\nexport function verifyTwoFactor(payload: t.TVerify2FARequest): Promise<t.TVerify2FAResponse> {\n  return request.post(endpoints.verifyTwoFactor(), payload);\n}\n\nexport function confirmTwoFactor(payload: t.TVerify2FARequest): Promise<t.TVerify2FAResponse> {\n  return request.post(endpoints.confirmTwoFactor(), payload);\n}\n\nexport function disableTwoFactor(payload?: t.TDisable2FARequest): Promise<t.TDisable2FAResponse> {\n  return request.post(endpoints.disableTwoFactor(), payload);\n}\n\nexport function regenerateBackupCodes(): Promise<t.TRegenerateBackupCodesResponse> {\n  return request.post(endpoints.regenerateBackupCodes());\n}\n\nexport function verifyTwoFactorTemp(\n  payload: t.TVerify2FATempRequest,\n): Promise<t.TVerify2FATempResponse> {\n  return request.post(endpoints.verifyTwoFactorTemp(), payload);\n}\n\n/* Memories */\nexport const getMemories = (): Promise<q.MemoriesResponse> => {\n  return request.get(endpoints.memories());\n};\n\nexport const deleteMemory = (key: string): Promise<void> => {\n  return request.delete(endpoints.memory(key));\n};\n\nexport const updateMemory = (\n  key: string,\n  value: string,\n  originalKey?: string,\n): Promise<q.TUserMemory> => {\n  return request.patch(endpoints.memory(originalKey || key), { key, value });\n};\n\nexport const updateMemoryPreferences = (preferences: {\n  memories: boolean;\n}): Promise<{ updated: boolean; preferences: { memories: boolean } }> => {\n  return request.patch(endpoints.memoryPreferences(), preferences);\n};\n\nexport const createMemory = (data: {\n  key: string;\n  value: string;\n}): Promise<{ created: boolean; memory: q.TUserMemory }> => {\n  return request.post(endpoints.memories(), data);\n};\n\nexport function searchPrincipals(\n  params: q.PrincipalSearchParams,\n): Promise<q.PrincipalSearchResponse> {\n  return request.get(endpoints.searchPrincipals(params));\n}\n\nexport function getAccessRoles(\n  resourceType: permissions.ResourceType,\n): Promise<q.AccessRolesResponse> {\n  return request.get(endpoints.getAccessRoles(resourceType));\n}\n\nexport function getResourcePermissions(\n  resourceType: permissions.ResourceType,\n  resourceId: string,\n): Promise<permissions.TGetResourcePermissionsResponse> {\n  return request.get(endpoints.getResourcePermissions(resourceType, resourceId));\n}\n\nexport function updateResourcePermissions(\n  resourceType: permissions.ResourceType,\n  resourceId: string,\n  data: permissions.TUpdateResourcePermissionsRequest,\n): Promise<permissions.TUpdateResourcePermissionsResponse> {\n  return request.put(endpoints.updateResourcePermissions(resourceType, resourceId), data);\n}\n\nexport function getEffectivePermissions(\n  resourceType: permissions.ResourceType,\n  resourceId: string,\n): Promise<permissions.TEffectivePermissionsResponse> {\n  return request.get(endpoints.getEffectivePermissions(resourceType, resourceId));\n}\n\n// SharePoint Graph API Token\nexport function getGraphApiToken(params: q.GraphTokenParams): Promise<q.GraphTokenResponse> {\n  return request.get(endpoints.graphToken(params.scopes));\n}\n\nexport function getDomainServerBaseUrl(): string {\n  return `${endpoints.apiBaseUrl()}/api`;\n}\n","import { z } from 'zod';\nimport _axios from 'axios';\nimport { URL } from 'url';\nimport crypto from 'crypto';\nimport { load } from 'js-yaml';\nimport type { ActionMetadata, ActionMetadataRuntime } from './types/agents';\nimport type { FunctionTool, Schema, Reference } from './types/assistants';\nimport { AuthTypeEnum, AuthorizationTypeEnum } from './types/agents';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { Tools } from './types/assistants';\n\nexport type ParametersSchema = {\n  type: string;\n  properties: Record<string, Reference | Schema>;\n  required: string[];\n  additionalProperties?: boolean;\n};\n\nexport type OpenAPISchema = OpenAPIV3.SchemaObject &\n  ParametersSchema & {\n    items?: OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject;\n  };\n\nexport type ApiKeyCredentials = {\n  api_key: string;\n  custom_auth_header?: string;\n  authorization_type?: AuthorizationTypeEnum;\n};\n\nexport type OAuthCredentials = {\n  tokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  scope: string;\n};\n\nexport type Credentials = ApiKeyCredentials | OAuthCredentials;\n\ntype MediaTypeObject =\n  | undefined\n  | {\n      [media: string]: OpenAPIV3.MediaTypeObject | undefined;\n    };\n\ntype RequestBodyObject = Omit<OpenAPIV3.RequestBodyObject, 'content'> & {\n  content: MediaTypeObject;\n};\n\nexport function sha1(input: string) {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\n\nexport function createURL(domain: string, path: string) {\n  const cleanDomain = domain.replace(/\\/$/, '');\n  const cleanPath = path.replace(/^\\//, '');\n  const fullURL = `${cleanDomain}/${cleanPath}`;\n  return new URL(fullURL).toString();\n}\n\nconst schemaTypeHandlers: Record<string, (schema: OpenAPISchema) => z.ZodTypeAny> = {\n  string: (schema) => {\n    if (schema.enum) {\n      return z.enum(schema.enum as [string, ...string[]]);\n    }\n\n    let stringSchema = z.string();\n    if (schema.minLength !== undefined) {\n      stringSchema = stringSchema.min(schema.minLength);\n    }\n    if (schema.maxLength !== undefined) {\n      stringSchema = stringSchema.max(schema.maxLength);\n    }\n    return stringSchema;\n  },\n  number: (schema) => {\n    let numberSchema = z.number();\n    if (schema.minimum !== undefined) {\n      numberSchema = numberSchema.min(schema.minimum);\n    }\n    if (schema.maximum !== undefined) {\n      numberSchema = numberSchema.max(schema.maximum);\n    }\n    return numberSchema;\n  },\n  integer: (schema) => (schemaTypeHandlers.number(schema) as z.ZodNumber).int(),\n  boolean: () => z.boolean(),\n  array: (schema) => {\n    if (schema.items) {\n      const zodSchema = openAPISchemaToZod(schema.items as OpenAPISchema);\n      if (zodSchema) {\n        return z.array(zodSchema);\n      }\n\n      return z.array(z.unknown());\n    }\n    return z.array(z.unknown());\n  },\n  object: (schema) => {\n    const shape: { [key: string]: z.ZodTypeAny } = {};\n    if (schema.properties) {\n      Object.entries(schema.properties).forEach(([key, value]) => {\n        const zodSchema = openAPISchemaToZod(value as OpenAPISchema);\n        shape[key] = zodSchema || z.unknown();\n        if (schema.required && schema.required.includes(key)) {\n          shape[key] = shape[key].describe(value.description || '');\n        } else {\n          shape[key] = shape[key].optional().describe(value.description || '');\n        }\n      });\n    }\n    return z.object(shape);\n  },\n};\n\nfunction openAPISchemaToZod(schema: OpenAPISchema): z.ZodTypeAny | undefined {\n  if (schema.type === 'object' && Object.keys(schema.properties || {}).length === 0) {\n    return undefined;\n  }\n\n  const handler = schemaTypeHandlers[schema.type as string] || (() => z.unknown());\n  return handler(schema);\n}\n\n/**\n * Class representing a function signature.\n */\nexport class FunctionSignature {\n  name: string;\n  description: string;\n  parameters: ParametersSchema;\n  strict: boolean;\n\n  constructor(name: string, description: string, parameters: ParametersSchema, strict?: boolean) {\n    this.name = name;\n    this.description = description;\n    this.parameters = parameters;\n    this.strict = strict ?? false;\n  }\n\n  toObjectTool(): FunctionTool {\n    const parameters = {\n      ...this.parameters,\n      additionalProperties: this.strict ? false : undefined,\n    };\n\n    return {\n      type: Tools.function,\n      function: {\n        name: this.name,\n        description: this.description,\n        parameters,\n        ...(this.strict ? { strict: this.strict } : {}),\n      },\n    };\n  }\n}\n\nclass RequestConfig {\n  constructor(\n    readonly domain: string,\n    readonly basePath: string,\n    readonly method: string,\n    readonly operation: string,\n    readonly isConsequential: boolean,\n    readonly contentType: string,\n    readonly parameterLocations?: Record<string, 'query' | 'path' | 'header' | 'body'>,\n  ) {}\n}\n\nclass RequestExecutor {\n  path: string;\n  params?: Record<string, unknown>;\n  private operationHash?: string;\n  private authHeaders: Record<string, string> = {};\n  private authToken?: string;\n\n  constructor(private config: RequestConfig) {\n    this.path = config.basePath;\n  }\n\n  setParams(params: Record<string, unknown>) {\n    this.operationHash = sha1(JSON.stringify(params));\n    this.params = { ...params } as Record<string, unknown>;\n    if (this.config.parameterLocations) {\n      //Substituting “Path” Parameters:\n      for (const [key, value] of Object.entries(params)) {\n        if (this.config.parameterLocations[key] === 'path') {\n          const paramPattern = `{${key}}`;\n          if (this.path.includes(paramPattern)) {\n            this.path = this.path.replace(paramPattern, encodeURIComponent(String(value)));\n            delete this.params[key];\n          }\n        }\n      }\n    } else {\n      // Fallback: if no locations are defined, perform path substitution for all keys.\n      for (const [key, value] of Object.entries(params)) {\n        const paramPattern = `{${key}}`;\n        if (this.path.includes(paramPattern)) {\n          this.path = this.path.replace(paramPattern, encodeURIComponent(String(value)));\n          delete this.params[key];\n        }\n      }\n    }\n    return this;\n  }\n\n  async setAuth(metadata: ActionMetadataRuntime) {\n    if (!metadata.auth) {\n      return this;\n    }\n\n    const {\n      type,\n      /* API Key */\n      authorization_type,\n      custom_auth_header,\n      /* OAuth */\n      authorization_url,\n      client_url,\n      scope,\n      token_exchange_method,\n    } = metadata.auth;\n\n    const {\n      /* API Key */\n      api_key,\n      /* OAuth */\n      oauth_client_id,\n      oauth_client_secret,\n      oauth_token_expires_at,\n      oauth_access_token = '',\n    } = metadata;\n\n    const isApiKey = api_key != null && api_key.length > 0 && type === AuthTypeEnum.ServiceHttp;\n    const isOAuth = !!(\n      oauth_client_id != null &&\n      oauth_client_id &&\n      oauth_client_secret != null &&\n      oauth_client_secret &&\n      type === AuthTypeEnum.OAuth &&\n      authorization_url != null &&\n      authorization_url &&\n      client_url != null &&\n      client_url &&\n      scope != null &&\n      scope &&\n      token_exchange_method\n    );\n\n    if (isApiKey && authorization_type === AuthorizationTypeEnum.Basic) {\n      const basicToken = Buffer.from(api_key).toString('base64');\n      this.authHeaders['Authorization'] = `Basic ${basicToken}`;\n    } else if (isApiKey && authorization_type === AuthorizationTypeEnum.Bearer) {\n      this.authHeaders['Authorization'] = `Bearer ${api_key}`;\n    } else if (\n      isApiKey &&\n      authorization_type === AuthorizationTypeEnum.Custom &&\n      custom_auth_header != null &&\n      custom_auth_header\n    ) {\n      this.authHeaders[custom_auth_header] = api_key;\n    } else if (isOAuth) {\n      // TODO: maybe doing it in a different way later on. but we want that the user needs to folllow the oauth flow.\n      // If we do not have a valid token, bail or ask user to sign in\n      const now = new Date();\n\n      // 1. Check if token is set\n      if (!oauth_access_token) {\n        throw new Error('No access token found. Please log in first.');\n      }\n\n      // 2. Check if token is expired\n      if (oauth_token_expires_at && now >= new Date(oauth_token_expires_at)) {\n        // Optionally check refresh_token logic, or just prompt user to re-login\n        throw new Error('Access token is expired. Please re-login.');\n      }\n\n      // If valid, use it\n      this.authToken = oauth_access_token;\n      this.authHeaders['Authorization'] = `Bearer ${this.authToken}`;\n    }\n    return this;\n  }\n\n  async execute() {\n    const url = createURL(this.config.domain, this.path);\n    const headers: Record<string, string> = {\n      ...this.authHeaders,\n      ...(this.config.contentType ? { 'Content-Type': this.config.contentType } : {}),\n    };\n    const method = this.config.method.toLowerCase();\n    const axios = _axios.create();\n\n    // Initialize separate containers for query and body parameters.\n    const queryParams: Record<string, unknown> = {};\n    const bodyParams: Record<string, unknown> = {};\n\n    if (this.config.parameterLocations && this.params) {\n      for (const key of Object.keys(this.params)) {\n        // Determine parameter placement; default to \"query\" for GET and \"body\" for others.\n        const loc: 'query' | 'path' | 'header' | 'body' =\n          this.config.parameterLocations[key] || (method === 'get' ? 'query' : 'body');\n\n        const val = this.params[key];\n        if (loc === 'query') {\n          queryParams[key] = val;\n        } else if (loc === 'header') {\n          headers[key] = String(val);\n        } else if (loc === 'body') {\n          bodyParams[key] = val;\n        }\n      }\n    } else if (this.params) {\n      Object.assign(queryParams, this.params);\n      Object.assign(bodyParams, this.params);\n    }\n\n    if (method === 'get') {\n      return axios.get(url, { headers, params: queryParams });\n    } else if (method === 'post') {\n      return axios.post(url, bodyParams, { headers, params: queryParams });\n    } else if (method === 'put') {\n      return axios.put(url, bodyParams, { headers, params: queryParams });\n    } else if (method === 'delete') {\n      return axios.delete(url, { headers, data: bodyParams, params: queryParams });\n    } else if (method === 'patch') {\n      return axios.patch(url, bodyParams, { headers, params: queryParams });\n    } else {\n      throw new Error(`Unsupported HTTP method: ${method}`);\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n}\n\nexport class ActionRequest {\n  private config: RequestConfig;\n\n  constructor(\n    domain: string,\n    path: string,\n    method: string,\n    operation: string,\n    isConsequential: boolean,\n    contentType: string,\n    parameterLocations?: Record<string, 'query' | 'path' | 'header' | 'body'>,\n  ) {\n    this.config = new RequestConfig(\n      domain,\n      path,\n      method,\n      operation,\n      isConsequential,\n      contentType,\n      parameterLocations,\n    );\n  }\n\n  // Add getters to maintain backward compatibility\n  get domain() {\n    return this.config.domain;\n  }\n  get path() {\n    return this.config.basePath;\n  }\n  get method() {\n    return this.config.method;\n  }\n  get operation() {\n    return this.config.operation;\n  }\n  get isConsequential() {\n    return this.config.isConsequential;\n  }\n  get contentType() {\n    return this.config.contentType;\n  }\n\n  createExecutor() {\n    return new RequestExecutor(this.config);\n  }\n\n  // Maintain backward compatibility by delegating to a new executor\n  setParams(params: Record<string, unknown>) {\n    const executor = this.createExecutor();\n    executor.setParams(params);\n    return executor;\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    const executor = this.createExecutor();\n    return executor.setAuth(metadata);\n  }\n\n  async execute() {\n    const executor = this.createExecutor();\n    return executor.execute();\n  }\n}\n\nexport function resolveRef<\n  T extends\n    | OpenAPIV3.ReferenceObject\n    | OpenAPIV3.SchemaObject\n    | OpenAPIV3.ParameterObject\n    | OpenAPIV3.RequestBodyObject,\n>(obj: T, components?: OpenAPIV3.ComponentsObject): Exclude<T, OpenAPIV3.ReferenceObject> {\n  if ('$ref' in obj && components) {\n    const refPath = obj.$ref.replace(/^#\\/components\\//, '').split('/');\n\n    let resolved: unknown = components as Record<string, unknown>;\n    for (const segment of refPath) {\n      if (typeof resolved === 'object' && resolved !== null && segment in resolved) {\n        resolved = (resolved as Record<string, unknown>)[segment];\n      } else {\n        throw new Error(`Could not resolve reference: ${obj.$ref}`);\n      }\n    }\n\n    return resolveRef(resolved as typeof obj, components) as Exclude<T, OpenAPIV3.ReferenceObject>;\n  }\n\n  return obj as Exclude<T, OpenAPIV3.ReferenceObject>;\n}\n\nfunction sanitizeOperationId(input: string) {\n  return input.replace(/[^a-zA-Z0-9_-]/g, '');\n}\n\n/**\n * Converts an OpenAPI spec to function signatures and request builders.\n */\nexport function openapiToFunction(\n  openapiSpec: OpenAPIV3.Document,\n  generateZodSchemas = false,\n): {\n  functionSignatures: FunctionSignature[];\n  requestBuilders: Record<string, ActionRequest>;\n  zodSchemas?: Record<string, z.ZodTypeAny>;\n} {\n  const functionSignatures: FunctionSignature[] = [];\n  const requestBuilders: Record<string, ActionRequest> = {};\n  const zodSchemas: Record<string, z.ZodTypeAny> = {};\n  const baseUrl = openapiSpec.servers?.[0]?.url ?? '';\n\n  // Iterate over each path and method in the OpenAPI spec\n  for (const [path, methods] of Object.entries(openapiSpec.paths)) {\n    for (const [method, operation] of Object.entries(methods as OpenAPIV3.PathsObject)) {\n      const paramLocations: Record<string, 'query' | 'path' | 'header' | 'body'> = {};\n      const operationObj = operation as OpenAPIV3.OperationObject & {\n        'x-openai-isConsequential'?: boolean;\n      } & {\n        'x-strict'?: boolean;\n      };\n\n      // Operation ID is used as the function name\n      const defaultOperationId = `${method}_${path}`;\n      const operationId = operationObj.operationId || sanitizeOperationId(defaultOperationId);\n      const description = operationObj.summary || operationObj.description || '';\n      const isStrict = operationObj['x-strict'] ?? false;\n\n      const parametersSchema: OpenAPISchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n      };\n\n      if (operationObj.parameters) {\n        for (const param of operationObj.parameters ?? []) {\n          const resolvedParam = resolveRef(\n            param,\n            openapiSpec.components,\n          ) as OpenAPIV3.ParameterObject;\n\n          const paramName = resolvedParam.name;\n          if (!paramName || !resolvedParam.schema) {\n            continue;\n          }\n\n          const paramSchema = resolveRef(\n            resolvedParam.schema,\n            openapiSpec.components,\n          ) as OpenAPIV3.SchemaObject;\n\n          parametersSchema.properties[paramName] = paramSchema;\n          if (resolvedParam.required) {\n            parametersSchema.required.push(paramName);\n          }\n          // Record the parameter location from the OpenAPI \"in\" field.\n          paramLocations[paramName] =\n            resolvedParam.in === 'query' ||\n            resolvedParam.in === 'path' ||\n            resolvedParam.in === 'header' ||\n            resolvedParam.in === 'body'\n              ? resolvedParam.in\n              : 'query';\n        }\n      }\n\n      let contentType = '';\n      if (operationObj.requestBody) {\n        const requestBody = operationObj.requestBody as RequestBodyObject;\n        const content = requestBody.content;\n        contentType = Object.keys(content ?? {})[0];\n        const schema = content?.[contentType]?.schema;\n        const resolvedSchema = resolveRef(\n          schema as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n          openapiSpec.components,\n        );\n        parametersSchema.properties = {\n          ...parametersSchema.properties,\n          ...resolvedSchema.properties,\n        };\n        if (resolvedSchema.required) {\n          parametersSchema.required.push(...resolvedSchema.required);\n        }\n        // Mark requestBody properties as belonging to the \"body\"\n        if (resolvedSchema.properties) {\n          for (const key in resolvedSchema.properties) {\n            paramLocations[key] = 'body';\n          }\n        }\n\n        contentType = contentType ?? 'application/json';\n      }\n\n      const functionSignature = new FunctionSignature(\n        operationId,\n        description,\n        parametersSchema,\n        isStrict,\n      );\n      functionSignatures.push(functionSignature);\n\n      const actionRequest = new ActionRequest(\n        baseUrl,\n        path,\n        method,\n        operationId,\n        !!(operationObj['x-openai-isConsequential'] ?? false),\n        contentType,\n        paramLocations,\n      );\n\n      requestBuilders[operationId] = actionRequest;\n\n      if (generateZodSchemas && Object.keys(parametersSchema.properties).length > 0) {\n        const schema = openAPISchemaToZod(parametersSchema);\n        if (schema) {\n          zodSchemas[operationId] = schema;\n        }\n      }\n    }\n  }\n\n  return { functionSignatures, requestBuilders, zodSchemas };\n}\n\nexport type ValidationResult = {\n  status: boolean;\n  message: string;\n  spec?: OpenAPIV3.Document;\n};\n\n/**\n * Validates and parses an OpenAPI spec.\n */\nexport function validateAndParseOpenAPISpec(specString: string): ValidationResult {\n  try {\n    let parsedSpec;\n    try {\n      parsedSpec = JSON.parse(specString);\n    } catch {\n      parsedSpec = load(specString);\n    }\n\n    // Check for servers\n    if (\n      !parsedSpec.servers ||\n      !Array.isArray(parsedSpec.servers) ||\n      parsedSpec.servers.length === 0\n    ) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    if (!parsedSpec.servers[0].url) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    // Check for paths\n    const paths = parsedSpec.paths;\n    if (!paths || typeof paths !== 'object' || Object.keys(paths).length === 0) {\n      return { status: false, message: 'No paths found in the OpenAPI spec.' };\n    }\n\n    const components = parsedSpec.components?.schemas || {};\n    const messages = [];\n\n    for (const [path, methods] of Object.entries(paths)) {\n      for (const [httpMethod, operation] of Object.entries(methods as OpenAPIV3.PathItemObject)) {\n        // Ensure operation is a valid operation object\n        const { responses } = operation as OpenAPIV3.OperationObject | { responses: undefined };\n        if (typeof operation === 'object' && responses) {\n          for (const [statusCode, response] of Object.entries(responses)) {\n            const content = (response as OpenAPIV3.ResponseObject).content as MediaTypeObject;\n            if (content && content['application/json'] && content['application/json'].schema) {\n              const schema = content['application/json'].schema;\n              if ('$ref' in schema && typeof schema.$ref === 'string') {\n                const refName = schema.$ref.split('/').pop();\n                if (refName && !components[refName]) {\n                  messages.push(\n                    `In context=('paths', '${path}', '${httpMethod}', '${statusCode}', 'response', 'content', 'application/json', 'schema'), reference to unknown component ${refName}; using empty schema`,\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      status: true,\n      message: messages.join('\\n') || 'OpenAPI spec is valid.',\n      spec: parsedSpec,\n    };\n  } catch (error) {\n    console.error(error);\n    return { status: false, message: 'Error parsing OpenAPI spec.' };\n  }\n}\n","import type * as t from './types';\nimport { EndpointURLs } from './config';\nimport * as s from './schemas';\n\nexport default function createPayload(submission: t.TSubmission) {\n  const {\n    isEdited,\n    userMessage,\n    isContinued,\n    isTemporary,\n    isRegenerate,\n    conversation,\n    editedContent,\n    ephemeralAgent,\n    endpointOption,\n  } = submission;\n  const { conversationId } = s.tConvoUpdateSchema.parse(conversation);\n  const { endpoint: _e, endpointType } = endpointOption as {\n    endpoint: s.EModelEndpoint;\n    endpointType?: s.EModelEndpoint;\n  };\n\n  const endpoint = _e as s.EModelEndpoint;\n  let server = `${EndpointURLs[s.EModelEndpoint.agents]}/${endpoint}`;\n  if (s.isAssistantsEndpoint(endpoint)) {\n    server =\n      EndpointURLs[(endpointType ?? endpoint) as 'assistants' | 'azureAssistants'] +\n      (isEdited ? '/modify' : '');\n  }\n\n  const payload: t.TPayload = {\n    ...userMessage,\n    ...endpointOption,\n    endpoint,\n    isTemporary,\n    isRegenerate,\n    editedContent,\n    conversationId,\n    isContinued: !!(isEdited && isContinued),\n    ephemeralAgent: s.isAssistantsEndpoint(endpoint) ? undefined : ephemeralAgent,\n  };\n\n  return { server, payload };\n}\n","import {\n  Verbosity,\n  ImageDetail,\n  EModelEndpoint,\n  openAISettings,\n  googleSettings,\n  ReasoningEffort,\n  ReasoningSummary,\n  BedrockProviders,\n  anthropicSettings,\n} from './types';\nimport { SettingDefinition, SettingsConfiguration } from './generate';\n\n// Base definitions\nconst baseDefinitions: Record<string, SettingDefinition> = {\n  model: {\n    key: 'model',\n    label: 'com_ui_model',\n    labelCode: true,\n    type: 'string',\n    component: 'dropdown',\n    optionType: 'model',\n    selectPlaceholder: 'com_ui_select_model',\n    searchPlaceholder: 'com_ui_select_search_model',\n    searchPlaceholderCode: true,\n    selectPlaceholderCode: true,\n    columnSpan: 4,\n  },\n  temperature: {\n    key: 'temperature',\n    label: 'com_endpoint_temperature',\n    labelCode: true,\n    description: 'com_endpoint_openai_temp',\n    descriptionCode: true,\n    type: 'number',\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  topP: {\n    key: 'topP',\n    label: 'com_endpoint_top_p',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_topp',\n    descriptionCode: true,\n    type: 'number',\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  stop: {\n    key: 'stop',\n    label: 'com_endpoint_stop',\n    labelCode: true,\n    description: 'com_endpoint_openai_stop',\n    descriptionCode: true,\n    placeholder: 'com_endpoint_stop_placeholder',\n    placeholderCode: true,\n    type: 'array',\n    default: [],\n    component: 'tags',\n    optionType: 'conversation',\n    minTags: 0,\n    maxTags: 4,\n  },\n  imageDetail: {\n    key: 'imageDetail',\n    label: 'com_endpoint_plug_image_detail',\n    labelCode: true,\n    description: 'com_endpoint_openai_detail',\n    descriptionCode: true,\n    type: 'enum',\n    default: ImageDetail.auto,\n    component: 'slider',\n    options: [ImageDetail.low, ImageDetail.auto, ImageDetail.high],\n    enumMappings: {\n      [ImageDetail.low]: 'com_ui_low',\n      [ImageDetail.auto]: 'com_ui_auto',\n      [ImageDetail.high]: 'com_ui_high',\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n};\n\nconst createDefinition = (\n  base: Partial<SettingDefinition>,\n  overrides: Partial<SettingDefinition>,\n): SettingDefinition => {\n  return { ...base, ...overrides } as SettingDefinition;\n};\n\nexport const librechat = {\n  modelLabel: {\n    key: 'modelLabel',\n    label: 'com_endpoint_custom_name',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'input',\n    placeholder: 'com_endpoint_openai_custom_name_placeholder',\n    placeholderCode: true,\n    optionType: 'conversation',\n  } as const,\n  maxContextTokens: {\n    key: 'maxContextTokens',\n    label: 'com_endpoint_context_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    description: 'com_endpoint_context_info',\n    descriptionCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  } as const,\n  resendFiles: {\n    key: 'resendFiles',\n    label: 'com_endpoint_plug_resend_files',\n    labelCode: true,\n    description: 'com_endpoint_openai_resend_files',\n    descriptionCode: true,\n    type: 'boolean',\n    default: true,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  } as const,\n  promptPrefix: {\n    key: 'promptPrefix',\n    label: 'com_endpoint_prompt_prefix',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'textarea',\n    placeholder: 'com_endpoint_openai_prompt_prefix_placeholder',\n    placeholderCode: true,\n    optionType: 'model',\n  } as const,\n  fileTokenLimit: {\n    key: 'fileTokenLimit',\n    label: 'com_ui_file_token_limit',\n    labelCode: true,\n    description: 'com_ui_file_token_limit_desc',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    type: 'number',\n    component: 'input',\n    columnSpan: 2,\n  } as const,\n};\n\nconst openAIParams: Record<string, SettingDefinition> = {\n  chatGptLabel: {\n    ...librechat.modelLabel,\n    key: 'chatGptLabel',\n  },\n  promptPrefix: librechat.promptPrefix,\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: openAISettings.temperature.default,\n    range: {\n      min: openAISettings.temperature.min,\n      max: openAISettings.temperature.max,\n      step: openAISettings.temperature.step,\n    },\n  }),\n  top_p: createDefinition(baseDefinitions.topP, {\n    key: 'top_p',\n    default: openAISettings.top_p.default,\n    range: {\n      min: openAISettings.top_p.min,\n      max: openAISettings.top_p.max,\n      step: openAISettings.top_p.step,\n    },\n  }),\n  frequency_penalty: {\n    key: 'frequency_penalty',\n    label: 'com_endpoint_frequency_penalty',\n    labelCode: true,\n    description: 'com_endpoint_openai_freq',\n    descriptionCode: true,\n    type: 'number',\n    default: openAISettings.frequency_penalty.default,\n    range: {\n      min: openAISettings.frequency_penalty.min,\n      max: openAISettings.frequency_penalty.max,\n      step: openAISettings.frequency_penalty.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  presence_penalty: {\n    key: 'presence_penalty',\n    label: 'com_endpoint_presence_penalty',\n    labelCode: true,\n    description: 'com_endpoint_openai_pres',\n    descriptionCode: true,\n    type: 'number',\n    default: openAISettings.presence_penalty.default,\n    range: {\n      min: openAISettings.presence_penalty.min,\n      max: openAISettings.presence_penalty.max,\n      step: openAISettings.presence_penalty.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  max_tokens: {\n    key: 'max_tokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_openai_max_tokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  reasoning_effort: {\n    key: 'reasoning_effort',\n    label: 'com_endpoint_reasoning_effort',\n    labelCode: true,\n    description: 'com_endpoint_openai_reasoning_effort',\n    descriptionCode: true,\n    type: 'enum',\n    default: ReasoningEffort.none,\n    component: 'slider',\n    options: [\n      ReasoningEffort.none,\n      ReasoningEffort.minimal,\n      ReasoningEffort.low,\n      ReasoningEffort.medium,\n      ReasoningEffort.high,\n    ],\n    enumMappings: {\n      [ReasoningEffort.none]: 'com_ui_none',\n      [ReasoningEffort.minimal]: 'com_ui_minimal',\n      [ReasoningEffort.low]: 'com_ui_low',\n      [ReasoningEffort.medium]: 'com_ui_medium',\n      [ReasoningEffort.high]: 'com_ui_high',\n    },\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  useResponsesApi: {\n    key: 'useResponsesApi',\n    label: 'com_endpoint_use_responses_api',\n    labelCode: true,\n    description: 'com_endpoint_openai_use_responses_api',\n    descriptionCode: true,\n    type: 'boolean',\n    default: false,\n    component: 'switch',\n    optionType: 'model',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  web_search: {\n    key: 'web_search',\n    label: 'com_ui_web_search',\n    labelCode: true,\n    description: 'com_endpoint_openai_use_web_search',\n    descriptionCode: true,\n    type: 'boolean',\n    default: false,\n    component: 'switch',\n    optionType: 'model',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  reasoning_summary: {\n    key: 'reasoning_summary',\n    label: 'com_endpoint_reasoning_summary',\n    labelCode: true,\n    description: 'com_endpoint_openai_reasoning_summary',\n    descriptionCode: true,\n    type: 'enum',\n    default: ReasoningSummary.none,\n    component: 'slider',\n    options: [\n      ReasoningSummary.none,\n      ReasoningSummary.auto,\n      ReasoningSummary.concise,\n      ReasoningSummary.detailed,\n    ],\n    enumMappings: {\n      [ReasoningSummary.none]: 'com_ui_none',\n      [ReasoningSummary.auto]: 'com_ui_auto',\n      [ReasoningSummary.concise]: 'com_ui_concise',\n      [ReasoningSummary.detailed]: 'com_ui_detailed',\n    },\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  verbosity: {\n    key: 'verbosity',\n    label: 'com_endpoint_verbosity',\n    labelCode: true,\n    description: 'com_endpoint_openai_verbosity',\n    descriptionCode: true,\n    type: 'enum',\n    default: Verbosity.none,\n    component: 'slider',\n    options: [Verbosity.none, Verbosity.low, Verbosity.medium, Verbosity.high],\n    enumMappings: {\n      [Verbosity.none]: 'com_ui_none',\n      [Verbosity.low]: 'com_ui_low',\n      [Verbosity.medium]: 'com_ui_medium',\n      [Verbosity.high]: 'com_ui_high',\n    },\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  disableStreaming: {\n    key: 'disableStreaming',\n    label: 'com_endpoint_disable_streaming_label',\n    labelCode: true,\n    description: 'com_endpoint_disable_streaming',\n    descriptionCode: true,\n    type: 'boolean',\n    default: false,\n    component: 'switch',\n    optionType: 'model',\n    showDefault: false,\n    columnSpan: 2,\n  } as const,\n};\n\nconst anthropic: Record<string, SettingDefinition> = {\n  maxOutputTokens: {\n    key: 'maxOutputTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_anthropic_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    range: {\n      min: anthropicSettings.maxOutputTokens.min,\n      max: anthropicSettings.maxOutputTokens.max,\n      step: anthropicSettings.maxOutputTokens.step,\n    },\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: anthropicSettings.temperature.default,\n    range: {\n      min: anthropicSettings.temperature.min,\n      max: anthropicSettings.temperature.max,\n      step: anthropicSettings.temperature.step,\n    },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: anthropicSettings.topP.default,\n    range: {\n      min: anthropicSettings.topP.min,\n      max: anthropicSettings.topP.max,\n      step: anthropicSettings.topP.step,\n    },\n  }),\n  topK: {\n    key: 'topK',\n    label: 'com_endpoint_top_k',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_topk',\n    descriptionCode: true,\n    type: 'number',\n    default: anthropicSettings.topK.default,\n    range: {\n      min: anthropicSettings.topK.min,\n      max: anthropicSettings.topK.max,\n      step: anthropicSettings.topK.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  promptCache: {\n    key: 'promptCache',\n    label: 'com_endpoint_prompt_cache',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_prompt_cache',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.promptCache.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinking: {\n    key: 'thinking',\n    label: 'com_endpoint_thinking',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_thinking',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.thinking.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinkingBudget: {\n    key: 'thinkingBudget',\n    label: 'com_endpoint_thinking_budget',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_thinking_budget',\n    descriptionCode: true,\n    type: 'number',\n    component: 'input',\n    default: anthropicSettings.thinkingBudget.default,\n    range: {\n      min: anthropicSettings.thinkingBudget.min,\n      max: anthropicSettings.thinkingBudget.max,\n      step: anthropicSettings.thinkingBudget.step,\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n  web_search: {\n    key: 'web_search',\n    label: 'com_ui_web_search',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_use_web_search',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.web_search.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n};\n\nconst bedrock: Record<string, SettingDefinition> = {\n  system: {\n    key: 'system',\n    label: 'com_endpoint_prompt_prefix',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'textarea',\n    placeholder: 'com_endpoint_openai_prompt_prefix_placeholder',\n    placeholderCode: true,\n    optionType: 'model',\n  },\n  region: {\n    key: 'region',\n    type: 'string',\n    label: 'com_ui_region',\n    labelCode: true,\n    component: 'combobox',\n    optionType: 'conversation',\n    selectPlaceholder: 'com_ui_select_region',\n    searchPlaceholder: 'com_ui_select_search_region',\n    searchPlaceholderCode: true,\n    selectPlaceholderCode: true,\n    columnSpan: 2,\n  },\n  maxTokens: {\n    key: 'maxTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_anthropic_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 1,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topK: createDefinition(anthropic.topK, {\n    range: { min: 0, max: 500, step: 1 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.999,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst mistral: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.7,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst cohere: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.3,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.75,\n    range: { min: 0.01, max: 0.99, step: 0.01 },\n  }),\n};\n\nconst meta: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.5,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.9,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst google: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: googleSettings.temperature.default,\n    range: {\n      min: googleSettings.temperature.min,\n      max: googleSettings.temperature.max,\n      step: googleSettings.temperature.step,\n    },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: googleSettings.topP.default,\n    range: {\n      min: googleSettings.topP.min,\n      max: googleSettings.topP.max,\n      step: googleSettings.topP.step,\n    },\n  }),\n  topK: {\n    key: 'topK',\n    label: 'com_endpoint_top_k',\n    labelCode: true,\n    description: 'com_endpoint_google_topk',\n    descriptionCode: true,\n    type: 'number',\n    default: googleSettings.topK.default,\n    range: {\n      min: googleSettings.topK.min,\n      max: googleSettings.topK.max,\n      step: googleSettings.topK.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  maxOutputTokens: {\n    key: 'maxOutputTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_google_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    default: googleSettings.maxOutputTokens.default,\n    range: {\n      min: googleSettings.maxOutputTokens.min,\n      max: googleSettings.maxOutputTokens.max,\n      step: googleSettings.maxOutputTokens.step,\n    },\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  thinking: {\n    key: 'thinking',\n    label: 'com_endpoint_thinking',\n    labelCode: true,\n    description: 'com_endpoint_google_thinking',\n    descriptionCode: true,\n    type: 'boolean',\n    default: googleSettings.thinking.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinkingBudget: {\n    key: 'thinkingBudget',\n    label: 'com_endpoint_thinking_budget',\n    labelCode: true,\n    description: 'com_endpoint_google_thinking_budget',\n    descriptionCode: true,\n    placeholder: 'com_ui_auto',\n    placeholderCode: true,\n    type: 'number',\n    component: 'input',\n    range: {\n      min: googleSettings.thinkingBudget.min,\n      max: googleSettings.thinkingBudget.max,\n      step: googleSettings.thinkingBudget.step,\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n  web_search: {\n    key: 'web_search',\n    label: 'com_endpoint_use_search_grounding',\n    labelCode: true,\n    description: 'com_endpoint_google_use_search_grounding',\n    descriptionCode: true,\n    type: 'boolean',\n    default: false,\n    component: 'switch',\n    optionType: 'model',\n    showDefault: false,\n    columnSpan: 2,\n  },\n};\n\nconst googleConfig: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  google.maxOutputTokens,\n  google.temperature,\n  google.topP,\n  google.topK,\n  librechat.resendFiles,\n  google.thinking,\n  google.thinkingBudget,\n  google.web_search,\n  librechat.fileTokenLimit,\n];\n\nconst googleCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst googleCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  google.maxOutputTokens,\n  google.temperature,\n  google.topP,\n  google.topK,\n  librechat.resendFiles,\n  google.thinking,\n  google.thinkingBudget,\n  google.web_search,\n  librechat.fileTokenLimit,\n];\n\nconst openAI: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  openAIParams.max_tokens,\n  openAIParams.temperature,\n  openAIParams.top_p,\n  openAIParams.frequency_penalty,\n  openAIParams.presence_penalty,\n  baseDefinitions.stop,\n  librechat.resendFiles,\n  baseDefinitions.imageDetail,\n  openAIParams.web_search,\n  openAIParams.reasoning_effort,\n  openAIParams.useResponsesApi,\n  openAIParams.reasoning_summary,\n  openAIParams.verbosity,\n  openAIParams.disableStreaming,\n  librechat.fileTokenLimit,\n];\n\nconst openAICol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst openAICol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  openAIParams.max_tokens,\n  openAIParams.temperature,\n  openAIParams.top_p,\n  openAIParams.frequency_penalty,\n  openAIParams.presence_penalty,\n  baseDefinitions.stop,\n  librechat.resendFiles,\n  baseDefinitions.imageDetail,\n  openAIParams.reasoning_effort,\n  openAIParams.reasoning_summary,\n  openAIParams.verbosity,\n  openAIParams.useResponsesApi,\n  openAIParams.web_search,\n  openAIParams.disableStreaming,\n  librechat.fileTokenLimit,\n];\n\nconst anthropicConfig: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  anthropic.maxOutputTokens,\n  anthropic.temperature,\n  anthropic.topP,\n  anthropic.topK,\n  librechat.resendFiles,\n  anthropic.promptCache,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n  anthropic.web_search,\n  librechat.fileTokenLimit,\n];\n\nconst anthropicCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst anthropicCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  anthropic.maxOutputTokens,\n  anthropic.temperature,\n  anthropic.topP,\n  anthropic.topK,\n  librechat.resendFiles,\n  anthropic.promptCache,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n  anthropic.web_search,\n  librechat.fileTokenLimit,\n];\n\nconst bedrockAnthropic: SettingsConfiguration = [\n  librechat.modelLabel,\n  bedrock.system,\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  bedrock.temperature,\n  bedrock.topP,\n  bedrock.topK,\n  baseDefinitions.stop,\n  librechat.resendFiles,\n  bedrock.region,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n  librechat.fileTokenLimit,\n];\n\nconst bedrockMistral: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  mistral.temperature,\n  mistral.topP,\n  librechat.resendFiles,\n  bedrock.region,\n  librechat.fileTokenLimit,\n];\n\nconst bedrockCohere: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  cohere.temperature,\n  cohere.topP,\n  librechat.resendFiles,\n  bedrock.region,\n  librechat.fileTokenLimit,\n];\n\nconst bedrockGeneral: SettingsConfiguration = [\n  librechat.modelLabel,\n  librechat.promptPrefix,\n  librechat.maxContextTokens,\n  meta.temperature,\n  meta.topP,\n  librechat.resendFiles,\n  bedrock.region,\n  librechat.fileTokenLimit,\n];\n\nconst bedrockAnthropicCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  bedrock.system,\n  baseDefinitions.stop,\n];\n\nconst bedrockAnthropicCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  bedrock.temperature,\n  bedrock.topP,\n  bedrock.topK,\n  librechat.resendFiles,\n  bedrock.region,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n  librechat.fileTokenLimit,\n];\n\nconst bedrockMistralCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst bedrockMistralCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  mistral.temperature,\n  mistral.topP,\n  librechat.resendFiles,\n  bedrock.region,\n  librechat.fileTokenLimit,\n];\n\nconst bedrockCohereCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst bedrockCohereCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  bedrock.maxTokens,\n  cohere.temperature,\n  cohere.topP,\n  librechat.resendFiles,\n  bedrock.region,\n  librechat.fileTokenLimit,\n];\n\nconst bedrockGeneralCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  librechat.modelLabel,\n  librechat.promptPrefix,\n];\n\nconst bedrockGeneralCol2: SettingsConfiguration = [\n  librechat.maxContextTokens,\n  meta.temperature,\n  meta.topP,\n  librechat.resendFiles,\n  bedrock.region,\n  librechat.fileTokenLimit,\n];\n\nexport const paramSettings: Record<string, SettingsConfiguration | undefined> = {\n  [EModelEndpoint.openAI]: openAI,\n  [EModelEndpoint.azureOpenAI]: openAI,\n  [EModelEndpoint.custom]: openAI,\n  [EModelEndpoint.anthropic]: anthropicConfig,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Anthropic}`]: bedrockAnthropic,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.MistralAI}`]: bedrockMistral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Cohere}`]: bedrockCohere,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Meta}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.AI21}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Amazon}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.DeepSeek}`]: bedrockGeneral,\n  [EModelEndpoint.google]: googleConfig,\n};\n\nconst openAIColumns = {\n  col1: openAICol1,\n  col2: openAICol2,\n};\n\nconst bedrockGeneralColumns = {\n  col1: bedrockGeneralCol1,\n  col2: bedrockGeneralCol2,\n};\n\nexport const presetSettings: Record<\n  string,\n  | {\n      col1: SettingsConfiguration;\n      col2: SettingsConfiguration;\n    }\n  | undefined\n> = {\n  [EModelEndpoint.openAI]: openAIColumns,\n  [EModelEndpoint.azureOpenAI]: openAIColumns,\n  [EModelEndpoint.custom]: openAIColumns,\n  [EModelEndpoint.anthropic]: {\n    col1: anthropicCol1,\n    col2: anthropicCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Anthropic}`]: {\n    col1: bedrockAnthropicCol1,\n    col2: bedrockAnthropicCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.MistralAI}`]: {\n    col1: bedrockMistralCol1,\n    col2: bedrockMistralCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Cohere}`]: {\n    col1: bedrockCohereCol1,\n    col2: bedrockCohereCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Meta}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.AI21}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Amazon}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.DeepSeek}`]: bedrockGeneralColumns,\n  [EModelEndpoint.google]: {\n    col1: googleCol1,\n    col2: googleCol2,\n  },\n};\n\nexport const agentParamSettings: Record<string, SettingsConfiguration | undefined> = Object.entries(\n  presetSettings,\n).reduce<Record<string, SettingsConfiguration | undefined>>((acc, [key, value]) => {\n  if (value) {\n    acc[key] = value.col2;\n  }\n  return acc;\n}, {});\n"],"names":["Tools","EToolResources","AnnotationTypes","StepStatus","MessageContentTypes","RunStatus","envVarRegex","extractVariableName","value","match","trim","extractEnvVariable","trimmed","singleMatch","varName","process","env","regex","result","matches","exec","push","fullMatch","index","i","length","_a","envValue","substring","FilePurpose","actionDelimiter","actionDomainSeparator","hostImageIdSuffix","hostImageNamePrefix","AssistantStreamEvents","defaultOrderQuery","order","limit","FEEDBACK_RATINGS","FEEDBACK_REASON_KEYS","FEEDBACK_TAGS","key","label","direction","icon","getTagsForRating","rating","filter","tag","feedbackTagKeySchema","z","enum","feedbackRatingSchema","feedbackSchema","object","text","string","max","optional","toMinimalFeedback","feedback","getTagByKey","find","AuthType","isUUID","uuid","EModelEndpoint","authTypeSchema","nativeEnum","BedrockProviders","paramEndpoints","Set","agents","openAI","bedrock","azureOpenAI","anthropic","custom","google","ImageDetail","ReasoningEffort","ReasoningSummary","Verbosity","getModelKey","endpoint","model","parts","split","provider","part","Object","values","includes","getSettingsKeys","endpointKey","modelKey","concat","isAssistantsEndpoint","_endpoint","toLowerCase","endsWith","assistants","isAgentsEndpoint","isParamEndpoint","endpointType","has","EAgent","imageDetailNumeric","low","auto","high","imageDetailValue","eImageDetailSchema","eReasoningEffortSchema","eReasoningSummarySchema","eVerbositySchema","defaultAssistantFormValues","assistant","id","name","description","instructions","conversation_starters","functions","code_interpreter","image_vision","retrieval","append_current_datetime","defaultAgentFormValues","_b","agent","model_parameters","tools","projectIds","artifacts","isCollaborative","recursion_limit","undefined","execute_code","file_search","web_search","category","support_contact","email","ImageVisionTool","_c","type","function","parameters","properties","required","isImageVisionTool","tool","openAISettings","default","temperature","min","step","top_p","presence_penalty","frequency_penalty","resendFiles","maxContextTokens","max_tokens","imageDetail","googleSettings","maxOutputTokens","topP","topK","thinking","thinkingBudget","LEGACY_ANTHROPIC_MAX_OUTPUT","anthropicSettings","promptCache","reset","modelName","test","set","legacy","agentsSettings","endpointSettings","_d","eModelEndpointSchema","extendedModelEndpointSchema","union","tPluginAuthConfigSchema","authField","tPluginSchema","pluginKey","authConfig","array","authenticated","boolean","chatMenu","isButton","toolkit","tExampleSchema","input","content","output","agentOptionSettings","options","classic","skipCompletion","eAgentOptionsSchema","tAgentOptionsSchema","number","tMessageSchema","messageId","clientId","nullable","conversationId","parentMessageId","responseMessageId","overrideParentMessageId","bg","title","or","literal","sender","generation","isCreatedByUser","error","clientTimestamp","createdAt","Date","toISOString","updatedAt","current","unfinished","searchResult","finish_reason","thread_id","iconURL","coerceNumber","transform","val","parseFloat","DocumentType","lazy","null","record","tConversationSchema","isArchived","user","messages","modelLabel","userLabel","promptPrefix","system","stream","context","examples","tags","file_ids","reasoning_effort","reasoning_summary","verbosity","useResponsesApi","disableStreaming","assistant_id","agent_id","region","maxTokens","additionalModelRequestFields","additional_instructions","presetOverride","unknown","stop","greeting","spec","expiredAt","fileTokenLimit","resendImages","agentOptions","chatGptLabel","tPresetSchema","omit","merge","presetId","defaultPreset","tConvoUpdateSchema","tQueryParamsSchema","pick","tSharedLinkSchema","shareId","isPublic","tConversationTagSchema","_id","count","position","googleBaseSchema","googleSchema","obj","removeNullishValues","catch","googleGenConfigSchema","presencePenalty","frequencyPenalty","stopSequences","thinkingConfig","includeThoughts","strip","gptPluginsBaseSchema","gptPluginsSchema","__assign","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","removeEmptyStrings","newObj","keys","forEach","FileSources","assistantSchema","compactAssistantSchema","agentsBaseSchema","agentsSchema","openAIBaseSchema","openAISchema","compactGoogleSchema","anthropicBaseSchema","anthropicSchema","compactPluginsSchema","tBannerSchema","bannerId","message","displayFrom","displayTo","compactAgentsBaseSchema","compactAgentsSchema","tModelSpecSchema","preset","showIconInMenu","showIconInHeader","authType","specsConfigSchema","enforce","prioritize","list","addedEndpoints","supportsFiles","azureAssistants","excelFileTypes","fullMimeTypesList","__spreadArray","codeInterpreterMimeTypesList","retrievalMimeTypesList","imageExtRegex","excelMimeTypes","textMimeTypes","applicationMimeTypes","imageMimeTypes","audioMimeTypes","defaultOCRMimeTypes","defaultTextMimeTypes","defaultSTTMimeTypes","bedrockNativeDocumentMimeTypes","supportedMimeTypes","codeInterpreterMimeTypes","codeTypeMapping","c","cs","cpp","h","md","php","py","rb","tex","js","sh","ts","tar","zip","yml","yaml","log","tsv","csv","doc","docx","xls","xlsx","retrievalMimeTypes","megabyte","mbToBytes","mb","defaultSizeLimit","assistantsFileConfig","fileLimit","fileSizeLimit","totalSizeLimit","disabled","fileConfig","endpoints","serverFileSizeLimit","avatarSizeLimit","clientImageResize","enabled","maxWidth","maxHeight","quality","ocr","stt","checkType","fileType","supportedTypes","some","supportedMimeTypesSchema","any","refine","mimeTypes","every","mimeType","RegExp","endpointFileConfigSchema","fileConfigSchema","imageGeneration","percentage","px","convertStringsToRegex","patterns","reduce","acc","pattern","console","mergeFileConfig","dynamic","mergedConfig","dynamicEndpoint","mergedEndpoint","field","FileContext","AuthTypeEnum","AuthorizationTypeEnum","TokenExchangeMethodEnum","checkOpenAIStorage","source","openai","azure","BaseOptionsSchema","startup","iconPath","timeout","initTimeout","serverInstructions","requiresOAuth","oauth","authorization_url","url","token_url","client_id","client_secret","scope","redirect_uri","token_exchange_method","grant_types_supported","token_endpoint_auth_methods_supported","response_types_supported","code_challenge_methods_supported","revocation_endpoint","revocation_endpoint_auth_methods_supported","customUserVars","StdioOptionsSchema","extend","command","args","processedEnv","_i","entries","stderr","WebSocketOptionsSchema","pipe","protocol","URL","SSEOptionsSchema","headers","StreamableHTTPOptionsSchema","MCPOptionsSchema","MCPServersSchema","BASE_URL","browser","baseEl","document","querySelector","getAttribute","slice","SettingsViews","apiBaseUrl","buildQuery","params","query","Array","isArray","map","v","encodeURIComponent","join","String","messagesRoot","rest","__rest","messagesArtifacts","shareRoot","shareMessages","getSharedLinks","pageSize","sortBy","sortDirection","search","cursor","keysEndpoint","conversationsRoot","conversations","updateConversation","presets","prompts","path","version","isAvatar","images","queryParams","URLSearchParams","toString","files","speech","textToSpeech","getPromptGroup","getPrompt","postPrompt","updatePromptGroup","deletePromptGroup","getRole","roleName","conversationTags","memories","memory","defaultSocialLogins","defaultRetrievalModels","excludedKeys","fileSourceSchema","fileStrategiesSchema","avatar","image","getSchemaDefaults","schema","shape","ZodDefault","_def","defaultValue","fromEntries","Capabilities","AgentCapabilities","modelConfigSchema","deploymentName","azureBaseSchema","apiKey","serverless","instanceName","addParams","dropParams","forcePrompt","baseURL","additionalHeaders","azureGroupSchema","group","models","and","azureGroupConfigsSchema","RateLimitPrefix","defaultAssistantsVersion","baseEndpointSchema","streamRate","titlePrompt","titleModel","titleConvo","titleMethod","titleEndpoint","titlePromptTemplate","bedrockEndpointSchema","availableRegions","assistantEndpointSchema","disableBuilder","pollIntervalMs","timeoutMs","supportedIds","excludedIds","privateAssistants","retrievalModels","capabilities","actions","fetch","userIdQuery","defaultAgentCapabilities","chain","agentsEndpointSchema","recursionLimit","maxRecursionLimit","maxCitations","maxCitationsPerFile","minRelevanceScore","allowedProviders","endpointSchema","safeParse","success","summarize","summaryModel","modelDisplayLabel","customParams","defaultParamsEndpoint","paramDefinitions","strict","customOrder","directEndpoint","titleMessageRole","azureEndpointSchema","groups","plugins","partial","ttsOpenaiSchema","voices","ttsAzureOpenAISchema","apiVersion","ttsElevenLabsSchema","websocketUrl","voice_settings","similarity_boost","stability","style","use_speaker_boost","pronunciation_dictionary_locators","ttsLocalaiSchema","backend","ttsSchema","elevenlabs","localai","sttOpenaiSchema","sttAzureOpenAISchema","sttSchema","speechTab","conversationMode","advancedMode","speechToText","engineSTT","languageSTT","autoTranscribeAudio","decibelValue","autoSendText","engineTTS","voice","languageTTS","automaticPlayback","playbackRate","cacheTTS","EImageOutputType","rateLimitSchema","fileUploads","ipMax","ipWindowInMinutes","userMax","userWindowInMinutes","conversationsImport","tts","OCRStrategy","SearchCategories","SearchProviders","ScraperTypes","RerankerTypes","SafeSearchTypes","termsOfServiceSchema","externalUrl","openNewTab","modalAcceptance","modalTitle","modalContent","mcpServersSchema","placeholder","interfaceSchema","privacyPolicy","termsOfService","customWelcome","mcpServers","endpointsMenu","modelSelect","sidePanel","multiConvo","modularChat","bookmarks","temporaryChat","temporaryChatRetention","editAgentMessages","runCode","webSearch","peoplePicker","users","roles","marketplace","use","fileSearch","fileCitations","turnstileOptionsSchema","language","size","turnstileSchema","siteKey","KnownEndpoints","FetchTokenConfig","webSearchSchema","serperApiKey","searxngInstanceUrl","searxngApiKey","firecrawlApiKey","firecrawlApiUrl","jinaApiKey","jinaApiUrl","cohereApiKey","searchProvider","scraperType","rerankerType","scraperTimeout","safeSearch","MODERATE","firecrawlOptions","formats","includeTags","excludeTags","waitFor","maxAge","mobile","skipTlsVerification","blockAds","removeBase64Images","parsePDF","storeInCache","zeroDataRetention","location","country","languages","onlyMainContent","changeTrackingOptions","modes","prompt","ocrSchema","mistralModel","strategy","MISTRAL_OCR","balanceSchema","startBalance","autoRefillEnabled","refillIntervalValue","refillIntervalUnit","refillAmount","transactionsSchema","memorySchema","validKeys","tokenLimit","charLimit","personalize","messageWindowSize","customEndpointsSchema","defaultModelSchema","describe","configSchema","cache","defaultModel","secureImageLinks","imageOutputType","PNG","includedTools","filteredTools","interface","turnstile","fileStrategy","local","fileStrategies","allowedDomains","registration","socialLogins","balance","transactions","rateLimits","modelSpecs","all","gptPlugins","data","getConfigDefaults","VisionModes","defaultEndpoints","chatGPTBrowser","alternateName","ollama","deepseek","xai","sharedOpenAIModels","bedrockModels","defaultModels","openAIModels","initialModelsConfig","initial","str","EndpointURLs","modularEndpoints","supportsBalanceCheck","visionModels","validateVisionModel","additionalModels","availableModels","visionModel","InfiniteCollections","Time","CacheKeys","ViolationTypes","ErrorTypes","AuthKeys","ImageDetailCost","SettingsTabValues","STTProviders","TTSProviders","Constants","LocalStorageKeys","ForkOptions","CohereConstants","SystemCategories","imageGenTools","ContentTypes","StepTypes","ToolCallTypes","providerEndpointMap","specialVariables","current_date","current_user","iso_datetime","current_datetime","bedrockInputSchema","s.tConversationSchema","_obj","budget_tokens","s.removeNullishValues","bedrockInputParser","catchall","knownKeys","additionalFields","typedData","anthropic_beta","bedrockOutputParser","updatedData","Math","floor","configureThinking","endpointSchemas","getEnabledEndpoints","endpointsEnv","ENDPOINTS","enabledEndpoints","orderEndpointsConfig","endpointsConfig","endpointKeys","defaultCustomIndex","indexOf","accumulatedConfig","currentEndpointKey","isCustom","errorsToString","errors","getFirstDefinedValue","possibleValues","returnValue","possibleValues_1","getNonEmptyValue","possibleValues_2","parseConvo","conversation","Error","convo","parse","secondaryModels","extractGPTVersion","modelStr","gptMatch","suffix","extractOmniVersion","omniMatch","getResponseSender","endpointOption","_mdl","_cgl","_ml","compactEndpointSchemas","parseCompactConvo","parseTextParts","contentParts","skipReasoning","contentParts_1","TEXT","textValue","THINK","think","SEPARATORS","findLastSeparatorIndex","separators","lastIndex","separators_1","separator","lastIndexOf","replaceSpecialVars","currentDate","dayjs","format","dayNumber","day","combinedDate","replace","currentDatetime","isoDatetime","ArtifactModes","deprecatedAzureVariables","conflictingAzureVariables","validateAzureGroups","configs","isValid","modelNames","modelGroupMap","groupMap","groupName","groupDeploymentName","groupVersion","modelDeploymentName","modelVersion","mapModelToAzureConfig","modelConfig","groupConfig","result_1","azureOptions","azureOpenAIApiVersion","azureOpenAIApiKey","apiKeyValue","modelDetails","azureOpenAIApiInstanceName","azureOpenAIApiDeploymentName","mapGroupToAzureConfig","firstModelName","buildTree","fileMap","messageMap","rootMessages","childrenCount","parentId","extendedMessage","children","depth","siblingIndex","file","file_id","parentMessage","ComponentTypes","SettingTypes","OptionTypes","utils","accordian","alertDialog","alert","badge","breadcrumb","button","calendar","card","carousel","checkbox","collapsible","dialog","drawer","dropdownMenu","hoverCard","menuBar","navigationMenu","pagination","popover","progress","radioGroup","select","skeleton","slider","switchComponent","table","tabs","textarea","toast","toaster","toggleGroup","toggle","tooltip","useToast","shadcnComponents","essentialShadcnComponents","loadOCRConfig","config","requiredSettingFields","generateDynamicSchema","settings","schemaFields","settings_1","setting","range","minText","maxText","minTags","maxTags","Number","Boolean","Enum","warn","ZodArray","ZodTypeToSettingType","ZodString","ZodNumber","ZodBoolean","validateSettingDefinitions","columnsSet","settings_2","columns","code","ZodIssueCode","add","next","settings_3","requiredSettingFields_1","settingTypes","component","Tags","Input","Textarea","Slider","includeInput","round","Checkbox","Switch","Dropdown","Combobox","columnSpan","optionType","Custom","conversationSchema","zodType","typeName","isNaN","enumMappings","option","ZodError","PermissionTypes","Permissions","generateOpenAISchema","customOpenAI","defaults","generateGoogleSchema","customGoogle","SystemRoles","promptPermissionsSchema","SHARED_GLOBAL","USE","CREATE","bookmarkPermissionsSchema","memoryPermissionsSchema","UPDATE","READ","OPT_OUT","agentPermissionsSchema","multiConvoPermissionsSchema","temporaryChatPermissionsSchema","runCodePermissionsSchema","webSearchPermissionsSchema","peoplePickerPermissionsSchema","VIEW_USERS","VIEW_GROUPS","VIEW_ROLES","marketplacePermissionsSchema","fileSearchPermissionsSchema","fileCitationsPermissionsSchema","permissionsSchema","PROMPTS","BOOKMARKS","MEMORIES","AGENTS","MULTI_CONVO","TEMPORARY_CHAT","RUN_CODE","WEB_SEARCH","PEOPLE_PICKER","MARKETPLACE","FILE_SEARCH","FILE_CITATIONS","DATE_RANGE","PrincipalType","PrincipalModel","ResourceType","PermissionBits","AccessRoleIds","roleSchema","permissions","roleDefaults","ADMIN","USER","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","_3","_4","_5","_6","QueryKeys","principalSchema","idOnTheSource","accessRoleId","memberCount","accessRoleSchema","resourceType","AGENT","permBits","permissionEntrySchema","principalType","principalId","principalName","role","grantedBy","grantedAt","inheritedFrom","resourcePermissionsResponseSchema","resourceId","updateResourcePermissionsRequestSchema","updated","removed","public","publicAccessRoleId","updateResourcePermissionsResponseSchema","results","principals","getResourcePermissionsResponseSchema","effectivePermissionsResponseSchema","permissionBits","permBitsToAccessLevel","DELETE","EDIT","VIEW","accessRoleToPermBits","AGENT_VIEWER","AGENT_EDITOR","AGENT_OWNER","hasPermissions","requiredPermission","MutationKeys","DynamicQueryKeys","agentFiles","agentId","setAcceptLanguageHeader","axios","common","setTokenHeader","token","_post","post","JSON","stringify","sent","isRefreshing","failedQueue","refreshToken","retry","endpoints.refreshToken","dispatchTokenUpdatedEvent","window","dispatchEvent","CustomEvent","detail","processQueue","prom","reject","resolve","interceptors","response","__awaiter","originalRequest","Promise","href","status","_retry","err_1","err_2","request","get","getResponse","postMultiPart","formData","postTTS","responseType","put","delete","deleteWithOptions","patch","groupId","payload","endpoints.addPromptToGroup","endpoints.addTagToConversation","endpoints.updateConversation","arg","toolId","toolParams","endpoints.agents","serverName","endpoints.cancelMCPOAuth","endpoints.assistants","endpoints.conversationTags","endpoints.memories","endpoints.presets","endpoints.postPrompt","endpoints.createSharedLink","action_id","endpoints.files","endpoints.memory","endpoints.deletePrompt","endpoints.deletePromptGroup","endpoints.shareMessages","endpoints.messagesArtifacts","endpoints.getAccessRoles","endpoints.agentFiles","s.isAssistantsEndpoint","config.defaultAssistantsVersion","Accept","endpoints.conversationById","endpoints.conversations","endpoints.apiBaseUrl","endpoints.getEffectivePermissions","userId","scopes","endpoints.mcpAuthValues","endpoints.mcpServerConnectionStatus","config.Constants","NEW_CONVO","PENDING_CONVO","endpoints.messages","endpoints.getPrompt","endpoints.getPromptGroup","cleanedFilter","endpoints.getPromptGroupsWithFilters","endpoints.getPromptsWithFilters","variables","skip","endpoints.getResourcePermissions","endpoints.getRole","endpoints.getSharedLink","endpoints.getSharedLinks","endpoints.mcpReinitialize","version_index","endpoints.revertAgentVersion","endpoints.revokeUserKey","q","types","endpoints.searchPrincipals","body","updates","endpoints.feedback","originalKey","preferences","endpoints.updatePromptGroup","endpoints.updateResourcePermissions","endpoints.updateSharedLink","endpoints.images","signal","requestConfig","endpoints.userKeyQuery","sha1","crypto","createHash","update","digest","createURL","domain","cleanDomain","cleanPath","fullURL","schemaTypeHandlers","stringSchema","minLength","maxLength","numberSchema","minimum","maximum","integer","int","items","zodSchema","openAPISchemaToZod","FunctionSignature","this","prototype","toObjectTool","additionalProperties","RequestConfig","basePath","method","operation","isConsequential","contentType","parameterLocations","RequestExecutor","authHeaders","setParams","operationHash","paramPattern","setAuth","metadata","auth","authorization_type","custom_auth_header","client_url","api_key","oauth_client_id","oauth_client_secret","oauth_token_expires_at","oauth_access_token","isApiKey","ServiceHttp","isOAuth","OAuth","Basic","basicToken","Buffer","from","Bearer","now","authToken","execute","_axios","create","bodyParams","loc","assign","getConfig","ActionRequest","defineProperty","createExecutor","executor","resolveRef","components","resolved","refPath_1","$ref","segment","sanitizeOperationId","openapiToFunction","openapiSpec","generateZodSchemas","functionSignatures","requestBuilders","zodSchemas","baseUrl","servers","paths","methods","paramLocations","operationObj","defaultOperationId","operationId","summary","isStrict","parametersSchema","resolvedParam","paramName","paramSchema","in","requestBody","resolvedSchema","apply","functionSignature","actionRequest","validateAndParseOpenAPISpec","specString","parsedSpec","load","schemas","httpMethod","responses","statusCode","refName","pop","createPayload","submission","isEdited","userMessage","isContinued","isTemporary","isRegenerate","editedContent","ephemeralAgent","s.tConvoUpdateSchema","server","s.EModelEndpoint","baseDefinitions","labelCode","selectPlaceholder","searchPlaceholder","searchPlaceholderCode","selectPlaceholderCode","descriptionCode","placeholderCode","createDefinition","base","overrides","librechat","showDefault","openAIParams","none","minimal","medium","concise","detailed","mistral","cohere","meta","googleConfig","googleCol1","googleCol2","openAICol1","openAICol2","anthropicConfig","anthropicCol1","anthropicCol2","bedrockAnthropic","bedrockMistral","bedrockCohere","bedrockGeneral","bedrockAnthropicCol1","bedrockAnthropicCol2","bedrockMistralCol1","bedrockMistralCol2","bedrockCohereCol1","bedrockCohereCol2","bedrockGeneralCol1","bedrockGeneralCol2","paramSettings","Anthropic","MistralAI","Cohere","Meta","AI21","Amazon","DeepSeek","openAIColumns","col1","col2","bedrockGeneralColumns","presetSettings","agentParamSettings"],"mappings":"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"}