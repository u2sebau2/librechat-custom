{"version":3,"file":"index.js","sources":["../src/utils/axios.ts","../src/utils/common.ts","../src/utils/azure.ts","../src/utils/email.ts","../src/utils/env.ts","../src/utils/events.ts","../src/utils/files.ts","../../../node_modules/tslib/tslib.es6.js","../src/utils/generators.ts","../src/utils/key.ts","../src/utils/llm.ts","../src/utils/math.ts","../src/utils/openid.ts","../src/utils/tempChatRetention.ts","../src/utils/text.ts","../src/utils/tokenizer.ts","../src/utils/yaml.ts","../src/utils/http.ts","../src/utils/tokens.ts","../src/app/config.ts","../src/memory/config.ts","../src/app/interface.ts","../src/app/permissions.ts","../src/auth/openid.ts","../../../node_modules/lodash/isArray.js","../../../node_modules/lodash/_freeGlobal.js","../../../node_modules/lodash/_root.js","../../../node_modules/lodash/_Symbol.js","../../../node_modules/lodash/_getRawTag.js","../../../node_modules/lodash/_objectToString.js","../../../node_modules/lodash/_baseGetTag.js","../../../node_modules/lodash/isObjectLike.js","../../../node_modules/lodash/isSymbol.js","../../../node_modules/lodash/_isKey.js","../../../node_modules/lodash/isObject.js","../../../node_modules/lodash/isFunction.js","../../../node_modules/lodash/_coreJsData.js","../../../node_modules/lodash/_isMasked.js","../../../node_modules/lodash/_toSource.js","../../../node_modules/lodash/_baseIsNative.js","../../../node_modules/lodash/_getValue.js","../../../node_modules/lodash/_getNative.js","../../../node_modules/lodash/_nativeCreate.js","../../../node_modules/lodash/_hashClear.js","../../../node_modules/lodash/_hashDelete.js","../../../node_modules/lodash/_hashGet.js","../../../node_modules/lodash/_hashHas.js","../../../node_modules/lodash/_hashSet.js","../../../node_modules/lodash/_Hash.js","../../../node_modules/lodash/_listCacheClear.js","../../../node_modules/lodash/eq.js","../../../node_modules/lodash/_assocIndexOf.js","../../../node_modules/lodash/_listCacheDelete.js","../../../node_modules/lodash/_listCacheGet.js","../../../node_modules/lodash/_listCacheHas.js","../../../node_modules/lodash/_listCacheSet.js","../../../node_modules/lodash/_ListCache.js","../../../node_modules/lodash/_Map.js","../../../node_modules/lodash/_mapCacheClear.js","../../../node_modules/lodash/_isKeyable.js","../../../node_modules/lodash/_getMapData.js","../../../node_modules/lodash/_mapCacheDelete.js","../../../node_modules/lodash/_mapCacheGet.js","../../../node_modules/lodash/_mapCacheHas.js","../../../node_modules/lodash/_mapCacheSet.js","../../../node_modules/lodash/_MapCache.js","../../../node_modules/lodash/memoize.js","../../../node_modules/lodash/_memoizeCapped.js","../../../node_modules/lodash/_stringToPath.js","../../../node_modules/lodash/_arrayMap.js","../../../node_modules/lodash/_baseToString.js","../../../node_modules/lodash/toString.js","../../../node_modules/lodash/_castPath.js","../../../node_modules/lodash/_toKey.js","../../../node_modules/lodash/_baseGet.js","../../../node_modules/lodash/_defineProperty.js","../../../node_modules/lodash/_baseAssignValue.js","../../../node_modules/lodash/_assignValue.js","../../../node_modules/lodash/_isIndex.js","../../../node_modules/lodash/_baseSet.js","../../../node_modules/lodash/_basePickBy.js","../../../node_modules/lodash/_baseHasIn.js","../../../node_modules/lodash/_baseIsArguments.js","../../../node_modules/lodash/isArguments.js","../../../node_modules/lodash/isLength.js","../../../node_modules/lodash/_hasPath.js","../../../node_modules/lodash/hasIn.js","../../../node_modules/lodash/_basePick.js","../../../node_modules/lodash/_arrayPush.js","../../../node_modules/lodash/_isFlattenable.js","../../../node_modules/lodash/_baseFlatten.js","../../../node_modules/lodash/flatten.js","../../../node_modules/lodash/_apply.js","../../../node_modules/lodash/_overRest.js","../../../node_modules/lodash/constant.js","../../../node_modules/lodash/identity.js","../../../node_modules/lodash/_baseSetToString.js","../../../node_modules/lodash/_shortOut.js","../../../node_modules/lodash/_setToString.js","../../../node_modules/lodash/_flatRest.js","../../../node_modules/lodash/pick.js","../src/mcp/oauth/handler.ts","../../../node_modules/dotenv/lib/main.js","../../../node_modules/dotenv/lib/env-options.js","../../../node_modules/dotenv/lib/cli-options.js","../../../node_modules/dotenv/config.js","../src/crypto/encryption.ts","../src/crypto/jwt.ts","../src/mcp/enum.ts","../src/mcp/oauth/tokens.ts","../src/mcp/mcpConfig.ts","../src/mcp/oauth/detectOAuth.ts","../src/mcp/connection.ts","../src/mcp/MCPConnectionFactory.ts","../../../node_modules/lodash/_stackClear.js","../../../node_modules/lodash/_stackDelete.js","../../../node_modules/lodash/_stackGet.js","../../../node_modules/lodash/_stackHas.js","../../../node_modules/lodash/_stackSet.js","../../../node_modules/lodash/_Stack.js","../../../node_modules/lodash/_setCacheAdd.js","../../../node_modules/lodash/_setCacheHas.js","../../../node_modules/lodash/_SetCache.js","../../../node_modules/lodash/_arraySome.js","../../../node_modules/lodash/_cacheHas.js","../../../node_modules/lodash/_equalArrays.js","../../../node_modules/lodash/_Uint8Array.js","../../../node_modules/lodash/_mapToArray.js","../../../node_modules/lodash/_setToArray.js","../../../node_modules/lodash/_equalByTag.js","../../../node_modules/lodash/_baseGetAllKeys.js","../../../node_modules/lodash/_arrayFilter.js","../../../node_modules/lodash/stubArray.js","../../../node_modules/lodash/_getSymbols.js","../../../node_modules/lodash/_baseTimes.js","../../../node_modules/lodash/stubFalse.js","../../../node_modules/lodash/isBuffer.js","../../../node_modules/lodash/_baseIsTypedArray.js","../../../node_modules/lodash/_baseUnary.js","../../../node_modules/lodash/_nodeUtil.js","../../../node_modules/lodash/isTypedArray.js","../../../node_modules/lodash/_arrayLikeKeys.js","../../../node_modules/lodash/_isPrototype.js","../../../node_modules/lodash/_overArg.js","../../../node_modules/lodash/_nativeKeys.js","../../../node_modules/lodash/_baseKeys.js","../../../node_modules/lodash/isArrayLike.js","../../../node_modules/lodash/keys.js","../../../node_modules/lodash/_getAllKeys.js","../../../node_modules/lodash/_equalObjects.js","../../../node_modules/lodash/_DataView.js","../../../node_modules/lodash/_Promise.js","../../../node_modules/lodash/_Set.js","../../../node_modules/lodash/_WeakMap.js","../../../node_modules/lodash/_getTag.js","../../../node_modules/lodash/_baseIsEqualDeep.js","../../../node_modules/lodash/_baseIsEqual.js","../../../node_modules/lodash/_baseIsMatch.js","../../../node_modules/lodash/_isStrictComparable.js","../../../node_modules/lodash/_getMatchData.js","../../../node_modules/lodash/_matchesStrictComparable.js","../../../node_modules/lodash/_baseMatches.js","../../../node_modules/lodash/get.js","../../../node_modules/lodash/_baseMatchesProperty.js","../../../node_modules/lodash/_baseProperty.js","../../../node_modules/lodash/_basePropertyDeep.js","../../../node_modules/lodash/property.js","../../../node_modules/lodash/_baseIteratee.js","../../../node_modules/lodash/_getPrototype.js","../../../node_modules/lodash/_getSymbolsIn.js","../../../node_modules/lodash/_nativeKeysIn.js","../../../node_modules/lodash/_baseKeysIn.js","../../../node_modules/lodash/keysIn.js","../../../node_modules/lodash/_getAllKeysIn.js","../../../node_modules/lodash/pickBy.js","../../../node_modules/lodash/_createBaseFor.js","../../../node_modules/lodash/_baseFor.js","../../../node_modules/lodash/_baseForOwn.js","../../../node_modules/lodash/mapValues.js","../src/mcp/ConnectionsRepository.ts","../src/mcp/MCPServersRegistry.ts","../src/mcp/UserConnectionManager.ts","../src/mcp/parsers.ts","../src/mcp/MCPManager.ts","../src/agents/auth.ts","../src/mcp/auth.ts","../src/mcp/zod.ts","../src/format/content.ts","../src/mcp/utils.ts","../src/db/utils.ts","../src/oauth/tokens.ts","../src/flow/manager.ts","../src/middleware/access.ts","../src/middleware/error.ts","../src/middleware/balance.ts","../src/agents/config.ts","../src/agents/memory.ts","../src/agents/migration.ts","../src/agents/resources.ts","../src/agents/run.ts","../src/agents/validation.ts","../src/prompts/format.ts","../src/prompts/migration.ts","../src/endpoints/custom/config.ts","../src/endpoints/google/llm.ts","../src/endpoints/openai/llm.ts","../src/endpoints/anthropic/helpers.ts","../src/endpoints/anthropic/llm.ts","../src/endpoints/openai/transform.ts","../src/endpoints/openai/config.ts","../src/endpoints/openai/initialize.ts","../src/files/mistral/crud.ts","../src/files/audio.ts","../src/files/text.ts","../src/files/parse.ts","../src/tools/format.ts","../src/tools/toolkits/oai.ts","../src/tools/toolkits/yt.ts","../src/web/web.ts"],"sourcesContent":["import axios from 'axios';\nimport { logger } from '@librechat/data-schemas';\nimport type { AxiosInstance, AxiosProxyConfig, AxiosError } from 'axios';\n\n/**\n * Logs Axios errors based on the error object and a custom message.\n * @param options - The options object.\n * @param options.message - The custom message to be logged.\n * @param options.error - The Axios error object.\n * @returns The log message.\n */\nexport const logAxiosError = ({ message, error }: { message: string; error: AxiosError }) => {\n  let logMessage = message;\n  try {\n    const stack = error.stack || 'No stack trace available';\n\n    if (error.response?.status) {\n      const { status, headers, data } = error.response;\n      logMessage = `${message} The server responded with status ${status}: ${error.message}`;\n      logger.error(logMessage, {\n        status,\n        headers,\n        data,\n        stack,\n      });\n    } else if (error.request) {\n      const { method, url } = error.config || {};\n      logMessage = `${message} No response received for ${method ? method.toUpperCase() : ''} ${url || ''}: ${error.message}`;\n      logger.error(logMessage, {\n        requestInfo: { method, url },\n        stack,\n      });\n    } else if (error?.message?.includes(\"Cannot read properties of undefined (reading 'status')\")) {\n      logMessage = `${message} It appears the request timed out or was unsuccessful: ${error.message}`;\n      logger.error(logMessage, { stack });\n    } else {\n      logMessage = `${message} An error occurred while setting up the request: ${error.message}`;\n      logger.error(logMessage, { stack });\n    }\n  } catch (err: unknown) {\n    logMessage = `Error in logAxiosError: ${(err as Error).message}`;\n    logger.error(logMessage, { stack: (err as Error).stack || 'No stack trace available' });\n  }\n  return logMessage;\n};\n\n/**\n * Creates and configures an Axios instance with optional proxy settings.\n\n * @returns A configured Axios instance\n * @throws If there's an issue creating the Axios instance or parsing the proxy URL\n */\nexport function createAxiosInstance(): AxiosInstance {\n  const instance = axios.create();\n\n  if (process.env.proxy) {\n    try {\n      const url = new URL(process.env.proxy);\n\n      const proxyConfig: Partial<AxiosProxyConfig> = {\n        host: url.hostname.replace(/^\\[|\\]$/g, ''),\n        protocol: url.protocol.replace(':', ''),\n      };\n\n      if (url.port) {\n        proxyConfig.port = parseInt(url.port, 10);\n      }\n\n      instance.defaults.proxy = proxyConfig as AxiosProxyConfig;\n    } catch (error) {\n      console.error('Error parsing proxy URL:', error);\n      throw new Error(`Invalid proxy URL: ${process.env.proxy}`);\n    }\n  }\n\n  return instance;\n}\n","import { Providers } from '@librechat/agents';\nimport { AuthType } from 'librechat-data-provider';\n\n/**\n * Checks if the given value is truthy by being either the boolean `true` or a string\n * that case-insensitively matches 'true'.\n *\n * @param value - The value to check.\n * @returns Returns `true` if the value is the boolean `true` or a case-insensitive\n *                    match for the string 'true', otherwise returns `false`.\n * @example\n *\n * isEnabled(\"True\");  // returns true\n * isEnabled(\"TRUE\");  // returns true\n * isEnabled(true);    // returns true\n * isEnabled(\"false\"); // returns false\n * isEnabled(false);   // returns false\n * isEnabled(null);    // returns false\n * isEnabled();        // returns false\n */\nexport function isEnabled(value?: string | boolean | null | undefined): boolean {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n  if (typeof value === 'string') {\n    return value.toLowerCase().trim() === 'true';\n  }\n  return false;\n}\n\n/**\n * Checks if the provided value is 'user_provided'.\n *\n * @param value - The value to check.\n * @returns - Returns true if the value is 'user_provided', otherwise false.\n */\nexport const isUserProvided = (value?: string): boolean => value === AuthType.USER_PROVIDED;\n\n/**\n * @param values\n */\nexport function optionalChainWithEmptyCheck(\n  ...values: (string | number | undefined)[]\n): string | number | undefined {\n  for (const value of values) {\n    if (value !== undefined && value !== null && value !== '') {\n      return value;\n    }\n  }\n  return values[values.length - 1];\n}\n\n/**\n * Normalize the endpoint name to system-expected value.\n * @param name\n */\nexport function normalizeEndpointName(name = ''): string {\n  return name.toLowerCase() === Providers.OLLAMA ? Providers.OLLAMA : name;\n}\n","import { isEnabled } from './common';\nimport type { AzureOptions, GenericClient } from '~/types';\n\n/**\n * Sanitizes the model name to be used in the URL by removing or replacing disallowed characters.\n * @param modelName - The model name to be sanitized.\n * @returns The sanitized model name.\n */\nexport const sanitizeModelName = (modelName: string): string => {\n  // Replace periods with empty strings and other disallowed characters as needed.\n  return modelName.replace(/\\./g, '');\n};\n\n/**\n * Generates the Azure OpenAI API endpoint URL.\n * @param params - The parameters object.\n * @param params.azureOpenAIApiInstanceName - The Azure OpenAI API instance name.\n * @param params.azureOpenAIApiDeploymentName - The Azure OpenAI API deployment name.\n * @returns The complete endpoint URL for the Azure OpenAI API.\n */\nexport const genAzureEndpoint = ({\n  azureOpenAIApiInstanceName,\n  azureOpenAIApiDeploymentName,\n}: {\n  azureOpenAIApiInstanceName: string;\n  azureOpenAIApiDeploymentName: string;\n}): string => {\n  return `https://${azureOpenAIApiInstanceName}.openai.azure.com/openai/deployments/${azureOpenAIApiDeploymentName}`;\n};\n\n/**\n * Generates the Azure OpenAI API chat completion endpoint URL with the API version.\n * If both deploymentName and modelName are provided, modelName takes precedence.\n * @param azureConfig - The Azure configuration object.\n * @param azureConfig.azureOpenAIApiInstanceName - The Azure OpenAI API instance name.\n * @param azureConfig.azureOpenAIApiDeploymentName - The Azure OpenAI API deployment name (optional).\n * @param azureConfig.azureOpenAIApiVersion - The Azure OpenAI API version.\n * @param modelName - The model name to be included in the deployment name (optional).\n * @param client - The API Client class for optionally setting properties (optional).\n * @returns The complete chat completion endpoint URL for the Azure OpenAI API.\n * @throws Error if neither azureOpenAIApiDeploymentName nor modelName is provided.\n */\nexport const genAzureChatCompletion = (\n  {\n    azureOpenAIApiInstanceName,\n    azureOpenAIApiDeploymentName,\n    azureOpenAIApiVersion,\n  }: {\n    azureOpenAIApiInstanceName: string;\n    azureOpenAIApiDeploymentName?: string;\n    azureOpenAIApiVersion: string;\n  },\n  modelName?: string,\n  client?: GenericClient,\n): string => {\n  // Determine the deployment segment of the URL based on provided modelName or azureOpenAIApiDeploymentName\n  let deploymentSegment: string;\n  if (isEnabled(process.env.AZURE_USE_MODEL_AS_DEPLOYMENT_NAME) && modelName) {\n    const sanitizedModelName = sanitizeModelName(modelName);\n    deploymentSegment = sanitizedModelName;\n    if (client && typeof client === 'object') {\n      client.azure.azureOpenAIApiDeploymentName = sanitizedModelName;\n    }\n  } else if (azureOpenAIApiDeploymentName) {\n    deploymentSegment = azureOpenAIApiDeploymentName;\n  } else if (!process.env.AZURE_OPENAI_BASEURL) {\n    throw new Error(\n      'Either a model name with the `AZURE_USE_MODEL_AS_DEPLOYMENT_NAME` setting or a deployment name must be provided if `AZURE_OPENAI_BASEURL` is omitted.',\n    );\n  } else {\n    deploymentSegment = '';\n  }\n\n  return `https://${azureOpenAIApiInstanceName}.openai.azure.com/openai/deployments/${deploymentSegment}/chat/completions?api-version=${azureOpenAIApiVersion}`;\n};\n\n/**\n * Retrieves the Azure OpenAI API credentials from environment variables.\n * @returns An object containing the Azure OpenAI API credentials.\n */\nexport const getAzureCredentials = (): AzureOptions => {\n  return {\n    azureOpenAIApiKey: process.env.AZURE_API_KEY ?? process.env.AZURE_OPENAI_API_KEY,\n    azureOpenAIApiInstanceName: process.env.AZURE_OPENAI_API_INSTANCE_NAME,\n    azureOpenAIApiDeploymentName: process.env.AZURE_OPENAI_API_DEPLOYMENT_NAME,\n    azureOpenAIApiVersion: process.env.AZURE_OPENAI_API_VERSION,\n  };\n};\n\n/**\n * Constructs a URL by replacing placeholders in the baseURL with values from the azure object.\n * It specifically looks for '${INSTANCE_NAME}' and '${DEPLOYMENT_NAME}' within the baseURL and replaces\n * them with 'azureOpenAIApiInstanceName' and 'azureOpenAIApiDeploymentName' from the azure object.\n * If the respective azure property is not provided, the placeholder is replaced with an empty string.\n *\n * @param params - The parameters object.\n * @param params.baseURL - The baseURL to inspect for replacement placeholders.\n * @param params.azureOptions - The azure options object containing the instance and deployment names.\n * @returns The complete baseURL with credentials injected for the Azure OpenAI API.\n */\nexport function constructAzureURL({\n  baseURL,\n  azureOptions,\n}: {\n  baseURL: string;\n  azureOptions?: AzureOptions;\n}): string {\n  let finalURL = baseURL;\n\n  // Replace INSTANCE_NAME and DEPLOYMENT_NAME placeholders with actual values if available\n  if (azureOptions) {\n    finalURL = finalURL.replace('${INSTANCE_NAME}', azureOptions.azureOpenAIApiInstanceName ?? '');\n    finalURL = finalURL.replace(\n      '${DEPLOYMENT_NAME}',\n      azureOptions.azureOpenAIApiDeploymentName ?? '',\n    );\n  }\n\n  return finalURL;\n}\n","/**\n * Check if email configuration is set\n * @returns Returns `true` if either Mailgun or SMTP is properly configured\n */\nexport function checkEmailConfig(): boolean {\n  const hasMailgunConfig =\n    !!process.env.MAILGUN_API_KEY && !!process.env.MAILGUN_DOMAIN && !!process.env.EMAIL_FROM;\n\n  const hasSMTPConfig =\n    (!!process.env.EMAIL_SERVICE || !!process.env.EMAIL_HOST) &&\n    !!process.env.EMAIL_USERNAME &&\n    !!process.env.EMAIL_PASSWORD &&\n    !!process.env.EMAIL_FROM;\n\n  return hasMailgunConfig || hasSMTPConfig;\n}\n","import { extractEnvVariable } from 'librechat-data-provider';\nimport type { TUser, MCPOptions } from 'librechat-data-provider';\nimport type { RequestBody } from '~/types';\n\n/**\n * List of allowed user fields that can be used in MCP environment variables.\n * These are non-sensitive string/boolean fields from the IUser interface.\n */\nconst ALLOWED_USER_FIELDS = [\n  'id',\n  'name',\n  'username',\n  'email',\n  'provider',\n  'role',\n  'googleId',\n  'facebookId',\n  'openidId',\n  'samlId',\n  'ldapId',\n  'githubId',\n  'discordId',\n  'appleId',\n  'emailVerified',\n  'twoFactorEnabled',\n  'termsAccepted',\n] as const;\n\n/**\n * List of allowed request body fields that can be used in header placeholders.\n * These are common fields from the request body that are safe to expose in headers.\n */\nconst ALLOWED_BODY_FIELDS = ['conversationId', 'parentMessageId', 'messageId'] as const;\n\n/**\n * Processes a string value to replace user field placeholders\n * @param value - The string value to process\n * @param user - The user object\n * @returns The processed string with placeholders replaced\n */\nfunction processUserPlaceholders(value: string, user?: TUser): string {\n  if (!user || typeof value !== 'string') {\n    return value;\n  }\n\n  for (const field of ALLOWED_USER_FIELDS) {\n    const placeholder = `{{LIBRECHAT_USER_${field.toUpperCase()}}}`;\n    if (!value.includes(placeholder)) {\n      continue;\n    }\n\n    const fieldValue = user[field as keyof TUser];\n\n    // Skip replacement if field doesn't exist in user object\n    if (!(field in user)) {\n      continue;\n    }\n\n    // Special case for 'id' field: skip if undefined or empty\n    if (field === 'id' && (fieldValue === undefined || fieldValue === '')) {\n      continue;\n    }\n\n    const replacementValue = fieldValue == null ? '' : String(fieldValue);\n    value = value.replace(new RegExp(placeholder, 'g'), replacementValue);\n  }\n\n  return value;\n}\n\n/**\n * Replaces request body field placeholders within a string.\n * Recognized placeholders: `{{LIBRECHAT_BODY_<FIELD>}}` where `<FIELD>` ∈ ALLOWED_BODY_FIELDS.\n * If a body field is absent or null/undefined, it is replaced with an empty string.\n *\n * @param value - The string value to process\n * @param body - The request body object\n * @returns The processed string with placeholders replaced\n */\nfunction processBodyPlaceholders(value: string, body: RequestBody): string {\n  for (const field of ALLOWED_BODY_FIELDS) {\n    const placeholder = `{{LIBRECHAT_BODY_${field.toUpperCase()}}}`;\n    if (!value.includes(placeholder)) {\n      continue;\n    }\n\n    const fieldValue = body[field];\n    const replacementValue = fieldValue == null ? '' : String(fieldValue);\n    value = value.replace(new RegExp(placeholder, 'g'), replacementValue);\n  }\n\n  return value;\n}\n\n/**\n * Processes a single string value by replacing various types of placeholders\n * @param originalValue - The original string value to process\n * @param customUserVars - Optional custom user variables to replace placeholders\n * @param user - Optional user object for replacing user field placeholders\n * @param body - Optional request body object for replacing body field placeholders\n * @returns The processed string with all placeholders replaced\n */\nfunction processSingleValue({\n  originalValue,\n  customUserVars,\n  user,\n  body = undefined,\n}: {\n  originalValue: string;\n  customUserVars?: Record<string, string>;\n  user?: TUser;\n  body?: RequestBody;\n}): string {\n  let value = originalValue;\n\n  // 1. Replace custom user variables\n  if (customUserVars) {\n    for (const [varName, varVal] of Object.entries(customUserVars)) {\n      /** Escaped varName for use in regex to avoid issues with special characters */\n      const escapedVarName = varName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      const placeholderRegex = new RegExp(`\\\\{\\\\{${escapedVarName}\\\\}\\\\}`, 'g');\n      value = value.replace(placeholderRegex, varVal);\n    }\n  }\n\n  // 2. Replace user field placeholders (e.g., {{LIBRECHAT_USER_EMAIL}}, {{LIBRECHAT_USER_ID}})\n  value = processUserPlaceholders(value, user);\n\n  // 3. Replace body field placeholders (e.g., {{LIBRECHAT_BODY_CONVERSATIONID}}, {{LIBRECHAT_BODY_PARENTMESSAGEID}})\n  if (body) {\n    value = processBodyPlaceholders(value, body);\n  }\n\n  // 4. Replace system environment variables\n  value = extractEnvVariable(value);\n\n  return value;\n}\n\n/**\n * Recursively processes an object to replace environment variables in string values\n * @param params - Processing parameters\n * @param params.options - The MCP options to process\n * @param params.user - The user object containing all user fields\n * @param params.customUserVars - vars that user set in settings\n * @param params.body - the body of the request that is being processed\n * @returns - The processed object with environment variables replaced\n */\nexport function processMCPEnv(params: {\n  options: Readonly<MCPOptions>;\n  user?: TUser;\n  customUserVars?: Record<string, string>;\n  body?: RequestBody;\n}): MCPOptions {\n  const { options, user, customUserVars, body } = params;\n\n  if (options === null || options === undefined) {\n    return options;\n  }\n\n  const newObj: MCPOptions = structuredClone(options);\n\n  if ('env' in newObj && newObj.env) {\n    const processedEnv: Record<string, string> = {};\n    for (const [key, originalValue] of Object.entries(newObj.env)) {\n      processedEnv[key] = processSingleValue({ originalValue, customUserVars, user, body });\n    }\n    newObj.env = processedEnv;\n  }\n\n  if ('args' in newObj && newObj.args) {\n    const processedArgs: string[] = [];\n    for (const originalValue of newObj.args) {\n      processedArgs.push(processSingleValue({ originalValue, customUserVars, user, body }));\n    }\n    newObj.args = processedArgs;\n  }\n\n  // Process headers if they exist (for WebSocket, SSE, StreamableHTTP types)\n  // Note: `env` and `headers` are on different branches of the MCPOptions union type.\n  if ('headers' in newObj && newObj.headers) {\n    const processedHeaders: Record<string, string> = {};\n    for (const [key, originalValue] of Object.entries(newObj.headers)) {\n      processedHeaders[key] = processSingleValue({ originalValue, customUserVars, user, body });\n    }\n    newObj.headers = processedHeaders;\n  }\n\n  // Process URL if it exists (for WebSocket, SSE, StreamableHTTP types)\n  if ('url' in newObj && newObj.url) {\n    newObj.url = processSingleValue({ originalValue: newObj.url, customUserVars, user, body });\n  }\n\n  // Process OAuth configuration if it exists (for all transport types)\n  if ('oauth' in newObj && newObj.oauth) {\n    const processedOAuth: Record<string, string | string[] | undefined> = {};\n    for (const [key, originalValue] of Object.entries(newObj.oauth)) {\n      // Only process string values for environment variables\n      // token_exchange_method is an enum and shouldn't be processed\n      if (typeof originalValue === 'string') {\n        processedOAuth[key] = processSingleValue({ originalValue, customUserVars, user, body });\n      } else {\n        processedOAuth[key] = originalValue;\n      }\n    }\n    newObj.oauth = processedOAuth;\n  }\n\n  return newObj;\n}\n\n/**\n * Resolves header values by replacing user placeholders, body variables, custom variables, and environment variables.\n *\n * @param options - Optional configuration object.\n * @param options.headers - The headers object to process.\n * @param options.user - Optional user object for replacing user field placeholders (can be partial with just id).\n * @param options.body - Optional request body object for replacing body field placeholders.\n * @param options.customUserVars - Optional custom user variables to replace placeholders.\n * @returns The processed headers with all placeholders replaced.\n */\nexport function resolveHeaders(options?: {\n  headers: Record<string, string> | undefined;\n  user?: Partial<TUser> | { id: string };\n  body?: RequestBody;\n  customUserVars?: Record<string, string>;\n}) {\n  const { headers, user, body, customUserVars } = options ?? {};\n  const inputHeaders = headers ?? {};\n\n  const resolvedHeaders: Record<string, string> = { ...inputHeaders };\n\n  if (inputHeaders && typeof inputHeaders === 'object' && !Array.isArray(inputHeaders)) {\n    Object.keys(inputHeaders).forEach((key) => {\n      resolvedHeaders[key] = processSingleValue({\n        originalValue: inputHeaders[key],\n        customUserVars,\n        user: user as TUser,\n        body,\n      });\n    });\n  }\n\n  return resolvedHeaders;\n}\n","import type { Response as ServerResponse } from 'express';\nimport type { ServerSentEvent } from '~/types';\n\n/**\n * Sends message data in Server Sent Events format.\n * @param res - The server response.\n * @param event - The message event.\n * @param event.event - The type of event.\n * @param event.data - The message to be sent.\n */\nexport function sendEvent(res: ServerResponse, event: ServerSentEvent): void {\n  if (typeof event.data === 'string' && event.data.length === 0) {\n    return;\n  }\n  res.write(`event: message\\ndata: ${JSON.stringify(event)}\\n\\n`);\n}\n\n/**\n * Sends error data in Server Sent Events format and ends the response.\n * @param res - The server response.\n * @param message - The error message.\n */\nexport function handleError(res: ServerResponse, message: string): void {\n  res.write(`event: error\\ndata: ${JSON.stringify(message)}\\n\\n`);\n  res.end();\n}\n","import path from 'path';\nimport crypto from 'node:crypto';\n\n/**\n * Sanitize a filename by removing any directory components, replacing non-alphanumeric characters\n * @param inputName\n */\nexport function sanitizeFilename(inputName: string): string {\n  // Remove any directory components\n  let name = path.basename(inputName);\n\n  // Replace any non-alphanumeric characters except for '.' and '-'\n  name = name.replace(/[^a-zA-Z0-9.-]/g, '_');\n\n  // Ensure the name doesn't start with a dot (hidden file in Unix-like systems)\n  if (name.startsWith('.') || name === '') {\n    name = '_' + name;\n  }\n\n  // Limit the length of the filename\n  const MAX_LENGTH = 255;\n  if (name.length > MAX_LENGTH) {\n    const ext = path.extname(name);\n    const nameWithoutExt = path.basename(name, ext);\n    name =\n      nameWithoutExt.slice(0, MAX_LENGTH - ext.length - 7) +\n      '-' +\n      crypto.randomBytes(3).toString('hex') +\n      ext;\n  }\n\n  return name;\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","import fetch from 'node-fetch';\nimport { logger } from '@librechat/data-schemas';\nimport { GraphEvents, sleep } from '@librechat/agents';\nimport type { Response as ServerResponse } from 'express';\nimport type { ServerSentEvent } from '~/types';\nimport { sendEvent } from './events';\n\n/**\n * Makes a function to make HTTP request and logs the process.\n * @param params\n * @param params.directEndpoint - Whether to use a direct endpoint.\n * @param params.reverseProxyUrl - The reverse proxy URL to use for the request.\n * @returns A promise that resolves to the response of the fetch request.\n */\nexport function createFetch({\n  directEndpoint = false,\n  reverseProxyUrl = '',\n}: {\n  directEndpoint?: boolean;\n  reverseProxyUrl?: string;\n}) {\n  /**\n   * Makes an HTTP request and logs the process.\n   * @param url - The URL to make the request to. Can be a string or a Request object.\n   * @param init - Optional init options for the request.\n   * @returns A promise that resolves to the response of the fetch request.\n   */\n  return async function (\n    _url: fetch.RequestInfo,\n    init: fetch.RequestInit,\n  ): Promise<fetch.Response> {\n    let url = _url;\n    if (directEndpoint) {\n      url = reverseProxyUrl;\n    }\n    logger.debug(`Making request to ${url}`);\n    if (typeof Bun !== 'undefined') {\n      return await fetch(url, init);\n    }\n    return await fetch(url, init);\n  };\n}\n\n/**\n * Creates event handlers for stream events that don't capture client references\n * @param res - The response object to send events to\n * @returns Object containing handler functions\n */\nexport function createStreamEventHandlers(res: ServerResponse) {\n  return {\n    [GraphEvents.ON_RUN_STEP]: function (event: ServerSentEvent) {\n      if (res) {\n        sendEvent(res, event);\n      }\n    },\n    [GraphEvents.ON_MESSAGE_DELTA]: function (event: ServerSentEvent) {\n      if (res) {\n        sendEvent(res, event);\n      }\n    },\n    [GraphEvents.ON_REASONING_DELTA]: function (event: ServerSentEvent) {\n      if (res) {\n        sendEvent(res, event);\n      }\n    },\n  };\n}\n\nexport function createHandleLLMNewToken(streamRate: number) {\n  return async function () {\n    if (streamRate) {\n      await sleep(streamRate);\n    }\n  };\n}\n","import fs from 'fs';\nimport path from 'path';\nimport axios from 'axios';\nimport { logger } from '@librechat/data-schemas';\n\nexport interface GoogleServiceKey {\n  type?: string;\n  project_id?: string;\n  private_key_id?: string;\n  private_key?: string;\n  client_email?: string;\n  client_id?: string;\n  auth_uri?: string;\n  token_uri?: string;\n  auth_provider_x509_cert_url?: string;\n  client_x509_cert_url?: string;\n  [key: string]: unknown;\n}\n\n/**\n * Load Google service key from file path, URL, or stringified JSON\n * @param keyPath - The path to the service key file, URL to fetch it from, or stringified JSON\n * @returns The parsed service key object or null if failed\n */\nexport async function loadServiceKey(keyPath: string): Promise<GoogleServiceKey | null> {\n  if (!keyPath) {\n    return null;\n  }\n\n  let serviceKey: unknown;\n\n  // Check if it's base64 encoded (common pattern for storing in env vars)\n  if (keyPath.trim().match(/^[A-Za-z0-9+/]+=*$/)) {\n    try {\n      const decoded = Buffer.from(keyPath.trim(), 'base64').toString('utf-8');\n      // Try to parse the decoded string as JSON\n      serviceKey = JSON.parse(decoded);\n    } catch {\n      // Not base64 or not valid JSON after decoding, continue with other methods\n      // Silent failure - not critical\n    }\n  }\n\n  // Check if it's a stringified JSON (starts with '{')\n  if (!serviceKey && keyPath.trim().startsWith('{')) {\n    try {\n      serviceKey = JSON.parse(keyPath);\n    } catch (error) {\n      logger.error('Failed to parse service key from stringified JSON', error);\n      return null;\n    }\n  }\n  // Check if it's a URL\n  else if (!serviceKey && /^https?:\\/\\//.test(keyPath)) {\n    try {\n      const response = await axios.get(keyPath);\n      serviceKey = response.data;\n    } catch (error) {\n      logger.error(`Failed to fetch the service key from URL: ${keyPath}`, error);\n      return null;\n    }\n  } else if (!serviceKey) {\n    // It's a file path\n    try {\n      const absolutePath = path.isAbsolute(keyPath) ? keyPath : path.resolve(keyPath);\n      const fileContent = fs.readFileSync(absolutePath, 'utf8');\n      serviceKey = JSON.parse(fileContent);\n    } catch (error) {\n      logger.error(`Failed to load service key from file: ${keyPath}`, error);\n      return null;\n    }\n  }\n\n  // If the response is a string (e.g., from a URL that returns JSON as text), parse it\n  if (typeof serviceKey === 'string') {\n    try {\n      serviceKey = JSON.parse(serviceKey);\n    } catch (parseError) {\n      logger.error(`Failed to parse service key JSON from ${keyPath}`, parseError);\n      return null;\n    }\n  }\n\n  // Validate the service key has required fields\n  if (!serviceKey || typeof serviceKey !== 'object') {\n    logger.error(`Invalid service key format from ${keyPath}`);\n    return null;\n  }\n\n  // Fix private key formatting if needed\n  const key = serviceKey as GoogleServiceKey;\n  if (key.private_key && typeof key.private_key === 'string') {\n    // Replace escaped newlines with actual newlines\n    // When JSON.parse processes \"\\\\n\", it becomes \"\\n\" (single backslash + n)\n    // When JSON.parse processes \"\\n\", it becomes an actual newline character\n    key.private_key = key.private_key.replace(/\\\\n/g, '\\n');\n\n    // Also handle the String.raw`\\n` case mentioned in Stack Overflow\n    key.private_key = key.private_key.split(String.raw`\\n`).join('\\n');\n\n    // Ensure proper PEM format\n    if (!key.private_key.includes('\\n')) {\n      // If no newlines are present, try to format it properly\n      const privateKeyMatch = key.private_key.match(\n        /^(-----BEGIN [A-Z ]+-----)(.*)(-----END [A-Z ]+-----)$/,\n      );\n      if (privateKeyMatch) {\n        const [, header, body, footer] = privateKeyMatch;\n        // Add newlines after header and before footer\n        key.private_key = `${header}\\n${body}\\n${footer}`;\n      }\n    }\n  }\n\n  return key;\n}\n","import { librechat } from 'librechat-data-provider';\nimport type { DynamicSettingProps } from 'librechat-data-provider';\n\ntype LibreChatKeys = keyof typeof librechat;\n\ntype LibreChatParams = {\n  modelOptions: Omit<NonNullable<DynamicSettingProps['conversation']>, LibreChatKeys>;\n  resendFiles: boolean;\n  promptPrefix?: string | null;\n  maxContextTokens?: number;\n  fileTokenLimit?: number;\n  modelLabel?: string | null;\n};\n\n/**\n * Separates LibreChat-specific parameters from model options\n * @param options - The combined options object\n */\nexport function extractLibreChatParams(\n  options?: DynamicSettingProps['conversation'],\n): LibreChatParams {\n  if (!options) {\n    return {\n      modelOptions: {} as Omit<NonNullable<DynamicSettingProps['conversation']>, LibreChatKeys>,\n      resendFiles: librechat.resendFiles.default as boolean,\n    };\n  }\n\n  const modelOptions = { ...options };\n\n  const resendFiles =\n    (delete modelOptions.resendFiles, options.resendFiles) ??\n    (librechat.resendFiles.default as boolean);\n  const promptPrefix = (delete modelOptions.promptPrefix, options.promptPrefix);\n  const maxContextTokens = (delete modelOptions.maxContextTokens, options.maxContextTokens);\n  const fileTokenLimit = (delete modelOptions.fileTokenLimit, options.fileTokenLimit);\n  const modelLabel = (delete modelOptions.modelLabel, options.modelLabel);\n\n  return {\n    modelOptions: modelOptions as Omit<\n      NonNullable<DynamicSettingProps['conversation']>,\n      LibreChatKeys\n    >,\n    maxContextTokens,\n    fileTokenLimit,\n    promptPrefix,\n    resendFiles,\n    modelLabel,\n  };\n}\n","/**\n * Evaluates a mathematical expression provided as a string and returns the result.\n *\n * If the input is already a number, it returns the number as is.\n * If the input is not a string or contains invalid characters, an error is thrown.\n * If the evaluated result is not a number, an error is thrown.\n *\n * @param str - The mathematical expression to evaluate, or a number.\n * @param fallbackValue - The default value to return if the input is not a string or number, or if the evaluated result is not a number.\n *\n * @returns The result of the evaluated expression or the input number.\n *\n * @throws Throws an error if the input is not a string or number, contains invalid characters, or does not evaluate to a number.\n */\nexport function math(str: string | number, fallbackValue?: number): number {\n  const fallback = typeof fallbackValue !== 'undefined' && typeof fallbackValue === 'number';\n  if (typeof str !== 'string' && typeof str === 'number') {\n    return str;\n  } else if (typeof str !== 'string') {\n    if (fallback) {\n      return fallbackValue;\n    }\n    throw new Error(`str is ${typeof str}, but should be a string`);\n  }\n\n  const validStr = /^[+\\-\\d.\\s*/%()]+$/.test(str);\n\n  if (!validStr) {\n    if (fallback) {\n      return fallbackValue;\n    }\n    throw new Error('Invalid characters in string');\n  }\n\n  const value = eval(str);\n\n  if (typeof value !== 'number') {\n    if (fallback) {\n      return fallbackValue;\n    }\n    throw new Error(`[math] str did not evaluate to a number but to a ${typeof value}`);\n  }\n\n  return value;\n}\n","/**\n * Helper function to safely log sensitive data when debug mode is enabled\n * @param obj - Object to stringify\n * @param maxLength - Maximum length of the stringified output\n * @returns Stringified object with sensitive data masked\n */\nexport function safeStringify(obj: unknown, maxLength = 1000): string {\n  try {\n    const str = JSON.stringify(obj, (key, value) => {\n      // Mask sensitive values\n      if (\n        key === 'client_secret' ||\n        key === 'Authorization' ||\n        key.toLowerCase().includes('token') ||\n        key.toLowerCase().includes('password')\n      ) {\n        return typeof value === 'string' && value.length > 6\n          ? `${value.substring(0, 3)}...${value.substring(value.length - 3)}`\n          : '***MASKED***';\n      }\n      return value;\n    });\n\n    if (str && str.length > maxLength) {\n      return `${str.substring(0, maxLength)}... (truncated)`;\n    }\n    return str;\n  } catch (error) {\n    return `[Error stringifying object: ${(error as Error).message}]`;\n  }\n}\n\n/**\n * Helper to log headers without revealing sensitive information\n * @param headers - Headers object to log\n * @returns Stringified headers with sensitive data masked\n */\nexport function logHeaders(headers: Headers | undefined | null): string {\n  const headerObj: Record<string, string> = {};\n  if (!headers || typeof headers.entries !== 'function') {\n    return 'No headers available';\n  }\n  for (const [key, value] of headers.entries()) {\n    if (key.toLowerCase() === 'authorization' || key.toLowerCase().includes('secret')) {\n      headerObj[key] = '***MASKED***';\n    } else {\n      headerObj[key] = value;\n    }\n  }\n  return safeStringify(headerObj);\n}\n","import { logger } from '@librechat/data-schemas';\nimport type { AppConfig } from '~/types';\n\n/**\n * Default retention period for temporary chats in hours\n */\nexport const DEFAULT_RETENTION_HOURS = 24 * 30; // 30 days\n\n/**\n * Minimum allowed retention period in hours\n */\nexport const MIN_RETENTION_HOURS = 1;\n\n/**\n * Maximum allowed retention period in hours (1 year = 8760 hours)\n */\nexport const MAX_RETENTION_HOURS = 8760;\n\n/**\n * Gets the temporary chat retention period from environment variables or config\n * @param interfaceConfig - The custom configuration object\n * @returns The retention period in hours\n */\nexport function getTempChatRetentionHours(\n  interfaceConfig?: AppConfig['interfaceConfig'] | null,\n): number {\n  let retentionHours = DEFAULT_RETENTION_HOURS;\n\n  // Check environment variable first\n  if (process.env.TEMP_CHAT_RETENTION_HOURS) {\n    const envValue = parseInt(process.env.TEMP_CHAT_RETENTION_HOURS, 10);\n    if (!isNaN(envValue)) {\n      retentionHours = envValue;\n    } else {\n      logger.warn(\n        `Invalid TEMP_CHAT_RETENTION_HOURS environment variable: ${process.env.TEMP_CHAT_RETENTION_HOURS}. Using default: ${DEFAULT_RETENTION_HOURS} hours.`,\n      );\n    }\n  }\n\n  // Check config file (takes precedence over environment variable)\n  if (interfaceConfig?.temporaryChatRetention !== undefined) {\n    const configValue = interfaceConfig.temporaryChatRetention;\n    if (typeof configValue === 'number' && !isNaN(configValue)) {\n      retentionHours = configValue;\n    } else {\n      logger.warn(\n        `Invalid temporaryChatRetention in config: ${configValue}. Using ${retentionHours} hours.`,\n      );\n    }\n  }\n\n  // Validate the retention period\n  if (retentionHours < MIN_RETENTION_HOURS) {\n    logger.warn(\n      `Temporary chat retention period ${retentionHours} is below minimum ${MIN_RETENTION_HOURS} hours. Using minimum value.`,\n    );\n    retentionHours = MIN_RETENTION_HOURS;\n  } else if (retentionHours > MAX_RETENTION_HOURS) {\n    logger.warn(\n      `Temporary chat retention period ${retentionHours} exceeds maximum ${MAX_RETENTION_HOURS} hours. Using maximum value.`,\n    );\n    retentionHours = MAX_RETENTION_HOURS;\n  }\n\n  return retentionHours;\n}\n\n/**\n * Creates an expiration date for temporary chats\n * @param interfaceConfig - The custom configuration object\n * @returns The expiration date\n */\nexport function createTempChatExpirationDate(interfaceConfig?: AppConfig['interfaceConfig']): Date {\n  const retentionHours = getTempChatRetentionHours(interfaceConfig);\n  const expiredAt = new Date();\n  expiredAt.setHours(expiredAt.getHours() + retentionHours);\n  return expiredAt;\n}\n","import { logger } from '@librechat/data-schemas';\n\n/**\n * Processes text content by counting tokens and truncating if it exceeds the specified limit.\n * @param text - The text content to process\n * @param tokenLimit - The maximum number of tokens allowed\n * @param tokenCountFn - Function to count tokens\n * @returns Promise resolving to object with processed text, token count, and truncation status\n */\nexport async function processTextWithTokenLimit({\n  text,\n  tokenLimit,\n  tokenCountFn,\n}: {\n  text: string;\n  tokenLimit: number;\n  tokenCountFn: (text: string) => number;\n}): Promise<{ text: string; tokenCount: number; wasTruncated: boolean }> {\n  const originalTokenCount = await tokenCountFn(text);\n\n  if (originalTokenCount <= tokenLimit) {\n    return {\n      text,\n      tokenCount: originalTokenCount,\n      wasTruncated: false,\n    };\n  }\n\n  /**\n   * Doing binary search here to find the truncation point efficiently\n   * (May be a better way to go about this)\n   */\n  let low = 0;\n  let high = text.length;\n  let bestText = '';\n\n  logger.debug(\n    `[textTokenLimiter] Text content exceeds token limit: ${originalTokenCount} > ${tokenLimit}, truncating...`,\n  );\n\n  while (low <= high) {\n    const mid = Math.floor((low + high) / 2);\n    const truncatedText = text.substring(0, mid);\n    const tokenCount = await tokenCountFn(truncatedText);\n\n    if (tokenCount <= tokenLimit) {\n      bestText = truncatedText;\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n\n  const finalTokenCount = await tokenCountFn(bestText);\n\n  logger.warn(\n    `[textTokenLimiter] Text truncated from ${originalTokenCount} to ${finalTokenCount} tokens (limit: ${tokenLimit})`,\n  );\n\n  return {\n    text: bestText,\n    tokenCount: finalTokenCount,\n    wasTruncated: true,\n  };\n}\n","import { logger } from '@librechat/data-schemas';\nimport { encoding_for_model as encodingForModel, get_encoding as getEncoding } from 'tiktoken';\nimport type { Tiktoken, TiktokenModel, TiktokenEncoding } from 'tiktoken';\n\ninterface TokenizerOptions {\n  debug?: boolean;\n}\n\nclass Tokenizer {\n  tokenizersCache: Record<string, Tiktoken>;\n  tokenizerCallsCount: number;\n  private options?: TokenizerOptions;\n\n  constructor() {\n    this.tokenizersCache = {};\n    this.tokenizerCallsCount = 0;\n  }\n\n  getTokenizer(\n    encoding: TiktokenModel | TiktokenEncoding,\n    isModelName = false,\n    extendSpecialTokens: Record<string, number> = {},\n  ): Tiktoken {\n    let tokenizer: Tiktoken;\n    if (this.tokenizersCache[encoding]) {\n      tokenizer = this.tokenizersCache[encoding];\n    } else {\n      if (isModelName) {\n        tokenizer = encodingForModel(encoding as TiktokenModel, extendSpecialTokens);\n      } else {\n        tokenizer = getEncoding(encoding as TiktokenEncoding, extendSpecialTokens);\n      }\n      this.tokenizersCache[encoding] = tokenizer;\n    }\n    return tokenizer;\n  }\n\n  freeAndResetAllEncoders(): void {\n    try {\n      Object.keys(this.tokenizersCache).forEach((key) => {\n        if (this.tokenizersCache[key]) {\n          this.tokenizersCache[key].free();\n          delete this.tokenizersCache[key];\n        }\n      });\n      this.tokenizerCallsCount = 1;\n    } catch (error) {\n      logger.error('[Tokenizer] Free and reset encoders error', error);\n    }\n  }\n\n  resetTokenizersIfNecessary(): void {\n    if (this.tokenizerCallsCount >= 25) {\n      if (this.options?.debug) {\n        logger.debug('[Tokenizer] freeAndResetAllEncoders: reached 25 encodings, resetting...');\n      }\n      this.freeAndResetAllEncoders();\n    }\n    this.tokenizerCallsCount++;\n  }\n\n  getTokenCount(text: string, encoding: TiktokenModel | TiktokenEncoding = 'cl100k_base'): number {\n    this.resetTokenizersIfNecessary();\n    try {\n      const tokenizer = this.getTokenizer(encoding);\n      return tokenizer.encode(text, 'all').length;\n    } catch (error) {\n      logger.error('[Tokenizer] Error getting token count:', error);\n      this.freeAndResetAllEncoders();\n      const tokenizer = this.getTokenizer(encoding);\n      return tokenizer.encode(text, 'all').length;\n    }\n  }\n}\n\nconst TokenizerSingleton = new Tokenizer();\n\nexport default TokenizerSingleton;\n","import fs from 'fs';\nimport yaml from 'js-yaml';\n\nexport function loadYaml(filepath: string) {\n  try {\n    const fileContents = fs.readFileSync(filepath, 'utf8');\n    return yaml.load(fileContents);\n  } catch (e) {\n    return e;\n  }\n}\n","/**\n * Normalizes an error-like object into an HTTP status and message.\n * Ensures we always respond with a valid numeric status to avoid UI hangs.\n */\nexport function normalizeHttpError(\n  err: Error | { status?: number; message?: string } | unknown,\n  fallbackStatus = 400,\n) {\n  let status = fallbackStatus;\n  if (err && typeof err === 'object' && 'status' in err && typeof err.status === 'number') {\n    status = err.status;\n  }\n\n  let message = 'An error occurred.';\n  if (\n    err &&\n    typeof err === 'object' &&\n    'message' in err &&\n    typeof err.message === 'string' &&\n    err.message.length > 0\n  ) {\n    message = err.message;\n  }\n\n  return { status, message };\n}\n","import z from 'zod';\nimport { EModelEndpoint } from 'librechat-data-provider';\n\n/** Configuration object mapping model keys to their respective prompt, completion rates, and context limit\n *\n * Note: the [key: string]: unknown is not in the original JSDoc typedef in /api/typedefs.js, but I've included it since\n * getModelMaxOutputTokens calls getModelTokenValue with a key of 'output', which was not in the original JSDoc typedef,\n * but would be referenced in a TokenConfig in the if(matchedPattern) portion of getModelTokenValue.\n * So in order to preserve functionality for that case and any others which might reference an additional key I'm unaware of,\n * I've included it here until the interface can be typed more tightly.\n */\nexport interface TokenConfig {\n  prompt: number;\n  completion: number;\n  context: number;\n  [key: string]: unknown;\n}\n\n/** An endpoint's config object mapping model keys to their respective prompt, completion rates, and context limit */\nexport type EndpointTokenConfig = Record<string, TokenConfig>;\n\nconst openAIModels = {\n  'o4-mini': 200000,\n  'o3-mini': 195000, // -5000 from max\n  o3: 200000,\n  o1: 195000, // -5000 from max\n  'o1-mini': 127500, // -500 from max\n  'o1-preview': 127500, // -500 from max\n  'gpt-4': 8187, // -5 from max\n  'gpt-4-0613': 8187, // -5 from max\n  'gpt-4-32k': 32758, // -10 from max\n  'gpt-4-32k-0314': 32758, // -10 from max\n  'gpt-4-32k-0613': 32758, // -10 from max\n  'gpt-4-1106': 127500, // -500 from max\n  'gpt-4-0125': 127500, // -500 from max\n  'gpt-4.5': 127500, // -500 from max\n  'gpt-4.1': 1047576,\n  'gpt-4.1-mini': 1047576,\n  'gpt-4.1-nano': 1047576,\n  'gpt-5': 400000,\n  'gpt-5-mini': 400000,\n  'gpt-5-nano': 400000,\n  'gpt-4o': 127500, // -500 from max\n  'gpt-4o-mini': 127500, // -500 from max\n  'gpt-4o-2024-05-13': 127500, // -500 from max\n  'gpt-4o-2024-08-06': 127500, // -500 from max\n  'gpt-4-turbo': 127500, // -500 from max\n  'gpt-4-vision': 127500, // -500 from max\n  'gpt-3.5-turbo': 16375, // -10 from max\n  'gpt-3.5-turbo-0613': 4092, // -5 from max\n  'gpt-3.5-turbo-0301': 4092, // -5 from max\n  'gpt-3.5-turbo-16k': 16375, // -10 from max\n  'gpt-3.5-turbo-16k-0613': 16375, // -10 from max\n  'gpt-3.5-turbo-1106': 16375, // -10 from max\n  'gpt-3.5-turbo-0125': 16375, // -10 from max\n};\n\nconst mistralModels = {\n  'mistral-': 31990, // -10 from max\n  'mistral-7b': 31990, // -10 from max\n  'mistral-small': 31990, // -10 from max\n  'mixtral-8x7b': 31990, // -10 from max\n  'mistral-large': 131000,\n  'mistral-large-2402': 127500,\n  'mistral-large-2407': 127500,\n  'pixtral-large': 131000,\n  'mistral-saba': 32000,\n  codestral: 256000,\n  'ministral-8b': 131000,\n  'ministral-3b': 131000,\n};\n\nconst cohereModels = {\n  'command-light': 4086, // -10 from max\n  'command-light-nightly': 8182, // -10 from max\n  command: 4086, // -10 from max\n  'command-nightly': 8182, // -10 from max\n  'command-r': 127500, // -500 from max\n  'command-r-plus': 127500, // -500 from max\n};\n\nconst googleModels = {\n  /* Max I/O is combined so we subtract the amount from max response tokens for actual total */\n  gemma: 8196,\n  'gemma-2': 32768,\n  'gemma-3': 32768,\n  'gemma-3-27b': 131072,\n  gemini: 30720, // -2048 from max\n  'gemini-pro-vision': 12288,\n  'gemini-exp': 2000000,\n  'gemini-2.5': 1000000, // 1M input tokens, 64k output tokens\n  'gemini-2.5-pro': 1000000,\n  'gemini-2.5-flash': 1000000,\n  'gemini-2.0': 2000000,\n  'gemini-2.0-flash': 1000000,\n  'gemini-2.0-flash-lite': 1000000,\n  'gemini-1.5': 1000000,\n  'gemini-1.5-flash': 1000000,\n  'gemini-1.5-flash-8b': 1000000,\n  'text-bison-32k': 32758, // -10 from max\n  'chat-bison-32k': 32758, // -10 from max\n  'code-bison-32k': 32758, // -10 from max\n  'codechat-bison-32k': 32758,\n  /* Codey, -5 from max: 6144 */\n  'code-': 6139,\n  'codechat-': 6139,\n  /* PaLM2, -5 from max: 8192 */\n  'text-': 8187,\n  'chat-': 8187,\n};\n\nconst anthropicModels = {\n  'claude-': 100000,\n  'claude-instant': 100000,\n  'claude-2': 100000,\n  'claude-2.1': 200000,\n  'claude-3': 200000,\n  'claude-3-haiku': 200000,\n  'claude-3-sonnet': 200000,\n  'claude-3-opus': 200000,\n  'claude-3.5-haiku': 200000,\n  'claude-3-5-haiku': 200000,\n  'claude-3-5-sonnet': 200000,\n  'claude-3.5-sonnet': 200000,\n  'claude-3-7-sonnet': 200000,\n  'claude-3.7-sonnet': 200000,\n  'claude-3-5-sonnet-latest': 200000,\n  'claude-3.5-sonnet-latest': 200000,\n  'claude-sonnet-4': 1000000,\n  'claude-opus-4': 200000,\n  'claude-4': 200000,\n};\n\nconst deepseekModels = {\n  'deepseek-reasoner': 63000, // -1000 from max (API)\n  deepseek: 63000, // -1000 from max (API)\n  'deepseek.r1': 127500,\n};\n\nconst metaModels = {\n  // Basic patterns\n  llama3: 8000,\n  llama2: 4000,\n  'llama-3': 8000,\n  'llama-2': 4000,\n\n  // llama3.x pattern\n  'llama3.1': 127500,\n  'llama3.2': 127500,\n  'llama3.3': 127500,\n\n  // llama3-x pattern\n  'llama3-1': 127500,\n  'llama3-2': 127500,\n  'llama3-3': 127500,\n\n  // llama-3.x pattern\n  'llama-3.1': 127500,\n  'llama-3.2': 127500,\n  'llama-3.3': 127500,\n\n  // llama3.x:Nb pattern\n  'llama3.1:405b': 127500,\n  'llama3.1:70b': 127500,\n  'llama3.1:8b': 127500,\n  'llama3.2:1b': 127500,\n  'llama3.2:3b': 127500,\n  'llama3.2:11b': 127500,\n  'llama3.2:90b': 127500,\n  'llama3.3:70b': 127500,\n\n  // llama3-x-Nb pattern\n  'llama3-1-405b': 127500,\n  'llama3-1-70b': 127500,\n  'llama3-1-8b': 127500,\n  'llama3-2-1b': 127500,\n  'llama3-2-3b': 127500,\n  'llama3-2-11b': 127500,\n  'llama3-2-90b': 127500,\n  'llama3-3-70b': 127500,\n\n  // llama-3.x-Nb pattern\n  'llama-3.1-405b': 127500,\n  'llama-3.1-70b': 127500,\n  'llama-3.1-8b': 127500,\n  'llama-3.2-1b': 127500,\n  'llama-3.2-3b': 127500,\n  'llama-3.2-11b': 127500,\n  'llama-3.2-90b': 127500,\n  'llama-3.3-70b': 127500,\n\n  // Original llama2/3 patterns\n  'llama3-70b': 8000,\n  'llama3-8b': 8000,\n  'llama2-70b': 4000,\n  'llama2-13b': 4000,\n  'llama3:70b': 8000,\n  'llama3:8b': 8000,\n  'llama2:70b': 4000,\n};\n\nconst ollamaModels = {\n  'qwen2.5': 32000,\n};\n\nconst ai21Models = {\n  'ai21.j2-mid-v1': 8182, // -10 from max\n  'ai21.j2-ultra-v1': 8182, // -10 from max\n  'ai21.jamba-instruct-v1:0': 255500, // -500 from max\n};\n\nconst amazonModels = {\n  'amazon.titan-text-lite-v1': 4000,\n  'amazon.titan-text-express-v1': 8000,\n  'amazon.titan-text-premier-v1:0': 31500, // -500 from max\n  // https://aws.amazon.com/ai/generative-ai/nova/\n  'amazon.nova-micro-v1:0': 127000, // -1000 from max,\n  'amazon.nova-lite-v1:0': 295000, // -5000 from max,\n  'amazon.nova-pro-v1:0': 295000, // -5000 from max,\n  'amazon.nova-premier-v1:0': 995000, // -5000 from max,\n  'amazon.nova-canvas-v1:0': 4000, // Image generation model, limited tokens for prompts\n};\n\nconst bedrockModels = {\n  ...anthropicModels,\n  ...mistralModels,\n  ...cohereModels,\n  ...ollamaModels,\n  ...deepseekModels,\n  ...metaModels,\n  ...ai21Models,\n  ...amazonModels,\n};\n\nconst xAIModels = {\n  grok: 131072,\n  'grok-beta': 131072,\n  'grok-vision-beta': 8192,\n  'grok-2': 131072,\n  'grok-2-latest': 131072,\n  'grok-2-1212': 131072,\n  'grok-2-vision': 32768,\n  'grok-2-vision-latest': 32768,\n  'grok-2-vision-1212': 32768,\n  'grok-3': 131072,\n  'grok-3-fast': 131072,\n  'grok-3-mini': 131072,\n  'grok-3-mini-fast': 131072,\n  'grok-4': 256000, // 256K context\n};\n\nconst aggregateModels = {\n  ...openAIModels,\n  ...googleModels,\n  ...bedrockModels,\n  ...xAIModels,\n  // misc.\n  kimi: 131000,\n  // GPT-OSS\n  'gpt-oss-20b': 131000,\n  'gpt-oss-120b': 131000,\n};\n\nexport const maxTokensMap = {\n  [EModelEndpoint.azureOpenAI]: openAIModels,\n  [EModelEndpoint.openAI]: aggregateModels,\n  [EModelEndpoint.agents]: aggregateModels,\n  [EModelEndpoint.custom]: aggregateModels,\n  [EModelEndpoint.google]: googleModels,\n  [EModelEndpoint.anthropic]: anthropicModels,\n  [EModelEndpoint.bedrock]: bedrockModels,\n};\n\nexport const modelMaxOutputs = {\n  o1: 32268, // -500 from max: 32,768\n  'o1-mini': 65136, // -500 from max: 65,536\n  'o1-preview': 32268, // -500 from max: 32,768\n  'gpt-5': 128000,\n  'gpt-5-mini': 128000,\n  'gpt-5-nano': 128000,\n  'gpt-oss-20b': 131000,\n  'gpt-oss-120b': 131000,\n  system_default: 32000,\n};\n\n/** Outputs from https://docs.anthropic.com/en/docs/about-claude/models/all-models#model-names */\nconst anthropicMaxOutputs = {\n  'claude-3-haiku': 4096,\n  'claude-3-sonnet': 4096,\n  'claude-3-opus': 4096,\n  'claude-opus-4': 32000,\n  'claude-sonnet-4': 64000,\n  'claude-3.5-sonnet': 8192,\n  'claude-3-5-sonnet': 8192,\n  'claude-3.7-sonnet': 128000,\n  'claude-3-7-sonnet': 128000,\n};\n\nexport const maxOutputTokensMap = {\n  [EModelEndpoint.anthropic]: anthropicMaxOutputs,\n  [EModelEndpoint.azureOpenAI]: modelMaxOutputs,\n  [EModelEndpoint.openAI]: modelMaxOutputs,\n  [EModelEndpoint.custom]: modelMaxOutputs,\n};\n\n/**\n * Finds the first matching pattern in the tokens map.\n * @param {string} modelName\n * @param {Record<string, number> | EndpointTokenConfig} tokensMap\n * @returns {string|null}\n */\nexport function findMatchingPattern(\n  modelName: string,\n  tokensMap: Record<string, number> | EndpointTokenConfig,\n): string | null {\n  const keys = Object.keys(tokensMap);\n  for (let i = keys.length - 1; i >= 0; i--) {\n    const modelKey = keys[i];\n    if (modelName.includes(modelKey)) {\n      return modelKey;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Retrieves a token value for a given model name from a tokens map.\n *\n * @param modelName - The name of the model to look up.\n * @param tokensMap - The map of model names to token values.\n * @param [key='context'] - The key to look up in the tokens map.\n * @returns The token value for the given model or undefined if no match is found.\n */\nexport function getModelTokenValue(\n  modelName: string,\n  tokensMap?: EndpointTokenConfig | Record<string, number>,\n  key = 'context' as keyof TokenConfig,\n): number | undefined {\n  if (typeof modelName !== 'string' || !tokensMap) {\n    return undefined;\n  }\n\n  const value = tokensMap[modelName];\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  if (value?.context) {\n    return value.context;\n  }\n\n  const matchedPattern = findMatchingPattern(modelName, tokensMap);\n\n  if (matchedPattern) {\n    const result = tokensMap[matchedPattern];\n    if (typeof result === 'number') {\n      return result;\n    }\n\n    const tokenValue = result?.[key];\n    if (typeof tokenValue === 'number') {\n      return tokenValue;\n    }\n    return tokensMap.system_default as number | undefined;\n  }\n\n  return tokensMap.system_default as number | undefined;\n}\n\n/**\n * Retrieves the maximum tokens for a given model name.\n *\n * @param modelName - The name of the model to look up.\n * @param endpoint - The endpoint (default is 'openAI').\n * @param [endpointTokenConfig] - Token Config for current endpoint to use for max tokens lookup\n * @returns The maximum tokens for the given model or undefined if no match is found.\n */\nexport function getModelMaxTokens(\n  modelName: string,\n  endpoint = EModelEndpoint.openAI,\n  endpointTokenConfig?: EndpointTokenConfig,\n): number | undefined {\n  const tokensMap = endpointTokenConfig ?? maxTokensMap[endpoint as keyof typeof maxTokensMap];\n  return getModelTokenValue(modelName, tokensMap);\n}\n\n/**\n * Retrieves the maximum output tokens for a given model name.\n *\n * @param modelName - The name of the model to look up.\n * @param endpoint - The endpoint (default is 'openAI').\n * @param [endpointTokenConfig] - Token Config for current endpoint to use for max tokens lookup\n * @returns The maximum output tokens for the given model or undefined if no match is found.\n */\nexport function getModelMaxOutputTokens(\n  modelName: string,\n  endpoint = EModelEndpoint.openAI,\n  endpointTokenConfig?: EndpointTokenConfig,\n): number | undefined {\n  const tokensMap =\n    endpointTokenConfig ?? maxOutputTokensMap[endpoint as keyof typeof maxOutputTokensMap];\n  return getModelTokenValue(modelName, tokensMap, 'output');\n}\n\n/**\n * Retrieves the model name key for a given model name input. If the exact model name isn't found,\n * it searches for partial matches within the model name, checking keys in reverse order.\n *\n * @param modelName - The name of the model to look up.\n * @param endpoint - The endpoint (default is 'openAI').\n * @returns The model name key for the given model; returns input if no match is found and is string.\n *\n * @example\n * matchModelName('gpt-4-32k-0613'); // Returns 'gpt-4-32k-0613'\n * matchModelName('gpt-4-32k-unknown'); // Returns 'gpt-4-32k'\n * matchModelName('unknown-model'); // Returns undefined\n */\nexport function matchModelName(\n  modelName: string,\n  endpoint = EModelEndpoint.openAI,\n): string | undefined {\n  if (typeof modelName !== 'string') {\n    return undefined;\n  }\n\n  const tokensMap: Record<string, number> = maxTokensMap[endpoint as keyof typeof maxTokensMap];\n  if (!tokensMap) {\n    return modelName;\n  }\n\n  if (tokensMap[modelName]) {\n    return modelName;\n  }\n\n  const matchedPattern = findMatchingPattern(modelName, tokensMap);\n  return matchedPattern || modelName;\n}\n\nexport const modelSchema = z.object({\n  id: z.string(),\n  pricing: z.object({\n    prompt: z.string(),\n    completion: z.string(),\n  }),\n  context_length: z.number(),\n});\n\nexport const inputSchema = z.object({\n  data: z.array(modelSchema),\n});\n\n/**\n * Processes a list of model data from an API and organizes it into structured data based on URL and specifics of rates and context.\n * @param {{ data: Array<z.infer<typeof modelSchema>> }} input The input object containing base URL and data fetched from the API.\n * @returns {EndpointTokenConfig} The processed model data.\n */\nexport function processModelData(input: z.infer<typeof inputSchema>): EndpointTokenConfig {\n  const validationResult = inputSchema.safeParse(input);\n  if (!validationResult.success) {\n    throw new Error('Invalid input data');\n  }\n  const { data } = validationResult.data;\n\n  /** @type {EndpointTokenConfig} */\n  const tokenConfig: EndpointTokenConfig = {};\n\n  for (const model of data) {\n    const modelKey = model.id;\n    if (modelKey === 'openrouter/auto') {\n      model.pricing = {\n        prompt: '0.00001',\n        completion: '0.00003',\n      };\n    }\n    const prompt = parseFloat(model.pricing.prompt) * 1000000;\n    const completion = parseFloat(model.pricing.completion) * 1000000;\n\n    tokenConfig[modelKey] = {\n      prompt,\n      completion,\n      context: model.context_length,\n    };\n  }\n\n  return tokenConfig;\n}\n\nexport const tiktokenModels = new Set([\n  'text-davinci-003',\n  'text-davinci-002',\n  'text-davinci-001',\n  'text-curie-001',\n  'text-babbage-001',\n  'text-ada-001',\n  'davinci',\n  'curie',\n  'babbage',\n  'ada',\n  'code-davinci-002',\n  'code-davinci-001',\n  'code-cushman-002',\n  'code-cushman-001',\n  'davinci-codex',\n  'cushman-codex',\n  'text-davinci-edit-001',\n  'code-davinci-edit-001',\n  'text-embedding-ada-002',\n  'text-similarity-davinci-001',\n  'text-similarity-curie-001',\n  'text-similarity-babbage-001',\n  'text-similarity-ada-001',\n  'text-search-davinci-doc-001',\n  'text-search-curie-doc-001',\n  'text-search-babbage-doc-001',\n  'text-search-ada-doc-001',\n  'code-search-babbage-code-001',\n  'code-search-ada-code-001',\n  'gpt2',\n  'gpt-4',\n  'gpt-4-0314',\n  'gpt-4-32k',\n  'gpt-4-32k-0314',\n  'gpt-3.5-turbo',\n  'gpt-3.5-turbo-0301',\n]);\n","import { EModelEndpoint, removeNullishValues } from 'librechat-data-provider';\nimport type { TCustomConfig, TEndpoint, TTransactionsConfig } from 'librechat-data-provider';\nimport type { AppConfig } from '~/types';\nimport { isEnabled, normalizeEndpointName } from '~/utils';\nimport { logger } from '@librechat/data-schemas';\n\n/**\n * Retrieves the balance configuration object\n * */\nexport function getBalanceConfig(appConfig?: AppConfig): Partial<TCustomConfig['balance']> | null {\n  const isLegacyEnabled = isEnabled(process.env.CHECK_BALANCE);\n  const startBalance = process.env.START_BALANCE;\n  /** @type {} */\n  const config: Partial<TCustomConfig['balance']> = removeNullishValues({\n    enabled: isLegacyEnabled,\n    startBalance: startBalance != null && startBalance ? parseInt(startBalance, 10) : undefined,\n  });\n  if (!appConfig) {\n    return config;\n  }\n  return { ...config, ...(appConfig?.['balance'] ?? {}) };\n}\n\n/**\n * Retrieves the transactions configuration object\n * */\nexport function getTransactionsConfig(appConfig?: AppConfig): TTransactionsConfig {\n  const defaultConfig: TTransactionsConfig = { enabled: true };\n\n  if (!appConfig) {\n    return defaultConfig;\n  }\n\n  const transactionsConfig = appConfig?.['transactions'] ?? defaultConfig;\n  const balanceConfig = getBalanceConfig(appConfig);\n\n  // If balance is enabled but transactions are disabled, force transactions to be enabled\n  // and log a warning\n  if (balanceConfig?.enabled && !transactionsConfig.enabled) {\n    logger.warn(\n      'Configuration warning: transactions.enabled=false is incompatible with balance.enabled=true. ' +\n        'Transactions will be enabled to ensure balance tracking works correctly.',\n    );\n    return { ...transactionsConfig, enabled: true };\n  }\n\n  return transactionsConfig;\n}\n\nexport const getCustomEndpointConfig = ({\n  endpoint,\n  appConfig,\n}: {\n  endpoint: string | EModelEndpoint;\n  appConfig?: AppConfig;\n}): Partial<TEndpoint> | undefined => {\n  if (!appConfig) {\n    throw new Error(`Config not found for the ${endpoint} custom endpoint.`);\n  }\n\n  const customEndpoints = appConfig.endpoints?.[EModelEndpoint.custom] ?? [];\n  return customEndpoints.find(\n    (endpointConfig) => normalizeEndpointName(endpointConfig.name) === endpoint,\n  );\n};\n\nexport function hasCustomUserVars(appConfig?: AppConfig): boolean {\n  const mcpServers = appConfig?.mcpConfig;\n  return Object.values(mcpServers ?? {}).some((server) => server.customUserVars);\n}\n","import { memorySchema } from 'librechat-data-provider';\nimport type { TCustomConfig, TMemoryConfig } from 'librechat-data-provider';\n\nconst hasValidAgent = (agent: TMemoryConfig['agent']) =>\n  !!agent &&\n  (('id' in agent && !!agent.id) ||\n    ('provider' in agent && 'model' in agent && !!agent.provider && !!agent.model));\n\nconst isDisabled = (config?: TMemoryConfig | TCustomConfig['memory']) =>\n  !config || config.disabled === true;\n\nexport function loadMemoryConfig(config: TCustomConfig['memory']): TMemoryConfig | undefined {\n  if (!config) return undefined;\n  if (isDisabled(config)) return config as TMemoryConfig;\n\n  if (!hasValidAgent(config.agent)) {\n    return { ...config, disabled: true } as TMemoryConfig;\n  }\n\n  const charLimit = memorySchema.shape.charLimit.safeParse(config.charLimit).data ?? 10000;\n\n  return { ...config, charLimit };\n}\n\nexport function isMemoryEnabled(config: TMemoryConfig | undefined): boolean {\n  if (isDisabled(config)) return false;\n  return hasValidAgent(config!.agent);\n}\n","import { logger } from '@librechat/data-schemas';\nimport { removeNullishValues } from 'librechat-data-provider';\nimport type { TCustomConfig, TConfigDefaults } from 'librechat-data-provider';\nimport type { AppConfig } from '~/types/config';\nimport { isMemoryEnabled } from '~/memory/config';\n\n/**\n * Loads the default interface object.\n * @param params - The loaded custom configuration.\n * @param params.config - The loaded custom configuration.\n * @param params.configDefaults - The custom configuration default values.\n * @returns default interface object.\n */\nexport async function loadDefaultInterface({\n  config,\n  configDefaults,\n}: {\n  config?: Partial<TCustomConfig>;\n  configDefaults: TConfigDefaults;\n}): Promise<AppConfig['interfaceConfig']> {\n  const { interface: interfaceConfig } = config ?? {};\n  const { interface: defaults } = configDefaults;\n  const hasModelSpecs = (config?.modelSpecs?.list?.length ?? 0) > 0;\n  const includesAddedEndpoints = (config?.modelSpecs?.addedEndpoints?.length ?? 0) > 0;\n\n  const memoryConfig = config?.memory;\n  const memoryEnabled = isMemoryEnabled(memoryConfig);\n  /** Only disable memories if memory config is present but disabled/invalid */\n  const shouldDisableMemories = memoryConfig && !memoryEnabled;\n\n  const loadedInterface: AppConfig['interfaceConfig'] = removeNullishValues({\n    // UI elements - use schema defaults\n    endpointsMenu:\n      interfaceConfig?.endpointsMenu ?? (hasModelSpecs ? false : defaults.endpointsMenu),\n    modelSelect:\n      interfaceConfig?.modelSelect ??\n      (hasModelSpecs ? includesAddedEndpoints : defaults.modelSelect),\n    parameters: interfaceConfig?.parameters ?? (hasModelSpecs ? false : defaults.parameters),\n    presets: interfaceConfig?.presets ?? (hasModelSpecs ? false : defaults.presets),\n    sidePanel: interfaceConfig?.sidePanel ?? defaults.sidePanel,\n    privacyPolicy: interfaceConfig?.privacyPolicy ?? defaults.privacyPolicy,\n    termsOfService: interfaceConfig?.termsOfService ?? defaults.termsOfService,\n    mcpServers: interfaceConfig?.mcpServers ?? defaults.mcpServers,\n    customWelcome: interfaceConfig?.customWelcome ?? defaults.customWelcome,\n\n    // Permissions - only include if explicitly configured\n    bookmarks: interfaceConfig?.bookmarks,\n    memories: shouldDisableMemories ? false : interfaceConfig?.memories,\n    prompts: interfaceConfig?.prompts,\n    multiConvo: interfaceConfig?.multiConvo,\n    modularChat: interfaceConfig?.modularChat,\n    agents: interfaceConfig?.agents,\n    temporaryChat: interfaceConfig?.temporaryChat,\n    speechToText: interfaceConfig?.speechToText,\n    textToSpeech: interfaceConfig?.textToSpeech,\n    editAgentMessages: interfaceConfig?.editAgentMessages,\n    runCode: interfaceConfig?.runCode,\n    webSearch: interfaceConfig?.webSearch,\n    fileSearch: interfaceConfig?.fileSearch,\n    fileCitations: interfaceConfig?.fileCitations,\n    peoplePicker: interfaceConfig?.peoplePicker,\n    marketplace: interfaceConfig?.marketplace,\n  });\n\n  let i = 0;\n  const logSettings = () => {\n    // log interface object and model specs object (without list) for reference\n    logger.warn(`\\`interface\\` settings:\\n${JSON.stringify(loadedInterface, null, 2)}`);\n    logger.warn(\n      `\\`modelSpecs\\` settings:\\n${JSON.stringify(\n        { ...(config?.modelSpecs ?? {}), list: undefined },\n        null,\n        2,\n      )}`,\n    );\n  };\n\n  // warn about config.modelSpecs.prioritize if true and presets are enabled, that default presets will conflict with prioritizing model specs.\n  if (config?.modelSpecs?.prioritize && loadedInterface.presets) {\n    logger.warn(\n      \"Note: Prioritizing model specs can conflict with default presets if a default preset is set. It's recommended to disable presets from the interface or disable use of a default preset.\",\n    );\n    if (i === 0) i++;\n  }\n\n  // warn about config.modelSpecs.enforce if true and if any of these, endpointsMenu, modelSelect, presets, or parameters are enabled, that enforcing model specs can conflict with these options.\n  if (\n    config?.modelSpecs?.enforce &&\n    (loadedInterface.endpointsMenu ||\n      loadedInterface.modelSelect ||\n      loadedInterface.presets ||\n      loadedInterface.parameters)\n  ) {\n    logger.warn(\n      \"Note: Enforcing model specs can conflict with the interface options: endpointsMenu, modelSelect, presets, and parameters. It's recommended to disable these options from the interface or disable enforcing model specs.\",\n    );\n    if (i === 0) i++;\n  }\n  // warn if enforce is true and prioritize is not, that enforcing model specs without prioritizing them can lead to unexpected behavior.\n  if (config?.modelSpecs?.enforce && !config?.modelSpecs?.prioritize) {\n    logger.warn(\n      \"Note: Enforcing model specs without prioritizing them can lead to unexpected behavior. It's recommended to enable prioritizing model specs if enforcing them.\",\n    );\n    if (i === 0) i++;\n  }\n\n  if (i > 0) {\n    logSettings();\n  }\n\n  return loadedInterface;\n}\n","import { logger } from '@librechat/data-schemas';\nimport {\n  SystemRoles,\n  Permissions,\n  roleDefaults,\n  PermissionTypes,\n  getConfigDefaults,\n} from 'librechat-data-provider';\nimport type { IRole } from '@librechat/data-schemas';\nimport type { AppConfig } from '~/types/config';\nimport { isMemoryEnabled } from '~/memory/config';\n\n/**\n * Checks if a permission type has explicit configuration\n */\nfunction hasExplicitConfig(\n  interfaceConfig: AppConfig['interfaceConfig'],\n  permissionType: PermissionTypes,\n) {\n  switch (permissionType) {\n    case PermissionTypes.PROMPTS:\n      return interfaceConfig?.prompts !== undefined;\n    case PermissionTypes.BOOKMARKS:\n      return interfaceConfig?.bookmarks !== undefined;\n    case PermissionTypes.MEMORIES:\n      return interfaceConfig?.memories !== undefined;\n    case PermissionTypes.MULTI_CONVO:\n      return interfaceConfig?.multiConvo !== undefined;\n    case PermissionTypes.AGENTS:\n      return interfaceConfig?.agents !== undefined;\n    case PermissionTypes.TEMPORARY_CHAT:\n      return interfaceConfig?.temporaryChat !== undefined;\n    case PermissionTypes.RUN_CODE:\n      return interfaceConfig?.runCode !== undefined;\n    case PermissionTypes.WEB_SEARCH:\n      return interfaceConfig?.webSearch !== undefined;\n    case PermissionTypes.PEOPLE_PICKER:\n      return interfaceConfig?.peoplePicker !== undefined;\n    case PermissionTypes.MARKETPLACE:\n      return interfaceConfig?.marketplace !== undefined;\n    case PermissionTypes.FILE_SEARCH:\n      return interfaceConfig?.fileSearch !== undefined;\n    case PermissionTypes.FILE_CITATIONS:\n      return interfaceConfig?.fileCitations !== undefined;\n    default:\n      return false;\n  }\n}\n\nexport async function updateInterfacePermissions({\n  appConfig,\n  getRoleByName,\n  updateAccessPermissions,\n}: {\n  appConfig: AppConfig;\n  getRoleByName: (roleName: string, fieldsToSelect?: string | string[]) => Promise<IRole | null>;\n  updateAccessPermissions: (\n    roleName: string,\n    permissionsUpdate: Partial<Record<PermissionTypes, Record<string, boolean | undefined>>>,\n\n    roleData?: IRole | null,\n  ) => Promise<void>;\n}) {\n  const loadedInterface = appConfig?.interfaceConfig;\n  if (!loadedInterface) {\n    return;\n  }\n  /** Configured values for interface object structure */\n  const interfaceConfig = appConfig?.config?.interface;\n  const memoryConfig = appConfig?.config?.memory;\n  const memoryEnabled = isMemoryEnabled(memoryConfig);\n  /** Check if memory is explicitly disabled */\n  const isMemoryExplicitlyDisabled = memoryConfig && !memoryEnabled;\n  /** Check if personalization is enabled (defaults to true if memory is configured and enabled) */\n  const isPersonalizationEnabled =\n    memoryConfig && memoryEnabled && memoryConfig.personalize !== false;\n\n  /** Helper to get permission value with proper precedence */\n  const getPermissionValue = (\n    configValue?: boolean,\n    roleDefault?: boolean,\n    schemaDefault?: boolean,\n  ) => {\n    if (configValue !== undefined) return configValue;\n    if (roleDefault !== undefined) return roleDefault;\n    return schemaDefault;\n  };\n\n  const defaults = getConfigDefaults().interface;\n\n  // Permission precedence order:\n  // 1. Explicit user configuration (from librechat.yaml)\n  // 2. Role-specific defaults (from roleDefaults)\n  // 3. Interface schema defaults (from interfaceSchema.default())\n  for (const roleName of [SystemRoles.USER, SystemRoles.ADMIN]) {\n    const defaultPerms = roleDefaults[roleName]?.permissions;\n\n    const existingRole = await getRoleByName(roleName);\n    const existingPermissions = existingRole?.permissions;\n    const permissionsToUpdate: Partial<\n      Record<PermissionTypes, Record<string, boolean | undefined>>\n    > = {};\n\n    /**\n     * Helper to add permission if it should be updated\n     */\n    const addPermissionIfNeeded = (\n      permType: PermissionTypes,\n      permissions: Record<string, boolean | undefined>,\n    ) => {\n      const permTypeExists = existingPermissions?.[permType];\n      const isExplicitlyConfigured =\n        interfaceConfig && hasExplicitConfig(interfaceConfig, permType);\n      const isMemoryDisabled =\n        permType === PermissionTypes.MEMORIES && isMemoryExplicitlyDisabled === true;\n\n      // Only update if: doesn't exist OR explicitly configured\n      if (!permTypeExists || isExplicitlyConfigured || isMemoryDisabled) {\n        permissionsToUpdate[permType] = permissions;\n        if (!permTypeExists) {\n          logger.debug(`Role '${roleName}': Setting up default permissions for '${permType}'`);\n        } else if (isExplicitlyConfigured) {\n          logger.debug(`Role '${roleName}': Applying explicit config for '${permType}'`);\n        } else if (isMemoryDisabled) {\n          logger.debug(\n            `Role '${roleName}': Disabling memories as it is explicitly disabled in config`,\n          );\n        }\n      } else {\n        logger.debug(`Role '${roleName}': Preserving existing permissions for '${permType}'`);\n      }\n    };\n\n    const allPermissions: Partial<Record<PermissionTypes, Record<string, boolean | undefined>>> = {\n      [PermissionTypes.PROMPTS]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.prompts,\n          defaultPerms[PermissionTypes.PROMPTS]?.[Permissions.USE],\n          defaults.prompts,\n        ),\n      },\n      [PermissionTypes.BOOKMARKS]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.bookmarks,\n          defaultPerms[PermissionTypes.BOOKMARKS]?.[Permissions.USE],\n          defaults.bookmarks,\n        ),\n      },\n      [PermissionTypes.MEMORIES]: {\n        [Permissions.USE]: isMemoryExplicitlyDisabled\n          ? false\n          : getPermissionValue(\n              loadedInterface.memories,\n              defaultPerms[PermissionTypes.MEMORIES]?.[Permissions.USE],\n              defaults.memories,\n            ),\n        ...(defaultPerms[PermissionTypes.MEMORIES]?.[Permissions.CREATE] !== undefined && {\n          [Permissions.CREATE]: isMemoryExplicitlyDisabled\n            ? false\n            : defaultPerms[PermissionTypes.MEMORIES][Permissions.CREATE],\n        }),\n        ...(defaultPerms[PermissionTypes.MEMORIES]?.[Permissions.READ] !== undefined && {\n          [Permissions.READ]: isMemoryExplicitlyDisabled\n            ? false\n            : defaultPerms[PermissionTypes.MEMORIES][Permissions.READ],\n        }),\n        ...(defaultPerms[PermissionTypes.MEMORIES]?.[Permissions.UPDATE] !== undefined && {\n          [Permissions.UPDATE]: isMemoryExplicitlyDisabled\n            ? false\n            : defaultPerms[PermissionTypes.MEMORIES][Permissions.UPDATE],\n        }),\n        [Permissions.OPT_OUT]: isPersonalizationEnabled,\n      },\n      [PermissionTypes.MULTI_CONVO]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.multiConvo,\n          defaultPerms[PermissionTypes.MULTI_CONVO]?.[Permissions.USE],\n          defaults.multiConvo,\n        ),\n      },\n      [PermissionTypes.AGENTS]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.agents,\n          defaultPerms[PermissionTypes.AGENTS]?.[Permissions.USE],\n          defaults.agents,\n        ),\n      },\n      [PermissionTypes.TEMPORARY_CHAT]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.temporaryChat,\n          defaultPerms[PermissionTypes.TEMPORARY_CHAT]?.[Permissions.USE],\n          defaults.temporaryChat,\n        ),\n      },\n      [PermissionTypes.RUN_CODE]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.runCode,\n          defaultPerms[PermissionTypes.RUN_CODE]?.[Permissions.USE],\n          defaults.runCode,\n        ),\n      },\n      [PermissionTypes.WEB_SEARCH]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.webSearch,\n          defaultPerms[PermissionTypes.WEB_SEARCH]?.[Permissions.USE],\n          defaults.webSearch,\n        ),\n      },\n      [PermissionTypes.PEOPLE_PICKER]: {\n        [Permissions.VIEW_USERS]: getPermissionValue(\n          loadedInterface.peoplePicker?.users,\n          defaultPerms[PermissionTypes.PEOPLE_PICKER]?.[Permissions.VIEW_USERS],\n          defaults.peoplePicker?.users,\n        ),\n        [Permissions.VIEW_GROUPS]: getPermissionValue(\n          loadedInterface.peoplePicker?.groups,\n          defaultPerms[PermissionTypes.PEOPLE_PICKER]?.[Permissions.VIEW_GROUPS],\n          defaults.peoplePicker?.groups,\n        ),\n        [Permissions.VIEW_ROLES]: getPermissionValue(\n          loadedInterface.peoplePicker?.roles,\n          defaultPerms[PermissionTypes.PEOPLE_PICKER]?.[Permissions.VIEW_ROLES],\n          defaults.peoplePicker?.roles,\n        ),\n      },\n      [PermissionTypes.MARKETPLACE]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.marketplace?.use,\n          defaultPerms[PermissionTypes.MARKETPLACE]?.[Permissions.USE],\n          defaults.marketplace?.use,\n        ),\n      },\n      [PermissionTypes.FILE_SEARCH]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.fileSearch,\n          defaultPerms[PermissionTypes.FILE_SEARCH]?.[Permissions.USE],\n          defaults.fileSearch,\n        ),\n      },\n      [PermissionTypes.FILE_CITATIONS]: {\n        [Permissions.USE]: getPermissionValue(\n          loadedInterface.fileCitations,\n          defaultPerms[PermissionTypes.FILE_CITATIONS]?.[Permissions.USE],\n          defaults.fileCitations,\n        ),\n      },\n    };\n\n    // Check and add each permission type if needed\n    for (const [permType, permissions] of Object.entries(allPermissions)) {\n      addPermissionIfNeeded(permType as PermissionTypes, permissions);\n    }\n\n    // Update permissions if any need updating\n    if (Object.keys(permissionsToUpdate).length > 0) {\n      await updateAccessPermissions(roleName, permissionsToUpdate, existingRole);\n    }\n  }\n}\n","import { logger } from '@librechat/data-schemas';\nimport type { IUser, UserMethods } from '@librechat/data-schemas';\n\n/**\n * Finds or migrates a user for OpenID authentication\n * @returns user object (with migration fields if needed), error message, and whether migration is needed\n */\nexport async function findOpenIDUser({\n  openidId,\n  email,\n  findUser,\n  strategyName = 'openid',\n}: {\n  openidId: string;\n  findUser: UserMethods['findUser'];\n  email?: string;\n  strategyName?: string;\n}): Promise<{ user: IUser | null; error: string | null; migration: boolean }> {\n  let user = await findUser({ openidId });\n  if (!user && email) {\n    user = await findUser({ email });\n    logger.warn(\n      `[${strategyName}] user ${user ? 'found' : 'not found'} with email: ${email} for openidId: ${openidId}`,\n    );\n\n    // If user found by email, check if they're allowed to use OpenID provider\n    if (user && user.provider && user.provider !== 'openid') {\n      logger.warn(\n        `[${strategyName}] Attempted OpenID login by user ${user.email}, was registered with \"${user.provider}\" provider`,\n      );\n      return { user: null, error: 'AUTH_FAILED', migration: false };\n    }\n\n    // If user found by email but doesn't have openidId, prepare for migration\n    if (user && !user.openidId) {\n      logger.info(\n        `[${strategyName}] Preparing user ${user.email} for migration to OpenID with sub: ${openidId}`,\n      );\n      user.provider = 'openid';\n      user.openidId = openidId;\n      return { user, error: null, migration: true };\n    }\n  }\n\n  return { user, error: null, migration: false };\n}\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n","import { randomBytes } from 'crypto';\nimport { logger } from '@librechat/data-schemas';\nimport {\n  registerClient,\n  startAuthorization,\n  exchangeAuthorization,\n  discoverAuthorizationServerMetadata,\n  discoverOAuthProtectedResourceMetadata,\n} from '@modelcontextprotocol/sdk/client/auth.js';\nimport { OAuthMetadataSchema } from '@modelcontextprotocol/sdk/shared/auth.js';\nimport type { MCPOptions } from 'librechat-data-provider';\nimport type { FlowStateManager } from '~/flow/manager';\nimport type {\n  OAuthClientInformation,\n  OAuthProtectedResourceMetadata,\n  MCPOAuthFlowMetadata,\n  MCPOAuthTokens,\n  OAuthMetadata,\n} from './types';\n\n/** Type for the OAuth metadata from the SDK */\ntype SDKOAuthMetadata = Parameters<typeof registerClient>[1]['metadata'];\n\nexport class MCPOAuthHandler {\n  private static readonly FLOW_TYPE = 'mcp_oauth';\n  private static readonly FLOW_TTL = 10 * 60 * 1000; // 10 minutes\n\n  /**\n   * Discovers OAuth metadata from the server\n   */\n  private static async discoverMetadata(serverUrl: string): Promise<{\n    metadata: OAuthMetadata;\n    resourceMetadata?: OAuthProtectedResourceMetadata;\n    authServerUrl: URL;\n  }> {\n    logger.debug(`[MCPOAuth] discoverMetadata called with serverUrl: ${serverUrl}`);\n\n    let authServerUrl = new URL(serverUrl);\n    let resourceMetadata: OAuthProtectedResourceMetadata | undefined;\n\n    try {\n      // Try to discover resource metadata first\n      logger.debug(\n        `[MCPOAuth] Attempting to discover protected resource metadata from ${serverUrl}`,\n      );\n      resourceMetadata = await discoverOAuthProtectedResourceMetadata(serverUrl);\n\n      if (resourceMetadata?.authorization_servers?.length) {\n        authServerUrl = new URL(resourceMetadata.authorization_servers[0]);\n        logger.debug(\n          `[MCPOAuth] Found authorization server from resource metadata: ${authServerUrl}`,\n        );\n      } else {\n        logger.debug(`[MCPOAuth] No authorization servers found in resource metadata`);\n      }\n    } catch (error) {\n      logger.debug('[MCPOAuth] Resource metadata discovery failed, continuing with server URL', {\n        error,\n      });\n    }\n\n    // Discover OAuth metadata\n    logger.debug(`[MCPOAuth] Discovering OAuth metadata from ${authServerUrl}`);\n    const rawMetadata = await discoverAuthorizationServerMetadata(authServerUrl);\n\n    if (!rawMetadata) {\n      logger.error(`[MCPOAuth] Failed to discover OAuth metadata from ${authServerUrl}`);\n      throw new Error('Failed to discover OAuth metadata');\n    }\n\n    logger.debug(`[MCPOAuth] OAuth metadata discovered successfully`);\n    const metadata = await OAuthMetadataSchema.parseAsync(rawMetadata);\n\n    logger.debug(`[MCPOAuth] OAuth metadata parsed successfully`);\n    return {\n      metadata: metadata as unknown as OAuthMetadata,\n      resourceMetadata,\n      authServerUrl,\n    };\n  }\n\n  /**\n   * Registers an OAuth client dynamically\n   */\n  private static async registerOAuthClient(\n    serverUrl: string,\n    metadata: OAuthMetadata,\n    resourceMetadata?: OAuthProtectedResourceMetadata,\n    redirectUri?: string,\n  ): Promise<OAuthClientInformation> {\n    logger.debug(`[MCPOAuth] Starting client registration for ${serverUrl}, server metadata:`, {\n      grant_types_supported: metadata.grant_types_supported,\n      response_types_supported: metadata.response_types_supported,\n      token_endpoint_auth_methods_supported: metadata.token_endpoint_auth_methods_supported,\n      scopes_supported: metadata.scopes_supported,\n    });\n\n    /** Client metadata based on what the server supports */\n    const clientMetadata = {\n      client_name: 'LibreChat MCP Client',\n      redirect_uris: [redirectUri || this.getDefaultRedirectUri()],\n      grant_types: ['authorization_code'] as string[],\n      response_types: ['code'] as string[],\n      token_endpoint_auth_method: 'client_secret_basic',\n      scope: undefined as string | undefined,\n    };\n\n    const supportedGrantTypes = metadata.grant_types_supported || ['authorization_code'];\n    const requestedGrantTypes = ['authorization_code'];\n\n    if (supportedGrantTypes.includes('refresh_token')) {\n      requestedGrantTypes.push('refresh_token');\n      logger.debug(\n        `[MCPOAuth] Server ${serverUrl} supports \\`refresh_token\\` grant type, adding to request`,\n      );\n    } else {\n      logger.debug(`[MCPOAuth] Server ${serverUrl} does not support \\`refresh_token\\` grant type`);\n    }\n    clientMetadata.grant_types = requestedGrantTypes;\n\n    clientMetadata.response_types = metadata.response_types_supported || ['code'];\n\n    if (metadata.token_endpoint_auth_methods_supported) {\n      // Prefer client_secret_basic if supported, otherwise use the first supported method\n      if (metadata.token_endpoint_auth_methods_supported.includes('client_secret_basic')) {\n        clientMetadata.token_endpoint_auth_method = 'client_secret_basic';\n      } else if (metadata.token_endpoint_auth_methods_supported.includes('client_secret_post')) {\n        clientMetadata.token_endpoint_auth_method = 'client_secret_post';\n      } else if (metadata.token_endpoint_auth_methods_supported.includes('none')) {\n        clientMetadata.token_endpoint_auth_method = 'none';\n      } else {\n        clientMetadata.token_endpoint_auth_method =\n          metadata.token_endpoint_auth_methods_supported[0];\n      }\n    }\n\n    const availableScopes = resourceMetadata?.scopes_supported || metadata.scopes_supported;\n    if (availableScopes) {\n      clientMetadata.scope = availableScopes.join(' ');\n    }\n\n    logger.debug(`[MCPOAuth] Registering client for ${serverUrl} with metadata:`, clientMetadata);\n\n    const clientInfo = await registerClient(serverUrl, {\n      metadata: metadata as unknown as SDKOAuthMetadata,\n      clientMetadata,\n    });\n\n    logger.debug(`[MCPOAuth] Client registered successfully for ${serverUrl}:`, {\n      client_id: clientInfo.client_id,\n      has_client_secret: !!clientInfo.client_secret,\n      grant_types: clientInfo.grant_types,\n      scope: clientInfo.scope,\n    });\n\n    return clientInfo;\n  }\n\n  /**\n   * Initiates the OAuth flow for an MCP server\n   */\n  static async initiateOAuthFlow(\n    serverName: string,\n    serverUrl: string,\n    userId: string,\n    config: MCPOptions['oauth'] | undefined,\n  ): Promise<{ authorizationUrl: string; flowId: string; flowMetadata: MCPOAuthFlowMetadata }> {\n    logger.debug(`[MCPOAuth] initiateOAuthFlow called for ${serverName} with URL: ${serverUrl}`);\n\n    const flowId = this.generateFlowId(userId, serverName);\n    const state = this.generateState();\n\n    logger.debug(`[MCPOAuth] Generated flowId: ${flowId}, state: ${state}`);\n\n    try {\n      // Check if we have pre-configured OAuth settings\n      if (config?.authorization_url && config?.token_url && config?.client_id) {\n        logger.debug(`[MCPOAuth] Using pre-configured OAuth settings for ${serverName}`);\n        /** Metadata based on pre-configured settings */\n        const metadata: OAuthMetadata = {\n          authorization_endpoint: config.authorization_url,\n          token_endpoint: config.token_url,\n          issuer: serverUrl,\n          scopes_supported: config.scope?.split(' ') ?? [],\n          grant_types_supported: config?.grant_types_supported ?? [\n            'authorization_code',\n            'refresh_token',\n          ],\n          token_endpoint_auth_methods_supported: config?.token_endpoint_auth_methods_supported ?? [\n            'client_secret_basic',\n            'client_secret_post',\n          ],\n          response_types_supported: config?.response_types_supported ?? ['code'],\n          code_challenge_methods_supported: config?.code_challenge_methods_supported ?? [\n            'S256',\n            'plain',\n          ],\n        };\n        logger.debug(`[MCPOAuth] metadata for \"${serverName}\": ${JSON.stringify(metadata)}`);\n        const clientInfo: OAuthClientInformation = {\n          client_id: config.client_id,\n          client_secret: config.client_secret,\n          redirect_uris: [config.redirect_uri || this.getDefaultRedirectUri(serverName)],\n          scope: config.scope,\n        };\n\n        logger.debug(`[MCPOAuth] Starting authorization with pre-configured settings`);\n        const { authorizationUrl, codeVerifier } = await startAuthorization(serverUrl, {\n          metadata: metadata as unknown as SDKOAuthMetadata,\n          clientInformation: clientInfo,\n          redirectUrl: clientInfo.redirect_uris?.[0] || this.getDefaultRedirectUri(serverName),\n          scope: config.scope,\n        });\n\n        /** Add state parameter with flowId to the authorization URL */\n        authorizationUrl.searchParams.set('state', flowId);\n        logger.debug(`[MCPOAuth] Added state parameter to authorization URL`);\n\n        const flowMetadata: MCPOAuthFlowMetadata = {\n          serverName,\n          userId,\n          serverUrl,\n          state,\n          codeVerifier,\n          clientInfo,\n          metadata,\n        };\n\n        logger.debug(`[MCPOAuth] Authorization URL generated: ${authorizationUrl.toString()}`);\n        return {\n          authorizationUrl: authorizationUrl.toString(),\n          flowId,\n          flowMetadata,\n        };\n      }\n\n      logger.debug(`[MCPOAuth] Starting auto-discovery of OAuth metadata from ${serverUrl}`);\n      const { metadata, resourceMetadata, authServerUrl } = await this.discoverMetadata(serverUrl);\n\n      logger.debug(`[MCPOAuth] OAuth metadata discovered, auth server URL: ${authServerUrl}`);\n\n      /** Dynamic client registration based on the discovered metadata */\n      const redirectUri = config?.redirect_uri || this.getDefaultRedirectUri(serverName);\n      logger.debug(`[MCPOAuth] Registering OAuth client with redirect URI: ${redirectUri}`);\n\n      const clientInfo = await this.registerOAuthClient(\n        authServerUrl.toString(),\n        metadata,\n        resourceMetadata,\n        redirectUri,\n      );\n\n      logger.debug(`[MCPOAuth] Client registered with ID: ${clientInfo.client_id}`);\n\n      /** Authorization Scope */\n      const scope =\n        config?.scope ||\n        resourceMetadata?.scopes_supported?.join(' ') ||\n        metadata.scopes_supported?.join(' ');\n\n      logger.debug(`[MCPOAuth] Starting authorization with scope: ${scope}`);\n\n      let authorizationUrl: URL;\n      let codeVerifier: string;\n\n      try {\n        logger.debug(`[MCPOAuth] Calling startAuthorization...`);\n        const authResult = await startAuthorization(serverUrl, {\n          metadata: metadata as unknown as SDKOAuthMetadata,\n          clientInformation: clientInfo,\n          redirectUrl: redirectUri,\n          scope,\n        });\n\n        authorizationUrl = authResult.authorizationUrl;\n        codeVerifier = authResult.codeVerifier;\n\n        logger.debug(`[MCPOAuth] startAuthorization completed successfully`);\n        logger.debug(`[MCPOAuth] Authorization URL: ${authorizationUrl.toString()}`);\n\n        /** Add state parameter with flowId to the authorization URL */\n        authorizationUrl.searchParams.set('state', flowId);\n        logger.debug(`[MCPOAuth] Added state parameter to authorization URL`);\n\n        if (resourceMetadata?.resource != null && resourceMetadata.resource) {\n          authorizationUrl.searchParams.set('resource', resourceMetadata.resource);\n          logger.debug(\n            `[MCPOAuth] Added resource parameter to authorization URL: ${resourceMetadata.resource}`,\n          );\n        } else {\n          logger.warn(\n            `[MCPOAuth] Resource metadata missing 'resource' property for ${serverName}. ` +\n              'This can cause issues with some Authorization Servers who expect a \"resource\" parameter.',\n          );\n        }\n      } catch (error) {\n        logger.error(`[MCPOAuth] startAuthorization failed:`, error);\n        throw error;\n      }\n\n      const flowMetadata: MCPOAuthFlowMetadata = {\n        serverName,\n        userId,\n        serverUrl,\n        state,\n        codeVerifier,\n        clientInfo,\n        metadata,\n        resourceMetadata,\n      };\n\n      logger.debug(\n        `[MCPOAuth] Authorization URL generated for ${serverName}: ${authorizationUrl.toString()}`,\n      );\n\n      const result = {\n        authorizationUrl: authorizationUrl.toString(),\n        flowId,\n        flowMetadata,\n      };\n\n      logger.debug(\n        `[MCPOAuth] Returning from initiateOAuthFlow with result ${flowId} for ${serverName}`,\n        result,\n      );\n      return result;\n    } catch (error) {\n      logger.error('[MCPOAuth] Failed to initiate OAuth flow', { error, serverName, userId });\n      throw error;\n    }\n  }\n\n  /**\n   * Completes the OAuth flow by exchanging the authorization code for tokens\n   */\n  static async completeOAuthFlow(\n    flowId: string,\n    authorizationCode: string,\n    flowManager: FlowStateManager<MCPOAuthTokens>,\n  ): Promise<MCPOAuthTokens> {\n    try {\n      /** Flow state which contains our metadata */\n      const flowState = await flowManager.getFlowState(flowId, this.FLOW_TYPE);\n      if (!flowState) {\n        throw new Error('OAuth flow not found');\n      }\n\n      const flowMetadata = flowState.metadata as MCPOAuthFlowMetadata;\n      if (!flowMetadata) {\n        throw new Error('OAuth flow metadata not found');\n      }\n\n      const metadata = flowMetadata;\n      if (!metadata.metadata || !metadata.clientInfo || !metadata.codeVerifier) {\n        throw new Error('Invalid flow metadata');\n      }\n\n      let resource: URL | undefined;\n      try {\n        if (metadata.resourceMetadata?.resource != null && metadata.resourceMetadata.resource) {\n          resource = new URL(metadata.resourceMetadata.resource);\n          logger.debug(`[MCPOAuth] Resource URL for flow ${flowId}: ${resource.toString()}`);\n        }\n      } catch (error) {\n        logger.warn(\n          `[MCPOAuth] Invalid resource URL format for flow ${flowId}: '${metadata.resourceMetadata!.resource}'. ` +\n            `Error: ${error instanceof Error ? error.message : 'Unknown error'}. Proceeding without resource parameter.`,\n        );\n        resource = undefined;\n      }\n\n      const tokens = await exchangeAuthorization(metadata.serverUrl, {\n        redirectUri: metadata.clientInfo.redirect_uris?.[0] || this.getDefaultRedirectUri(),\n        metadata: metadata.metadata as unknown as SDKOAuthMetadata,\n        clientInformation: metadata.clientInfo,\n        codeVerifier: metadata.codeVerifier,\n        authorizationCode,\n        resource,\n      });\n\n      logger.debug('[MCPOAuth] Raw tokens from exchange:', {\n        access_token: tokens.access_token ? '[REDACTED]' : undefined,\n        refresh_token: tokens.refresh_token ? '[REDACTED]' : undefined,\n        expires_in: tokens.expires_in,\n        token_type: tokens.token_type,\n        scope: tokens.scope,\n      });\n\n      const mcpTokens: MCPOAuthTokens = {\n        ...tokens,\n        obtained_at: Date.now(),\n        expires_at: tokens.expires_in ? Date.now() + tokens.expires_in * 1000 : undefined,\n      };\n\n      /** Now complete the flow with the tokens */\n      await flowManager.completeFlow(flowId, this.FLOW_TYPE, mcpTokens);\n\n      return mcpTokens;\n    } catch (error) {\n      logger.error('[MCPOAuth] Failed to complete OAuth flow', { error, flowId });\n      await flowManager.failFlow(flowId, this.FLOW_TYPE, error as Error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets the OAuth flow metadata\n   */\n  static async getFlowState(\n    flowId: string,\n    flowManager: FlowStateManager<MCPOAuthTokens>,\n  ): Promise<MCPOAuthFlowMetadata | null> {\n    const flowState = await flowManager.getFlowState(flowId, this.FLOW_TYPE);\n    if (!flowState) {\n      return null;\n    }\n    return flowState.metadata as MCPOAuthFlowMetadata;\n  }\n\n  /**\n   * Generates a flow ID for the OAuth flow\n   * @returns Consistent ID so concurrent requests share the same flow\n   */\n  public static generateFlowId(userId: string, serverName: string): string {\n    return `${userId}:${serverName}`;\n  }\n\n  /**\n   * Generates a secure state parameter\n   */\n  private static generateState(): string {\n    return randomBytes(32).toString('base64url');\n  }\n\n  /**\n   * Gets the default redirect URI for a server\n   */\n  private static getDefaultRedirectUri(serverName?: string): string {\n    const baseUrl = process.env.DOMAIN_SERVER || 'http://localhost:3080';\n    return serverName\n      ? `${baseUrl}/api/mcp/${serverName}/oauth/callback`\n      : `${baseUrl}/api/mcp/oauth/callback`;\n  }\n\n  /**\n   * Refreshes OAuth tokens using a refresh token\n   */\n  static async refreshOAuthTokens(\n    refreshToken: string,\n    metadata: { serverName: string; serverUrl?: string; clientInfo?: OAuthClientInformation },\n    config?: MCPOptions['oauth'],\n  ): Promise<MCPOAuthTokens> {\n    logger.debug(`[MCPOAuth] Refreshing tokens for ${metadata.serverName}`);\n\n    try {\n      /** If we have stored client information from the original flow, use that first */\n      if (metadata.clientInfo?.client_id) {\n        logger.debug(\n          `[MCPOAuth] Using stored client information for token refresh for ${metadata.serverName}`,\n        );\n        logger.debug(\n          `[MCPOAuth] Client ID: ${metadata.clientInfo.client_id} for ${metadata.serverName}`,\n        );\n        logger.debug(\n          `[MCPOAuth] Has client secret: ${!!metadata.clientInfo.client_secret} for ${metadata.serverName}`,\n        );\n        logger.debug(`[MCPOAuth] Stored client info for ${metadata.serverName}:`, {\n          client_id: metadata.clientInfo.client_id,\n          has_client_secret: !!metadata.clientInfo.client_secret,\n          grant_types: metadata.clientInfo.grant_types,\n          scope: metadata.clientInfo.scope,\n        });\n\n        /** Use the stored client information and metadata to determine the token URL */\n        let tokenUrl: string;\n        if (config?.token_url) {\n          tokenUrl = config.token_url;\n        } else if (!metadata.serverUrl) {\n          throw new Error('No token URL available for refresh');\n        } else {\n          /** Auto-discover OAuth configuration for refresh */\n          const oauthMetadata = await discoverAuthorizationServerMetadata(metadata.serverUrl);\n          if (!oauthMetadata) {\n            throw new Error('Failed to discover OAuth metadata for token refresh');\n          }\n          if (!oauthMetadata.token_endpoint) {\n            throw new Error('No token endpoint found in OAuth metadata');\n          }\n          tokenUrl = oauthMetadata.token_endpoint;\n        }\n\n        const body = new URLSearchParams({\n          grant_type: 'refresh_token',\n          refresh_token: refreshToken,\n        });\n\n        /** Add scope if available */\n        if (metadata.clientInfo.scope) {\n          body.append('scope', metadata.clientInfo.scope);\n        }\n\n        const headers: HeadersInit = {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Accept: 'application/json',\n        };\n\n        /** Use client_secret for authentication if available */\n        if (metadata.clientInfo.client_secret) {\n          const clientAuth = Buffer.from(\n            `${metadata.clientInfo.client_id}:${metadata.clientInfo.client_secret}`,\n          ).toString('base64');\n          headers['Authorization'] = `Basic ${clientAuth}`;\n        } else {\n          /** For public clients, client_id must be in the body */\n          body.append('client_id', metadata.clientInfo.client_id);\n        }\n\n        logger.debug(`[MCPOAuth] Refresh request to: ${tokenUrl}`, {\n          body: body.toString(),\n          headers,\n        });\n\n        const response = await fetch(tokenUrl, {\n          method: 'POST',\n          headers,\n          body,\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(\n            `Token refresh failed: ${response.status} ${response.statusText} - ${errorText}`,\n          );\n        }\n\n        const tokens = await response.json();\n\n        return {\n          ...tokens,\n          obtained_at: Date.now(),\n          expires_at: tokens.expires_in ? Date.now() + tokens.expires_in * 1000 : undefined,\n        };\n      }\n\n      // Fallback: If we have pre-configured OAuth settings, use them\n      if (config?.token_url && config?.client_id) {\n        logger.debug(`[MCPOAuth] Using pre-configured OAuth settings for token refresh`);\n\n        const tokenUrl = new URL(config.token_url);\n        const clientAuth = config.client_secret\n          ? Buffer.from(`${config.client_id}:${config.client_secret}`).toString('base64')\n          : null;\n\n        const body = new URLSearchParams({\n          grant_type: 'refresh_token',\n          refresh_token: refreshToken,\n        });\n\n        if (config.scope) {\n          body.append('scope', config.scope);\n        }\n\n        const headers: HeadersInit = {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Accept: 'application/json',\n        };\n\n        if (clientAuth) {\n          headers['Authorization'] = `Basic ${clientAuth}`;\n        } else {\n          // Use client_id in body for public clients\n          body.append('client_id', config.client_id);\n        }\n\n        const response = await fetch(tokenUrl, {\n          method: 'POST',\n          headers,\n          body,\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(\n            `Token refresh failed: ${response.status} ${response.statusText} - ${errorText}`,\n          );\n        }\n\n        const tokens = await response.json();\n\n        return {\n          ...tokens,\n          obtained_at: Date.now(),\n          expires_at: tokens.expires_in ? Date.now() + tokens.expires_in * 1000 : undefined,\n        };\n      }\n\n      /** For auto-discovered OAuth, we need the server URL */\n      if (!metadata.serverUrl) {\n        throw new Error('Server URL required for auto-discovered OAuth token refresh');\n      }\n\n      /** Auto-discover OAuth configuration for refresh */\n      const oauthMetadata = await discoverAuthorizationServerMetadata(metadata.serverUrl);\n\n      if (!oauthMetadata?.token_endpoint) {\n        throw new Error('No token endpoint found in OAuth metadata');\n      }\n\n      const tokenUrl = new URL(oauthMetadata.token_endpoint);\n\n      const body = new URLSearchParams({\n        grant_type: 'refresh_token',\n        refresh_token: refreshToken,\n      });\n\n      const headers: HeadersInit = {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json',\n      };\n\n      const response = await fetch(tokenUrl, {\n        method: 'POST',\n        headers,\n        body,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(\n          `Token refresh failed: ${response.status} ${response.statusText} - ${errorText}`,\n        );\n      }\n\n      const tokens = await response.json();\n\n      return {\n        ...tokens,\n        obtained_at: Date.now(),\n        expires_at: tokens.expires_in ? Date.now() + tokens.expires_in * 1000 : undefined,\n      };\n    } catch (error) {\n      logger.error(`[MCPOAuth] Failed to refresh tokens for ${metadata.serverName}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Revokes OAuth tokens at the authorization server (RFC 7009)\n   */\n  public static async revokeOAuthToken(\n    serverName: string,\n    token: string,\n    tokenType: 'refresh' | 'access',\n    metadata: {\n      serverUrl: string;\n      clientId: string;\n      clientSecret: string;\n      revocationEndpoint?: string;\n      revocationEndpointAuthMethodsSupported?: string[];\n    },\n  ): Promise<void> {\n    // build the revoke URL, falling back to the server URL + /revoke if no revocation endpoint is provided\n    const revokeUrl: URL =\n      metadata.revocationEndpoint != null\n        ? new URL(metadata.revocationEndpoint)\n        : new URL('/revoke', metadata.serverUrl);\n\n    // detect auth method to use\n    const authMethods = metadata.revocationEndpointAuthMethodsSupported ?? [\n      'client_secret_basic', // RFC 8414 (https://datatracker.ietf.org/doc/html/rfc8414)\n    ];\n    const usesBasicAuth = authMethods.includes('client_secret_basic');\n    const usesClientSecretPost = authMethods.includes('client_secret_post');\n\n    // init the request headers\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    };\n\n    // init the request body\n    const body = new URLSearchParams({ token });\n    body.set('token_type_hint', tokenType === 'refresh' ? 'refresh_token' : 'access_token');\n\n    // process auth method\n    if (usesBasicAuth) {\n      // encode the client id and secret and add to the headers\n      const credentials = Buffer.from(`${metadata.clientId}:${metadata.clientSecret}`).toString(\n        'base64',\n      );\n      headers['Authorization'] = `Basic ${credentials}`;\n    } else if (usesClientSecretPost) {\n      // add the client id and secret to the body\n      body.set('client_secret', metadata.clientSecret);\n      body.set('client_id', metadata.clientId);\n    }\n\n    // perform the revoke request\n    logger.info(`[MCPOAuth] Revoking tokens for ${serverName} via ${revokeUrl.toString()}`);\n    const response = await fetch(revokeUrl, {\n      method: 'POST',\n      body: body.toString(),\n      headers,\n    });\n\n    if (!response.ok) {\n      logger.error(`[MCPOAuth] Token revocation failed for ${serverName}: HTTP ${response.status}`);\n      throw new Error(`Token revocation failed: HTTP ${response.status}`);\n    }\n  }\n}\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n    err.code = 'MISSING_DATA'\n    throw err\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenvx.com/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      const err = new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing key part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing environment part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n    err.code = 'NOT_FOUND_DOTENV_ENVIRONMENT'\n    throw err\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let possibleVaultPath = null\n\n  if (options && options.path && options.path.length > 0) {\n    if (Array.isArray(options.path)) {\n      for (const filepath of options.path) {\n        if (fs.existsSync(filepath)) {\n          possibleVaultPath = filepath.endsWith('.vault') ? filepath : `${filepath}.vault`\n        }\n      }\n    } else {\n      possibleVaultPath = options.path.endsWith('.vault') ? options.path : `${options.path}.vault`\n    }\n  } else {\n    possibleVaultPath = path.resolve(process.cwd(), '.env.vault')\n  }\n\n  if (fs.existsSync(possibleVaultPath)) {\n    return possibleVaultPath\n  }\n\n  return null\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  const dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options && options.encoding) {\n    encoding = options.encoding\n  } else {\n    if (debug) {\n      _debug('No encoding is specified. UTF-8 is used by default')\n    }\n  }\n\n  let optionPaths = [dotenvPath] // default, look for .env\n  if (options && options.path) {\n    if (!Array.isArray(options.path)) {\n      optionPaths = [_resolveHome(options.path)]\n    } else {\n      optionPaths = [] // reset default\n      for (const filepath of options.path) {\n        optionPaths.push(_resolveHome(filepath))\n      }\n    }\n  }\n\n  // Build the parsed data in a temporary object (because we need to return it).  Once we have the final\n  // parsed data, we will combine it with process.env (or options.processEnv if provided).\n  let lastError\n  const parsedAll = {}\n  for (const path of optionPaths) {\n    try {\n      // Specifying an encoding returns a string instead of a buffer\n      const parsed = DotenvModule.parse(fs.readFileSync(path, { encoding }))\n\n      DotenvModule.populate(parsedAll, parsed, options)\n    } catch (e) {\n      if (debug) {\n        _debug(`Failed to load ${path} ${e.message}`)\n      }\n      lastError = e\n    }\n  }\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsedAll, options)\n\n  if (lastError) {\n    return { parsed: parsedAll, error: lastError }\n  } else {\n    return { parsed: parsedAll }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  const vaultPath = _vaultPath(options)\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!vaultPath) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.subarray(0, 12)\n  const authTag = ciphertext.subarray(-16)\n  ciphertext = ciphertext.subarray(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const err = new Error('INVALID_DOTENV_KEY: It must be 64 characters long (or more)')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    } else if (decryptionFailed) {\n      const err = new Error('DECRYPTION_FAILED: Please check your DOTENV_KEY')\n      err.code = 'DECRYPTION_FAILED'\n      throw err\n    } else {\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    const err = new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n    err.code = 'OBJECT_REQUIRED'\n    throw err\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n","// ../config.js accepts options via environment variables\nconst options = {}\n\nif (process.env.DOTENV_CONFIG_ENCODING != null) {\n  options.encoding = process.env.DOTENV_CONFIG_ENCODING\n}\n\nif (process.env.DOTENV_CONFIG_PATH != null) {\n  options.path = process.env.DOTENV_CONFIG_PATH\n}\n\nif (process.env.DOTENV_CONFIG_DEBUG != null) {\n  options.debug = process.env.DOTENV_CONFIG_DEBUG\n}\n\nif (process.env.DOTENV_CONFIG_OVERRIDE != null) {\n  options.override = process.env.DOTENV_CONFIG_OVERRIDE\n}\n\nif (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {\n  options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY\n}\n\nmodule.exports = options\n","const re = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/\n\nmodule.exports = function optionMatcher (args) {\n  return args.reduce(function (acc, cur) {\n    const matches = cur.match(re)\n    if (matches) {\n      acc[matches[1]] = matches[2]\n    }\n    return acc\n  }, {})\n}\n","(function () {\n  require('./lib/main').config(\n    Object.assign(\n      {},\n      require('./lib/env-options'),\n      require('./lib/cli-options')(process.argv)\n    )\n  )\n})()\n","import 'dotenv/config';\nimport crypto from 'node:crypto';\nconst { webcrypto } = crypto;\n\n// Use hex decoding for both key and IV for legacy methods.\nconst key = Buffer.from(process.env.CREDS_KEY ?? '', 'hex');\nconst iv = Buffer.from(process.env.CREDS_IV ?? '', 'hex');\nconst algorithm = 'AES-CBC';\n\n// --- Legacy v1/v2 Setup: AES-CBC with fixed key and IV ---\n\nexport async function encrypt(value: string) {\n  const cryptoKey = await webcrypto.subtle.importKey('raw', key, { name: algorithm }, false, [\n    'encrypt',\n  ]);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(value);\n  const encryptedBuffer = await webcrypto.subtle.encrypt(\n    { name: algorithm, iv: iv },\n    cryptoKey,\n    data,\n  );\n  return Buffer.from(encryptedBuffer).toString('hex');\n}\n\nexport async function decrypt(encryptedValue: string) {\n  const cryptoKey = await webcrypto.subtle.importKey('raw', key, { name: algorithm }, false, [\n    'decrypt',\n  ]);\n  const encryptedBuffer = Buffer.from(encryptedValue, 'hex');\n  const decryptedBuffer = await webcrypto.subtle.decrypt(\n    { name: algorithm, iv: iv },\n    cryptoKey,\n    encryptedBuffer,\n  );\n  const decoder = new TextDecoder();\n  return decoder.decode(decryptedBuffer);\n}\n\n// --- v2: AES-CBC with a random IV per encryption ---\n\nexport async function encryptV2(value: string) {\n  const gen_iv = webcrypto.getRandomValues(new Uint8Array(16));\n  const cryptoKey = await webcrypto.subtle.importKey('raw', key, { name: algorithm }, false, [\n    'encrypt',\n  ]);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(value);\n  const encryptedBuffer = await webcrypto.subtle.encrypt(\n    { name: algorithm, iv: gen_iv },\n    cryptoKey,\n    data,\n  );\n  return Buffer.from(gen_iv).toString('hex') + ':' + Buffer.from(encryptedBuffer).toString('hex');\n}\n\nexport async function decryptV2(encryptedValue: string) {\n  const parts = encryptedValue.split(':');\n  if (parts.length === 1) {\n    return parts[0];\n  }\n  const gen_iv = Buffer.from(parts.shift() ?? '', 'hex');\n  const encrypted = parts.join(':');\n  const cryptoKey = await webcrypto.subtle.importKey('raw', key, { name: algorithm }, false, [\n    'decrypt',\n  ]);\n  const encryptedBuffer = Buffer.from(encrypted, 'hex');\n  const decryptedBuffer = await webcrypto.subtle.decrypt(\n    { name: algorithm, iv: gen_iv },\n    cryptoKey,\n    encryptedBuffer,\n  );\n  const decoder = new TextDecoder();\n  return decoder.decode(decryptedBuffer);\n}\n\n// --- v3: AES-256-CTR using Node's crypto functions ---\nconst algorithm_v3 = 'aes-256-ctr';\n\n/**\n * Encrypts a value using AES-256-CTR.\n * Note: AES-256 requires a 32-byte key. Ensure that process.env.CREDS_KEY is a 64-character hex string.\n *\n * @param value - The plaintext to encrypt.\n * @returns The encrypted string with a \"v3:\" prefix.\n */\nexport function encryptV3(value: string) {\n  if (key.length !== 32) {\n    throw new Error(`Invalid key length: expected 32 bytes, got ${key.length} bytes`);\n  }\n  const iv_v3 = crypto.randomBytes(16);\n  const cipher = crypto.createCipheriv(algorithm_v3, key, iv_v3);\n  const encrypted = Buffer.concat([cipher.update(value, 'utf8'), cipher.final()]);\n  return `v3:${iv_v3.toString('hex')}:${encrypted.toString('hex')}`;\n}\n\nexport function decryptV3(encryptedValue: string) {\n  const parts = encryptedValue.split(':');\n  if (parts[0] !== 'v3') {\n    throw new Error('Not a v3 encrypted value');\n  }\n  const iv_v3 = Buffer.from(parts[1], 'hex');\n  const encryptedText = Buffer.from(parts.slice(2).join(':'), 'hex');\n  const decipher = crypto.createDecipheriv(algorithm_v3, key, iv_v3);\n  const decrypted = Buffer.concat([decipher.update(encryptedText), decipher.final()]);\n  return decrypted.toString('utf8');\n}\n\nexport async function getRandomValues(length: number) {\n  if (!Number.isInteger(length) || length <= 0) {\n    throw new Error('Length must be a positive integer');\n  }\n  const randomValues = new Uint8Array(length);\n  webcrypto.getRandomValues(randomValues);\n  return Buffer.from(randomValues).toString('hex');\n}\n\n/**\n * Computes SHA-256 hash for the given input.\n * @param input - The input to hash.\n * @returns The SHA-256 hash of the input.\n */\nexport async function hashBackupCode(input: string) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(input);\n  const hashBuffer = await webcrypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n}\n","import jwt from 'jsonwebtoken';\n\n/**\n * Generate a short-lived JWT token\n * @param {String} userId - The ID of the user\n * @param {String} [expireIn='5m'] - The expiration time for the token (default is 5 minutes)\n * @returns {String} - The generated JWT token\n */\nexport const generateShortLivedToken = (userId: string, expireIn: string = '5m'): string => {\n  return jwt.sign({ id: userId }, process.env.JWT_SECRET!, {\n    expiresIn: expireIn,\n    algorithm: 'HS256',\n  });\n};\n","export enum CONSTANTS {\n  mcp_delimiter = '_mcp_',\n  /** System user ID for app-level OAuth tokens (all zeros ObjectId) */\n  SYSTEM_USER_ID = '000000000000000000000000',\n}\n\nexport function isSystemUserId(userId?: string): boolean {\n  return userId === CONSTANTS.SYSTEM_USER_ID;\n}\n","import { logger } from '@librechat/data-schemas';\nimport type { OAuthTokens, OAuthClientInformation } from '@modelcontextprotocol/sdk/shared/auth.js';\nimport type { TokenMethods, IToken } from '@librechat/data-schemas';\nimport type { MCPOAuthTokens, ExtendedOAuthTokens, OAuthMetadata } from './types';\nimport { encryptV2, decryptV2 } from '~/crypto';\nimport { isSystemUserId } from '~/mcp/enum';\n\ninterface StoreTokensParams {\n  userId: string;\n  serverName: string;\n  tokens: OAuthTokens | ExtendedOAuthTokens | MCPOAuthTokens;\n  createToken: TokenMethods['createToken'];\n  updateToken?: TokenMethods['updateToken'];\n  findToken?: TokenMethods['findToken'];\n  clientInfo?: OAuthClientInformation;\n  metadata?: OAuthMetadata;\n  /** Optional: Pass existing token state to avoid duplicate DB calls */\n  existingTokens?: {\n    accessToken?: IToken | null;\n    refreshToken?: IToken | null;\n    clientInfoToken?: IToken | null;\n  };\n}\n\ninterface GetTokensParams {\n  userId: string;\n  serverName: string;\n  findToken: TokenMethods['findToken'];\n  refreshTokens?: (\n    refreshToken: string,\n    metadata: { userId: string; serverName: string; identifier: string },\n  ) => Promise<MCPOAuthTokens>;\n  createToken?: TokenMethods['createToken'];\n  updateToken?: TokenMethods['updateToken'];\n}\n\nexport class MCPTokenStorage {\n  static getLogPrefix(userId: string, serverName: string): string {\n    return isSystemUserId(userId)\n      ? `[MCP][${serverName}]`\n      : `[MCP][User: ${userId}][${serverName}]`;\n  }\n\n  /**\n   * Stores OAuth tokens for an MCP server\n   *\n   * @param params.existingTokens - Optional: Pass existing token state to avoid duplicate DB calls.\n   * This is useful when refreshing tokens, as getTokens() already has the token state.\n   */\n  static async storeTokens({\n    userId,\n    serverName,\n    tokens,\n    createToken,\n    updateToken,\n    findToken,\n    clientInfo,\n    existingTokens,\n    metadata,\n  }: StoreTokensParams): Promise<void> {\n    const logPrefix = this.getLogPrefix(userId, serverName);\n\n    try {\n      const identifier = `mcp:${serverName}`;\n\n      // Encrypt and store access token\n      const encryptedAccessToken = await encryptV2(tokens.access_token);\n\n      logger.debug(\n        `${logPrefix} Token expires_in: ${'expires_in' in tokens ? tokens.expires_in : 'N/A'}, expires_at: ${'expires_at' in tokens ? tokens.expires_at : 'N/A'}`,\n      );\n\n      // Handle both expires_in and expires_at formats\n      let accessTokenExpiry: Date;\n      if ('expires_at' in tokens && tokens.expires_at) {\n        /** MCPOAuthTokens format - already has calculated expiry */\n        logger.debug(`${logPrefix} Using expires_at: ${tokens.expires_at}`);\n        accessTokenExpiry = new Date(tokens.expires_at);\n      } else if (tokens.expires_in) {\n        /** Standard OAuthTokens format - calculate expiry */\n        logger.debug(`${logPrefix} Using expires_in: ${tokens.expires_in}`);\n        accessTokenExpiry = new Date(Date.now() + tokens.expires_in * 1000);\n      } else {\n        /** No expiry provided - default to 1 year */\n        logger.debug(`${logPrefix} No expiry provided, using default`);\n        accessTokenExpiry = new Date(Date.now() + 365 * 24 * 60 * 60 * 1000);\n      }\n\n      logger.debug(`${logPrefix} Calculated expiry date: ${accessTokenExpiry.toISOString()}`);\n      logger.debug(\n        `${logPrefix} Date object: ${JSON.stringify({\n          time: accessTokenExpiry.getTime(),\n          valid: !isNaN(accessTokenExpiry.getTime()),\n          iso: accessTokenExpiry.toISOString(),\n        })}`,\n      );\n\n      // Ensure the date is valid before passing to createToken\n      if (isNaN(accessTokenExpiry.getTime())) {\n        logger.error(`${logPrefix} Invalid expiry date calculated, using default`);\n        accessTokenExpiry = new Date(Date.now() + 365 * 24 * 60 * 60 * 1000);\n      }\n\n      // Calculate expiresIn (seconds from now)\n      const expiresIn = Math.floor((accessTokenExpiry.getTime() - Date.now()) / 1000);\n\n      const accessTokenData = {\n        userId,\n        type: 'mcp_oauth',\n        identifier,\n        token: encryptedAccessToken,\n        expiresIn: expiresIn > 0 ? expiresIn : 365 * 24 * 60 * 60, // Default to 1 year if negative\n      };\n\n      // Check if token already exists and update if it does\n      if (findToken && updateToken) {\n        // Use provided existing token state if available, otherwise look it up\n        const existingToken =\n          existingTokens?.accessToken !== undefined\n            ? existingTokens.accessToken\n            : await findToken({ userId, identifier });\n\n        if (existingToken) {\n          await updateToken({ userId, identifier }, accessTokenData);\n          logger.debug(`${logPrefix} Updated existing access token`);\n        } else {\n          await createToken(accessTokenData);\n          logger.debug(`${logPrefix} Created new access token`);\n        }\n      } else {\n        // Create new token if it's initial store or update methods not provided\n        await createToken(accessTokenData);\n        logger.debug(`${logPrefix} Created access token (no update methods available)`);\n      }\n\n      // Store refresh token if available\n      if (tokens.refresh_token) {\n        const encryptedRefreshToken = await encryptV2(tokens.refresh_token);\n        const extendedTokens = tokens as ExtendedOAuthTokens;\n        const refreshTokenExpiry = extendedTokens.refresh_token_expires_in\n          ? new Date(Date.now() + extendedTokens.refresh_token_expires_in * 1000)\n          : new Date(Date.now() + 365 * 24 * 60 * 60 * 1000); // Default to 1 year\n\n        /** Calculated expiresIn for refresh token */\n        const refreshExpiresIn = Math.floor((refreshTokenExpiry.getTime() - Date.now()) / 1000);\n\n        const refreshTokenData = {\n          userId,\n          type: 'mcp_oauth_refresh',\n          identifier: `${identifier}:refresh`,\n          token: encryptedRefreshToken,\n          expiresIn: refreshExpiresIn > 0 ? refreshExpiresIn : 365 * 24 * 60 * 60,\n        };\n\n        // Check if refresh token already exists and update if it does\n        if (findToken && updateToken) {\n          // Use provided existing token state if available, otherwise look it up\n          const existingRefreshToken =\n            existingTokens?.refreshToken !== undefined\n              ? existingTokens.refreshToken\n              : await findToken({\n                  userId,\n                  identifier: `${identifier}:refresh`,\n                });\n\n          if (existingRefreshToken) {\n            await updateToken({ userId, identifier: `${identifier}:refresh` }, refreshTokenData);\n            logger.debug(`${logPrefix} Updated existing refresh token`);\n          } else {\n            await createToken(refreshTokenData);\n            logger.debug(`${logPrefix} Created new refresh token`);\n          }\n        } else {\n          await createToken(refreshTokenData);\n          logger.debug(`${logPrefix} Created refresh token (no update methods available)`);\n        }\n      }\n\n      /** Store client information if provided */\n      if (clientInfo) {\n        logger.debug(`${logPrefix} Storing client info:`, {\n          client_id: clientInfo.client_id,\n          has_client_secret: !!clientInfo.client_secret,\n        });\n        const encryptedClientInfo = await encryptV2(JSON.stringify(clientInfo));\n\n        const clientInfoData = {\n          userId,\n          type: 'mcp_oauth_client',\n          identifier: `${identifier}:client`,\n          token: encryptedClientInfo,\n          expiresIn: 365 * 24 * 60 * 60,\n          metadata,\n        };\n\n        // Check if client info already exists and update if it does\n        if (findToken && updateToken) {\n          // Use provided existing token state if available, otherwise look it up\n          const existingClientInfo =\n            existingTokens?.clientInfoToken !== undefined\n              ? existingTokens.clientInfoToken\n              : await findToken({\n                  userId,\n                  identifier: `${identifier}:client`,\n                });\n\n          if (existingClientInfo) {\n            await updateToken({ userId, identifier: `${identifier}:client` }, clientInfoData);\n            logger.debug(`${logPrefix} Updated existing client info`);\n          } else {\n            await createToken(clientInfoData);\n            logger.debug(`${logPrefix} Created new client info`);\n          }\n        } else {\n          await createToken(clientInfoData);\n          logger.debug(`${logPrefix} Created client info (no update methods available)`);\n        }\n      }\n\n      logger.debug(`${logPrefix} Stored OAuth tokens`);\n    } catch (error) {\n      const logPrefix = this.getLogPrefix(userId, serverName);\n      logger.error(`${logPrefix} Failed to store tokens`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Retrieves OAuth tokens for an MCP server\n   */\n  static async getTokens({\n    userId,\n    serverName,\n    findToken,\n    createToken,\n    updateToken,\n    refreshTokens,\n  }: GetTokensParams): Promise<MCPOAuthTokens | null> {\n    const logPrefix = this.getLogPrefix(userId, serverName);\n\n    try {\n      const identifier = `mcp:${serverName}`;\n\n      // Get access token\n      const accessTokenData = await findToken({\n        userId,\n        type: 'mcp_oauth',\n        identifier,\n      });\n\n      /** Check if access token is missing or expired */\n      const isMissing = !accessTokenData;\n      const isExpired = accessTokenData?.expiresAt && new Date() >= accessTokenData.expiresAt;\n\n      if (isMissing || isExpired) {\n        logger.info(`${logPrefix} Access token ${isMissing ? 'missing' : 'expired'}`);\n\n        /** Refresh data if we have a refresh token and refresh function */\n        const refreshTokenData = await findToken({\n          userId,\n          type: 'mcp_oauth_refresh',\n          identifier: `${identifier}:refresh`,\n        });\n\n        if (!refreshTokenData) {\n          logger.info(\n            `${logPrefix} Access token ${isMissing ? 'missing' : 'expired'} and no refresh token available`,\n          );\n          return null;\n        }\n\n        if (!refreshTokens) {\n          logger.warn(\n            `${logPrefix} Access token ${isMissing ? 'missing' : 'expired'}, refresh token available but no \\`refreshTokens\\` provided`,\n          );\n          return null;\n        }\n\n        if (!createToken) {\n          logger.warn(\n            `${logPrefix} Access token ${isMissing ? 'missing' : 'expired'}, refresh token available but no \\`createToken\\` function provided`,\n          );\n          return null;\n        }\n\n        try {\n          logger.info(`${logPrefix} Attempting to refresh token`);\n          const decryptedRefreshToken = await decryptV2(refreshTokenData.token);\n\n          /** Client information if available */\n          let clientInfo;\n          let clientInfoData;\n          try {\n            clientInfoData = await findToken({\n              userId,\n              type: 'mcp_oauth_client',\n              identifier: `${identifier}:client`,\n            });\n            if (clientInfoData) {\n              const decryptedClientInfo = await decryptV2(clientInfoData.token);\n              clientInfo = JSON.parse(decryptedClientInfo);\n              logger.debug(`${logPrefix} Retrieved client info:`, {\n                client_id: clientInfo.client_id,\n                has_client_secret: !!clientInfo.client_secret,\n              });\n            }\n          } catch {\n            logger.debug(`${logPrefix} No client info found`);\n          }\n\n          const metadata = {\n            userId,\n            serverName,\n            identifier,\n            clientInfo,\n          };\n\n          const newTokens = await refreshTokens(decryptedRefreshToken, metadata);\n\n          // Store the refreshed tokens (handles both create and update)\n          // Pass existing token state to avoid duplicate DB calls\n          await this.storeTokens({\n            userId,\n            serverName,\n            tokens: newTokens,\n            createToken,\n            updateToken,\n            findToken,\n            clientInfo,\n            existingTokens: {\n              accessToken: accessTokenData, // We know this is expired/missing\n              refreshToken: refreshTokenData, // We already have this\n              clientInfoToken: clientInfoData, // We already looked this up\n            },\n          });\n\n          logger.info(`${logPrefix} Successfully refreshed and stored OAuth tokens`);\n          return newTokens;\n        } catch (refreshError) {\n          logger.error(`${logPrefix} Failed to refresh tokens`, refreshError);\n          // Check if it's an unauthorized_client error (refresh not supported)\n          const errorMessage =\n            refreshError instanceof Error ? refreshError.message : String(refreshError);\n          if (errorMessage.includes('unauthorized_client')) {\n            logger.info(\n              `${logPrefix} Server does not support refresh tokens for this client. New authentication required.`,\n            );\n          }\n          return null;\n        }\n      }\n\n      // If we reach here, access token should exist and be valid\n      if (!accessTokenData) {\n        return null;\n      }\n\n      const decryptedAccessToken = await decryptV2(accessTokenData.token);\n\n      /** Get refresh token if available */\n      const refreshTokenData = await findToken({\n        userId,\n        type: 'mcp_oauth_refresh',\n        identifier: `${identifier}:refresh`,\n      });\n\n      const tokens: MCPOAuthTokens = {\n        access_token: decryptedAccessToken,\n        token_type: 'Bearer',\n        obtained_at: accessTokenData.createdAt.getTime(),\n        expires_at: accessTokenData.expiresAt?.getTime(),\n      };\n\n      if (refreshTokenData) {\n        tokens.refresh_token = await decryptV2(refreshTokenData.token);\n      }\n\n      logger.debug(`${logPrefix} Loaded existing OAuth tokens from storage`);\n      return tokens;\n    } catch (error) {\n      logger.error(`${logPrefix} Failed to retrieve tokens`, error);\n      return null;\n    }\n  }\n\n  static async getClientInfoAndMetadata({\n    userId,\n    serverName,\n    findToken,\n  }: {\n    userId: string;\n    serverName: string;\n    findToken: TokenMethods['findToken'];\n  }): Promise<{\n    clientInfo: OAuthClientInformation;\n    clientMetadata: Record<string, unknown>;\n  } | null> {\n    const identifier = `mcp:${serverName}`;\n\n    const clientInfoData: IToken | null = await findToken({\n      userId,\n      type: 'mcp_oauth_client',\n      identifier: `${identifier}:client`,\n    });\n    if (clientInfoData == null) {\n      return null;\n    }\n\n    const tokenData = await decryptV2(clientInfoData.token);\n    const clientInfo = JSON.parse(tokenData);\n\n    // get metadata from the token as a plain object. While it's defined as a Map in the database type, it's a plain object at runtime.\n    function getMetadata(\n      metadata: Map<string, unknown> | Record<string, unknown> | null,\n    ): Record<string, unknown> {\n      if (metadata == null) {\n        return {};\n      }\n      if (metadata instanceof Map) {\n        return Object.fromEntries(metadata);\n      }\n      return { ...(metadata as Record<string, unknown>) };\n    }\n    const clientMetadata = getMetadata(clientInfoData.metadata ?? null);\n\n    return {\n      clientInfo,\n      clientMetadata,\n    };\n  }\n\n  /**\n   * Deletes all OAuth-related tokens for a specific user and server\n   */\n  static async deleteUserTokens({\n    userId,\n    serverName,\n    deleteToken,\n  }: {\n    userId: string;\n    serverName: string;\n    deleteToken: (filter: { userId: string; type: string; identifier: string }) => Promise<void>;\n  }): Promise<void> {\n    const identifier = `mcp:${serverName}`;\n\n    // delete client info token\n    await deleteToken({\n      userId,\n      type: 'mcp_oauth_client',\n      identifier: `${identifier}:client`,\n    });\n\n    // delete access token\n    await deleteToken({\n      userId,\n      type: 'mcp_oauth',\n      identifier,\n    });\n\n    // delete refresh token\n    await deleteToken({\n      userId,\n      type: 'mcp_oauth_refresh',\n      identifier: `${identifier}:refresh`,\n    });\n  }\n}\n","import { math, isEnabled } from '~/utils';\n\n/**\n * Centralized configuration for MCP-related environment variables.\n * Provides typed access to MCP settings with default values.\n */\nexport const mcpConfig = {\n  OAUTH_ON_AUTH_ERROR: isEnabled(process.env.MCP_OAUTH_ON_AUTH_ERROR ?? true),\n  OAUTH_DETECTION_TIMEOUT: math(process.env.MCP_OAUTH_DETECTION_TIMEOUT ?? 5000),\n  CONNECTION_CHECK_TTL: math(process.env.MCP_CONNECTION_CHECK_TTL ?? 60000),\n};\n","// ATTENTION: If you modify OAuth detection logic in this file, run the integration tests to verify:\n// npx jest --testMatch=\"**/detectOAuth.integration.dev.ts\" (from packages/api directory)\n//\n// These tests are excluded from CI because they make live HTTP requests to external services,\n// which could cause flaky builds due to network issues or changes in third-party endpoints.\n// Manual testing ensures the OAuth detection still works against real MCP servers.\n\nimport { discoverOAuthProtectedResourceMetadata } from '@modelcontextprotocol/sdk/client/auth.js';\nimport { mcpConfig } from '../mcpConfig';\n\nexport interface OAuthDetectionResult {\n  requiresOAuth: boolean;\n  method: 'protected-resource-metadata' | '401-challenge-metadata' | 'no-metadata-found';\n  metadata?: Record<string, unknown> | null;\n}\n\n/**\n * Detects if an MCP server requires OAuth authentication using proactive discovery methods.\n *\n * This function implements a comprehensive OAuth detection strategy:\n * 1. Standard Protected Resource Metadata (RFC 9728) - checks /.well-known/oauth-protected-resource\n * 2. 401 Challenge Method - checks WWW-Authenticate header for resource_metadata URL\n * 3. Optional fallback: treat any 401/403 response as OAuth requirement (if MCP_OAUTH_ON_AUTH_ERROR=true)\n *\n * @param serverUrl - The MCP server URL to check for OAuth requirements\n * @returns Promise<OAuthDetectionResult> - OAuth requirement details\n */\nexport async function detectOAuthRequirement(serverUrl: string): Promise<OAuthDetectionResult> {\n  const protectedResourceResult = await checkProtectedResourceMetadata(serverUrl);\n  if (protectedResourceResult) return protectedResourceResult;\n\n  const challengeResult = await check401ChallengeMetadata(serverUrl);\n  if (challengeResult) return challengeResult;\n\n  const fallbackResult = await checkAuthErrorFallback(serverUrl);\n  if (fallbackResult) return fallbackResult;\n\n  // No OAuth detected\n  return {\n    requiresOAuth: false,\n    method: 'no-metadata-found',\n    metadata: null,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n// ------------------------ Private helper functions for OAuth detection -------------------------//\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Checks for OAuth using standard protected resource metadata (RFC 9728)\nasync function checkProtectedResourceMetadata(\n  serverUrl: string,\n): Promise<OAuthDetectionResult | null> {\n  try {\n    const resourceMetadata = await discoverOAuthProtectedResourceMetadata(serverUrl);\n\n    if (!resourceMetadata?.authorization_servers?.length) return null;\n\n    return {\n      requiresOAuth: true,\n      method: 'protected-resource-metadata',\n      metadata: resourceMetadata,\n    };\n  } catch {\n    return null;\n  }\n}\n\n// Checks for OAuth using 401 challenge with resource metadata URL\nasync function check401ChallengeMetadata(serverUrl: string): Promise<OAuthDetectionResult | null> {\n  try {\n    const response = await fetch(serverUrl, {\n      method: 'HEAD',\n      signal: AbortSignal.timeout(mcpConfig.OAUTH_DETECTION_TIMEOUT),\n    });\n\n    if (response.status !== 401) return null;\n\n    const wwwAuth = response.headers.get('www-authenticate');\n    const metadataUrl = wwwAuth?.match(/resource_metadata=\"([^\"]+)\"/)?.[1];\n    if (!metadataUrl) return null;\n\n    const metadataResponse = await fetch(metadataUrl, {\n      signal: AbortSignal.timeout(mcpConfig.OAUTH_DETECTION_TIMEOUT),\n    });\n    const metadata = await metadataResponse.json();\n\n    if (!metadata?.authorization_servers?.length) return null;\n\n    return {\n      requiresOAuth: true,\n      method: '401-challenge-metadata',\n      metadata,\n    };\n  } catch {\n    return null;\n  }\n}\n\n// Fallback method: treats any auth error as OAuth requirement if configured\nasync function checkAuthErrorFallback(serverUrl: string): Promise<OAuthDetectionResult | null> {\n  try {\n    if (!mcpConfig.OAUTH_ON_AUTH_ERROR) return null;\n\n    const response = await fetch(serverUrl, {\n      method: 'HEAD',\n      signal: AbortSignal.timeout(mcpConfig.OAUTH_DETECTION_TIMEOUT),\n    });\n\n    if (response.status !== 401 && response.status !== 403) return null;\n\n    return {\n      requiresOAuth: true,\n      method: 'no-metadata-found',\n      metadata: null,\n    };\n  } catch {\n    return null;\n  }\n}\n","import { EventEmitter } from 'events';\nimport { fetch as undiciFetch, Agent } from 'undici';\nimport {\n  StdioClientTransport,\n  getDefaultEnvironment,\n} from '@modelcontextprotocol/sdk/client/stdio.js';\nimport { StreamableHTTPClientTransport } from '@modelcontextprotocol/sdk/client/streamableHttp.js';\nimport { ResourceListChangedNotificationSchema } from '@modelcontextprotocol/sdk/types.js';\nimport { WebSocketClientTransport } from '@modelcontextprotocol/sdk/client/websocket.js';\nimport { SSEClientTransport } from '@modelcontextprotocol/sdk/client/sse.js';\nimport { Client } from '@modelcontextprotocol/sdk/client/index.js';\nimport { logger } from '@librechat/data-schemas';\nimport type { Transport } from '@modelcontextprotocol/sdk/shared/transport.js';\nimport type { JSONRPCMessage } from '@modelcontextprotocol/sdk/types.js';\nimport type {\n  RequestInit as UndiciRequestInit,\n  RequestInfo as UndiciRequestInfo,\n  Response as UndiciResponse,\n} from 'undici';\nimport type { MCPOAuthTokens } from './oauth/types';\nimport { mcpConfig } from './mcpConfig';\nimport type * as t from './types';\n\ntype FetchLike = (url: string | URL, init?: RequestInit) => Promise<Response>;\n\nfunction isStdioOptions(options: t.MCPOptions): options is t.StdioOptions {\n  return 'command' in options;\n}\n\nfunction isWebSocketOptions(options: t.MCPOptions): options is t.WebSocketOptions {\n  if ('url' in options) {\n    const protocol = new URL(options.url).protocol;\n    return protocol === 'ws:' || protocol === 'wss:';\n  }\n  return false;\n}\n\nfunction isSSEOptions(options: t.MCPOptions): options is t.SSEOptions {\n  if ('url' in options) {\n    const protocol = new URL(options.url).protocol;\n    return protocol !== 'ws:' && protocol !== 'wss:';\n  }\n  return false;\n}\n\n/**\n * Checks if the provided options are for a Streamable HTTP transport.\n *\n * Streamable HTTP is an MCP transport that uses HTTP POST for sending messages\n * and supports streaming responses. It provides better performance than\n * SSE transport while maintaining compatibility with most network environments.\n *\n * @param options MCP connection options to check\n * @returns True if options are for a streamable HTTP transport\n */\nfunction isStreamableHTTPOptions(options: t.MCPOptions): options is t.StreamableHTTPOptions {\n  if ('url' in options && 'type' in options) {\n    const optionType = options.type as string;\n    if (optionType === 'streamable-http' || optionType === 'http') {\n      const protocol = new URL(options.url).protocol;\n      return protocol !== 'ws:' && protocol !== 'wss:';\n    }\n  }\n  return false;\n}\n\nconst FIVE_MINUTES = 5 * 60 * 1000;\nconst DEFAULT_TIMEOUT = 60000;\n\ninterface MCPConnectionParams {\n  serverName: string;\n  serverConfig: t.MCPOptions;\n  userId?: string;\n  oauthTokens?: MCPOAuthTokens | null;\n}\n\nexport class MCPConnection extends EventEmitter {\n  public client: Client;\n  private options: t.MCPOptions;\n  private transport: Transport | null = null; // Make this nullable\n  private connectionState: t.ConnectionState = 'disconnected';\n  private connectPromise: Promise<void> | null = null;\n  private readonly MAX_RECONNECT_ATTEMPTS = 3;\n  public readonly serverName: string;\n  private shouldStopReconnecting = false;\n  private isReconnecting = false;\n  private isInitializing = false;\n  private reconnectAttempts = 0;\n  private readonly userId?: string;\n  private lastPingTime: number;\n  private lastConnectionCheckAt: number = 0;\n  private oauthTokens?: MCPOAuthTokens | null;\n  private requestHeaders?: Record<string, string> | null;\n  private oauthRequired = false;\n  iconPath?: string;\n  timeout?: number;\n  url?: string;\n\n  setRequestHeaders(headers: Record<string, string> | null): void {\n    if (!headers) {\n      return;\n    }\n    const normalizedHeaders: Record<string, string> = {};\n    for (const [key, value] of Object.entries(headers)) {\n      normalizedHeaders[key.toLowerCase()] = value;\n    }\n    this.requestHeaders = normalizedHeaders;\n  }\n\n  getRequestHeaders(): Record<string, string> | null | undefined {\n    return this.requestHeaders;\n  }\n\n  constructor(params: MCPConnectionParams) {\n    super();\n    this.options = params.serverConfig;\n    this.serverName = params.serverName;\n    this.userId = params.userId;\n    this.iconPath = params.serverConfig.iconPath;\n    this.timeout = params.serverConfig.timeout;\n    this.lastPingTime = Date.now();\n    if (params.oauthTokens) {\n      this.oauthTokens = params.oauthTokens;\n    }\n    this.client = new Client(\n      {\n        name: '@librechat/api-client',\n        version: '1.2.3',\n      },\n      {\n        capabilities: {},\n      },\n    );\n\n    this.setupEventListeners();\n  }\n\n  /** Helper to generate consistent log prefixes */\n  private getLogPrefix(): string {\n    const userPart = this.userId ? `[User: ${this.userId}]` : '';\n    return `[MCP]${userPart}[${this.serverName}]`;\n  }\n\n  /**\n   * Factory function to create fetch functions without capturing the entire `this` context.\n   * This helps prevent memory leaks by only passing necessary dependencies.\n   *\n   * @param getHeaders Function to retrieve request headers\n   * @param timeout Timeout value for the agent (in milliseconds)\n   * @returns A fetch function that merges headers appropriately\n   */\n  private createFetchFunction(\n    getHeaders: () => Record<string, string> | null | undefined,\n    timeout?: number,\n  ): (input: UndiciRequestInfo, init?: UndiciRequestInit) => Promise<UndiciResponse> {\n    return function customFetch(\n      input: UndiciRequestInfo,\n      init?: UndiciRequestInit,\n    ): Promise<UndiciResponse> {\n      const requestHeaders = getHeaders();\n      const effectiveTimeout = timeout || DEFAULT_TIMEOUT;\n      const agent = new Agent({\n        bodyTimeout: effectiveTimeout,\n        headersTimeout: effectiveTimeout,\n      });\n      if (!requestHeaders) {\n        return undiciFetch(input, { ...init, dispatcher: agent });\n      }\n\n      let initHeaders: Record<string, string> = {};\n      if (init?.headers) {\n        if (init.headers instanceof Headers) {\n          initHeaders = Object.fromEntries(init.headers.entries());\n        } else if (Array.isArray(init.headers)) {\n          initHeaders = Object.fromEntries(init.headers);\n        } else {\n          initHeaders = init.headers as Record<string, string>;\n        }\n      }\n\n      return undiciFetch(input, {\n        ...init,\n        headers: {\n          ...initHeaders,\n          ...requestHeaders,\n        },\n        dispatcher: agent,\n      });\n    };\n  }\n\n  private emitError(error: unknown, errorContext: string): void {\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    logger.error(`${this.getLogPrefix()} ${errorContext}: ${errorMessage}`);\n  }\n\n  private constructTransport(options: t.MCPOptions): Transport {\n    try {\n      let type: t.MCPOptions['type'];\n      if (isStdioOptions(options)) {\n        type = 'stdio';\n      } else if (isWebSocketOptions(options)) {\n        type = 'websocket';\n      } else if (isStreamableHTTPOptions(options)) {\n        // Could be either 'streamable-http' or 'http', normalize to 'streamable-http'\n        type = 'streamable-http';\n      } else if (isSSEOptions(options)) {\n        type = 'sse';\n      } else {\n        throw new Error(\n          'Cannot infer transport type: options.type is not provided and cannot be inferred from other properties.',\n        );\n      }\n\n      switch (type) {\n        case 'stdio':\n          if (!isStdioOptions(options)) {\n            throw new Error('Invalid options for stdio transport.');\n          }\n          return new StdioClientTransport({\n            command: options.command,\n            args: options.args,\n            // workaround bug of mcp sdk that can't pass env:\n            // https://github.com/modelcontextprotocol/typescript-sdk/issues/216\n            env: { ...getDefaultEnvironment(), ...(options.env ?? {}) },\n          });\n\n        case 'websocket':\n          if (!isWebSocketOptions(options)) {\n            throw new Error('Invalid options for websocket transport.');\n          }\n          this.url = options.url;\n          return new WebSocketClientTransport(new URL(options.url));\n\n        case 'sse': {\n          if (!isSSEOptions(options)) {\n            throw new Error('Invalid options for sse transport.');\n          }\n          this.url = options.url;\n          const url = new URL(options.url);\n          logger.info(`${this.getLogPrefix()} Creating SSE transport: ${url.toString()}`);\n          const abortController = new AbortController();\n\n          /** Add OAuth token to headers if available */\n          const headers = { ...options.headers };\n          if (this.oauthTokens?.access_token) {\n            headers['Authorization'] = `Bearer ${this.oauthTokens.access_token}`;\n          }\n\n          const timeoutValue = this.timeout || DEFAULT_TIMEOUT;\n          const transport = new SSEClientTransport(url, {\n            requestInit: {\n              headers,\n              signal: abortController.signal,\n            },\n            eventSourceInit: {\n              fetch: (url, init) => {\n                const fetchHeaders = new Headers(Object.assign({}, init?.headers, headers));\n                const agent = new Agent({\n                  bodyTimeout: timeoutValue,\n                  headersTimeout: timeoutValue,\n                });\n                return undiciFetch(url, {\n                  ...init,\n                  dispatcher: agent,\n                  headers: fetchHeaders,\n                });\n              },\n            },\n            fetch: this.createFetchFunction(\n              this.getRequestHeaders.bind(this),\n              this.timeout,\n            ) as unknown as FetchLike,\n          });\n\n          transport.onclose = () => {\n            logger.info(`${this.getLogPrefix()} SSE transport closed`);\n            this.emit('connectionChange', 'disconnected');\n          };\n\n          transport.onmessage = (message) => {\n            logger.info(`${this.getLogPrefix()} Message received: ${JSON.stringify(message)}`);\n          };\n\n          this.setupTransportErrorHandlers(transport);\n          return transport;\n        }\n\n        case 'streamable-http': {\n          if (!isStreamableHTTPOptions(options)) {\n            throw new Error('Invalid options for streamable-http transport.');\n          }\n          this.url = options.url;\n          const url = new URL(options.url);\n          logger.info(\n            `${this.getLogPrefix()} Creating streamable-http transport: ${url.toString()}`,\n          );\n          const abortController = new AbortController();\n\n          /** Add OAuth token to headers if available */\n          const headers = { ...options.headers };\n          if (this.oauthTokens?.access_token) {\n            headers['Authorization'] = `Bearer ${this.oauthTokens.access_token}`;\n          }\n\n          const transport = new StreamableHTTPClientTransport(url, {\n            requestInit: {\n              headers,\n              signal: abortController.signal,\n            },\n            fetch: this.createFetchFunction(\n              this.getRequestHeaders.bind(this),\n              this.timeout,\n            ) as unknown as FetchLike,\n          });\n\n          transport.onclose = () => {\n            logger.info(`${this.getLogPrefix()} Streamable-http transport closed`);\n            this.emit('connectionChange', 'disconnected');\n          };\n\n          transport.onmessage = (message: JSONRPCMessage) => {\n            logger.info(`${this.getLogPrefix()} Message received: ${JSON.stringify(message)}`);\n          };\n\n          this.setupTransportErrorHandlers(transport);\n          return transport;\n        }\n\n        default: {\n          throw new Error(`Unsupported transport type: ${type}`);\n        }\n      }\n    } catch (error) {\n      this.emitError(error, 'Failed to construct transport:');\n      throw error;\n    }\n  }\n\n  private setupEventListeners(): void {\n    this.isInitializing = true;\n    this.on('connectionChange', (state: t.ConnectionState) => {\n      this.connectionState = state;\n      if (state === 'connected') {\n        this.isReconnecting = false;\n        this.isInitializing = false;\n        this.shouldStopReconnecting = false;\n        this.reconnectAttempts = 0;\n        /**\n         * // FOR DEBUGGING\n         * // this.client.setRequestHandler(PingRequestSchema, async (request, extra) => {\n         * //    logger.info(`[MCP][${this.serverName}] PingRequest: ${JSON.stringify(request)}`);\n         * //    if (getEventListeners && extra.signal) {\n         * //      const listenerCount = getEventListeners(extra.signal, 'abort').length;\n         * //      logger.debug(`Signal has ${listenerCount} abort listeners`);\n         * //    }\n         * //    return {};\n         * //  });\n         */\n      } else if (state === 'error' && !this.isReconnecting && !this.isInitializing) {\n        this.handleReconnection().catch((error) => {\n          logger.error(`${this.getLogPrefix()} Reconnection handler failed:`, error);\n        });\n      }\n    });\n\n    this.subscribeToResources();\n  }\n\n  private async handleReconnection(): Promise<void> {\n    if (\n      this.isReconnecting ||\n      this.shouldStopReconnecting ||\n      this.isInitializing ||\n      this.oauthRequired\n    ) {\n      if (this.oauthRequired) {\n        logger.info(`${this.getLogPrefix()} OAuth required, skipping reconnection attempts`);\n      }\n      return;\n    }\n\n    this.isReconnecting = true;\n    const backoffDelay = (attempt: number) => Math.min(1000 * Math.pow(2, attempt), 30000);\n\n    try {\n      while (\n        this.reconnectAttempts < this.MAX_RECONNECT_ATTEMPTS &&\n        !(this.shouldStopReconnecting as boolean)\n      ) {\n        this.reconnectAttempts++;\n        const delay = backoffDelay(this.reconnectAttempts);\n\n        logger.info(\n          `${this.getLogPrefix()} Reconnecting ${this.reconnectAttempts}/${this.MAX_RECONNECT_ATTEMPTS} (delay: ${delay}ms)`,\n        );\n\n        await new Promise((resolve) => setTimeout(resolve, delay));\n\n        try {\n          await this.connect();\n          this.reconnectAttempts = 0;\n          return;\n        } catch (error) {\n          logger.error(`${this.getLogPrefix()} Reconnection attempt failed:`, error);\n\n          if (\n            this.reconnectAttempts === this.MAX_RECONNECT_ATTEMPTS ||\n            (this.shouldStopReconnecting as boolean)\n          ) {\n            logger.error(`${this.getLogPrefix()} Stopping reconnection attempts`);\n            return;\n          }\n        }\n      }\n    } finally {\n      this.isReconnecting = false;\n    }\n  }\n\n  private subscribeToResources(): void {\n    this.client.setNotificationHandler(ResourceListChangedNotificationSchema, async () => {\n      this.emit('resourcesChanged');\n    });\n  }\n\n  async connectClient(): Promise<void> {\n    if (this.connectionState === 'connected') {\n      return;\n    }\n\n    if (this.connectPromise) {\n      return this.connectPromise;\n    }\n\n    if (this.shouldStopReconnecting) {\n      return;\n    }\n\n    this.emit('connectionChange', 'connecting');\n\n    this.connectPromise = (async () => {\n      try {\n        if (this.transport) {\n          try {\n            await this.client.close();\n            this.transport = null;\n          } catch (error) {\n            logger.warn(`${this.getLogPrefix()} Error closing connection:`, error);\n          }\n        }\n\n        this.transport = this.constructTransport(this.options);\n        this.setupTransportDebugHandlers();\n\n        const connectTimeout = this.options.initTimeout ?? 120000;\n        await Promise.race([\n          this.client.connect(this.transport),\n          new Promise((_resolve, reject) =>\n            setTimeout(\n              () => reject(new Error(`Connection timeout after ${connectTimeout}ms`)),\n              connectTimeout,\n            ),\n          ),\n        ]);\n\n        this.connectionState = 'connected';\n        this.emit('connectionChange', 'connected');\n        this.reconnectAttempts = 0;\n      } catch (error) {\n        // Check if it's an OAuth authentication error\n        if (this.isOAuthError(error)) {\n          logger.warn(`${this.getLogPrefix()} OAuth authentication required`);\n          this.oauthRequired = true;\n          const serverUrl = this.url;\n          logger.debug(`${this.getLogPrefix()} Server URL for OAuth: ${serverUrl}`);\n\n          const oauthTimeout = this.options.initTimeout ?? 60000 * 2;\n          /** Promise that will resolve when OAuth is handled */\n          const oauthHandledPromise = new Promise<void>((resolve, reject) => {\n            let timeoutId: NodeJS.Timeout | null = null;\n            let oauthHandledListener: (() => void) | null = null;\n            let oauthFailedListener: ((error: Error) => void) | null = null;\n\n            /** Cleanup function to remove listeners and clear timeout */\n            const cleanup = () => {\n              if (timeoutId) {\n                clearTimeout(timeoutId);\n              }\n              if (oauthHandledListener) {\n                this.off('oauthHandled', oauthHandledListener);\n              }\n              if (oauthFailedListener) {\n                this.off('oauthFailed', oauthFailedListener);\n              }\n            };\n\n            // Success handler\n            oauthHandledListener = () => {\n              cleanup();\n              resolve();\n            };\n\n            // Failure handler\n            oauthFailedListener = (error: Error) => {\n              cleanup();\n              reject(error);\n            };\n\n            // Timeout handler\n            timeoutId = setTimeout(() => {\n              cleanup();\n              reject(new Error(`OAuth handling timeout after ${oauthTimeout}ms`));\n            }, oauthTimeout);\n\n            // Listen for both success and failure events\n            this.once('oauthHandled', oauthHandledListener);\n            this.once('oauthFailed', oauthFailedListener);\n          });\n\n          // Emit the event\n          this.emit('oauthRequired', {\n            serverName: this.serverName,\n            error,\n            serverUrl,\n            userId: this.userId,\n          });\n\n          try {\n            // Wait for OAuth to be handled\n            await oauthHandledPromise;\n            // Reset the oauthRequired flag\n            this.oauthRequired = false;\n            // Don't throw the error - just return so connection can be retried\n            logger.info(\n              `${this.getLogPrefix()} OAuth handled successfully, connection will be retried`,\n            );\n            return;\n          } catch (oauthError) {\n            // OAuth failed or timed out\n            this.oauthRequired = false;\n            logger.error(`${this.getLogPrefix()} OAuth handling failed:`, oauthError);\n            // Re-throw the original authentication error\n            throw error;\n          }\n        }\n\n        this.connectionState = 'error';\n        this.emit('connectionChange', 'error');\n        throw error;\n      } finally {\n        this.connectPromise = null;\n      }\n    })();\n\n    return this.connectPromise;\n  }\n\n  private setupTransportDebugHandlers(): void {\n    if (!this.transport) {\n      return;\n    }\n\n    this.transport.onmessage = (msg) => {\n      logger.debug(`${this.getLogPrefix()} Transport received: ${JSON.stringify(msg)}`);\n    };\n\n    const originalSend = this.transport.send.bind(this.transport);\n    this.transport.send = async (msg) => {\n      if ('result' in msg && !('method' in msg) && Object.keys(msg.result ?? {}).length === 0) {\n        if (Date.now() - this.lastPingTime < FIVE_MINUTES) {\n          throw new Error('Empty result');\n        }\n        this.lastPingTime = Date.now();\n      }\n      logger.debug(`${this.getLogPrefix()} Transport sending: ${JSON.stringify(msg)}`);\n      return originalSend(msg);\n    };\n  }\n\n  async connect(): Promise<void> {\n    try {\n      await this.disconnect();\n      await this.connectClient();\n      if (!(await this.isConnected())) {\n        throw new Error('Connection not established');\n      }\n    } catch (error) {\n      logger.error(`${this.getLogPrefix()} Connection failed:`, error);\n      throw error;\n    }\n  }\n\n  private setupTransportErrorHandlers(transport: Transport): void {\n    transport.onerror = (error) => {\n      logger.error(`${this.getLogPrefix()} Transport error:`, error);\n\n      // Check if it's an OAuth authentication error\n      if (error && typeof error === 'object' && 'code' in error) {\n        const errorCode = (error as unknown as { code?: number }).code;\n        if (errorCode === 401 || errorCode === 403) {\n          logger.warn(`${this.getLogPrefix()} OAuth authentication error detected`);\n          this.emit('oauthError', error);\n        }\n      }\n\n      this.emit('connectionChange', 'error');\n    };\n  }\n\n  public async disconnect(): Promise<void> {\n    try {\n      if (this.transport) {\n        await this.client.close();\n        this.transport = null;\n      }\n      if (this.connectionState === 'disconnected') {\n        return;\n      }\n      this.connectionState = 'disconnected';\n      this.emit('connectionChange', 'disconnected');\n    } finally {\n      this.connectPromise = null;\n    }\n  }\n\n  async fetchResources(): Promise<t.MCPResource[]> {\n    try {\n      const { resources } = await this.client.listResources();\n      return resources;\n    } catch (error) {\n      this.emitError(error, 'Failed to fetch resources:');\n      return [];\n    }\n  }\n\n  async fetchTools() {\n    try {\n      const { tools } = await this.client.listTools();\n      return tools;\n    } catch (error) {\n      this.emitError(error, 'Failed to fetch tools:');\n      return [];\n    }\n  }\n\n  async fetchPrompts(): Promise<t.MCPPrompt[]> {\n    try {\n      const { prompts } = await this.client.listPrompts();\n      return prompts;\n    } catch (error) {\n      this.emitError(error, 'Failed to fetch prompts:');\n      return [];\n    }\n  }\n\n  public async isConnected(): Promise<boolean> {\n    // First check if we're in a connected state\n    if (this.connectionState !== 'connected') {\n      return false;\n    }\n\n    // If we recently checked, skip expensive verification\n    const now = Date.now();\n    if (now - this.lastConnectionCheckAt < mcpConfig.CONNECTION_CHECK_TTL) {\n      return true;\n    }\n    this.lastConnectionCheckAt = now;\n\n    try {\n      // Try ping first as it's the lightest check\n      await this.client.ping();\n      return this.connectionState === 'connected';\n    } catch (error) {\n      // Check if the error is because ping is not supported (method not found)\n      const pingUnsupported =\n        error instanceof Error &&\n        ((error as Error)?.message.includes('-32601') ||\n          (error as Error)?.message.includes('invalid method ping') ||\n          (error as Error)?.message.includes('method not found'));\n\n      if (!pingUnsupported) {\n        logger.error(`${this.getLogPrefix()} Ping failed:`, error);\n        return false;\n      }\n\n      // Ping is not supported by this server, try an alternative verification\n      logger.debug(\n        `${this.getLogPrefix()} Server does not support ping method, verifying connection with capabilities`,\n      );\n\n      try {\n        // Get server capabilities to verify connection is truly active\n        const capabilities = this.client.getServerCapabilities();\n\n        // If we have capabilities, try calling a supported method to verify connection\n        if (capabilities?.tools) {\n          await this.client.listTools();\n          return this.connectionState === 'connected';\n        } else if (capabilities?.resources) {\n          await this.client.listResources();\n          return this.connectionState === 'connected';\n        } else if (capabilities?.prompts) {\n          await this.client.listPrompts();\n          return this.connectionState === 'connected';\n        } else {\n          // No capabilities to test, but we're in connected state and initialization succeeded\n          logger.debug(\n            `${this.getLogPrefix()} No capabilities to test, assuming connected based on state`,\n          );\n          return this.connectionState === 'connected';\n        }\n      } catch (capabilityError) {\n        // If capability check fails, the connection is likely broken\n        logger.error(`${this.getLogPrefix()} Connection verification failed:`, capabilityError);\n        return false;\n      }\n    }\n  }\n\n  public setOAuthTokens(tokens: MCPOAuthTokens): void {\n    this.oauthTokens = tokens;\n  }\n\n  private isOAuthError(error: unknown): boolean {\n    if (!error || typeof error !== 'object') {\n      return false;\n    }\n\n    // Check for SSE error with 401 status\n    if ('message' in error && typeof error.message === 'string') {\n      return error.message.includes('401') || error.message.includes('Non-200 status code (401)');\n    }\n\n    // Check for error code\n    if ('code' in error) {\n      const code = (error as { code?: number }).code;\n      return code === 401 || code === 403;\n    }\n\n    return false;\n  }\n}\n","import { logger } from '@librechat/data-schemas';\nimport type { OAuthClientInformation } from '@modelcontextprotocol/sdk/shared/auth.js';\nimport type { TokenMethods } from '@librechat/data-schemas';\nimport type { MCPOAuthTokens, MCPOAuthFlowMetadata, OAuthMetadata } from '~/mcp/oauth';\nimport type { FlowStateManager } from '~/flow/manager';\nimport type { FlowMetadata } from '~/flow/types';\nimport type * as t from './types';\nimport { MCPTokenStorage, MCPOAuthHandler } from '~/mcp/oauth';\nimport { MCPConnection } from './connection';\nimport { processMCPEnv } from '~/utils';\n\n/**\n * Factory for creating MCP connections with optional OAuth authentication.\n * Handles OAuth flows, token management, and connection retry logic.\n * NOTE: Much of the OAuth logic was extracted from the old MCPManager class as is.\n */\nexport class MCPConnectionFactory {\n  protected readonly serverName: string;\n  protected readonly serverConfig: t.MCPOptions;\n  protected readonly logPrefix: string;\n  protected readonly useOAuth: boolean;\n\n  // OAuth-related properties (only set when useOAuth is true)\n  protected readonly userId?: string;\n  protected readonly flowManager?: FlowStateManager<MCPOAuthTokens | null>;\n  protected readonly tokenMethods?: TokenMethods;\n  protected readonly signal?: AbortSignal;\n  protected readonly oauthStart?: (authURL: string) => Promise<void>;\n  protected readonly oauthEnd?: () => Promise<void>;\n  protected readonly returnOnOAuth?: boolean;\n  protected readonly connectionTimeout?: number;\n\n  /** Creates a new MCP connection with optional OAuth support */\n  static async create(\n    basic: t.BasicConnectionOptions,\n    oauth?: t.OAuthConnectionOptions,\n  ): Promise<MCPConnection> {\n    const factory = new this(basic, oauth);\n    return factory.createConnection();\n  }\n\n  protected constructor(basic: t.BasicConnectionOptions, oauth?: t.OAuthConnectionOptions) {\n    this.serverConfig = processMCPEnv({\n      options: basic.serverConfig,\n      user: oauth?.user,\n      customUserVars: oauth?.customUserVars,\n      body: oauth?.requestBody,\n    });\n    this.serverName = basic.serverName;\n    this.useOAuth = !!oauth?.useOAuth;\n    this.connectionTimeout = oauth?.connectionTimeout;\n    this.logPrefix = oauth?.user\n      ? `[MCP][${basic.serverName}][${oauth.user.id}]`\n      : `[MCP][${basic.serverName}]`;\n\n    if (oauth?.useOAuth) {\n      this.userId = oauth.user.id;\n      this.flowManager = oauth.flowManager;\n      this.tokenMethods = oauth.tokenMethods;\n      this.signal = oauth.signal;\n      this.oauthStart = oauth.oauthStart;\n      this.oauthEnd = oauth.oauthEnd;\n      this.returnOnOAuth = oauth.returnOnOAuth;\n    }\n  }\n\n  /** Creates the base MCP connection with OAuth tokens */\n  protected async createConnection(): Promise<MCPConnection> {\n    const oauthTokens = this.useOAuth ? await this.getOAuthTokens() : null;\n    const connection = new MCPConnection({\n      serverName: this.serverName,\n      serverConfig: this.serverConfig,\n      userId: this.userId,\n      oauthTokens,\n    });\n\n    let cleanupOAuthHandlers: (() => void) | null = null;\n    if (this.useOAuth) {\n      cleanupOAuthHandlers = this.handleOAuthEvents(connection);\n    }\n\n    try {\n      await this.attemptToConnect(connection);\n      if (cleanupOAuthHandlers) {\n        cleanupOAuthHandlers();\n      }\n      return connection;\n    } catch (error) {\n      if (cleanupOAuthHandlers) {\n        cleanupOAuthHandlers();\n      }\n      throw error;\n    }\n  }\n\n  /** Retrieves existing OAuth tokens from storage or returns null */\n  protected async getOAuthTokens(): Promise<MCPOAuthTokens | null> {\n    if (!this.tokenMethods?.findToken) return null;\n\n    try {\n      const flowId = MCPOAuthHandler.generateFlowId(this.userId!, this.serverName);\n      const tokens = await this.flowManager!.createFlowWithHandler(\n        flowId,\n        'mcp_get_tokens',\n        async () => {\n          return await MCPTokenStorage.getTokens({\n            userId: this.userId!,\n            serverName: this.serverName,\n            findToken: this.tokenMethods!.findToken!,\n            createToken: this.tokenMethods!.createToken,\n            updateToken: this.tokenMethods!.updateToken,\n            refreshTokens: this.createRefreshTokensFunction(),\n          });\n        },\n        this.signal,\n      );\n\n      if (tokens) logger.info(`${this.logPrefix} Loaded OAuth tokens`);\n      return tokens;\n    } catch (error) {\n      logger.debug(`${this.logPrefix} No existing tokens found or error loading tokens`, error);\n      return null;\n    }\n  }\n\n  /** Creates a function to refresh OAuth tokens when they expire */\n  protected createRefreshTokensFunction(): (\n    refreshToken: string,\n    metadata: {\n      userId: string;\n      serverName: string;\n      identifier: string;\n      clientInfo?: OAuthClientInformation;\n    },\n  ) => Promise<MCPOAuthTokens> {\n    return async (refreshToken, metadata) => {\n      return await MCPOAuthHandler.refreshOAuthTokens(\n        refreshToken,\n        {\n          serverUrl: (this.serverConfig as t.SSEOptions | t.StreamableHTTPOptions).url,\n          serverName: metadata.serverName,\n          clientInfo: metadata.clientInfo,\n        },\n        this.serverConfig.oauth,\n      );\n    };\n  }\n\n  /** Sets up OAuth event handlers for the connection */\n  protected handleOAuthEvents(connection: MCPConnection): () => void {\n    const oauthHandler = async (data: { serverUrl?: string }) => {\n      logger.info(`${this.logPrefix} oauthRequired event received`);\n\n      // If we just want to initiate OAuth and return, handle it differently\n      if (this.returnOnOAuth) {\n        try {\n          const config = this.serverConfig;\n          const { authorizationUrl, flowId, flowMetadata } =\n            await MCPOAuthHandler.initiateOAuthFlow(\n              this.serverName,\n              data.serverUrl || '',\n              this.userId!,\n              config?.oauth,\n            );\n\n          // Create the flow state so the OAuth callback can find it\n          // We spawn this in the background without waiting for it\n          this.flowManager!.createFlow(flowId, 'mcp_oauth', flowMetadata).catch(() => {\n            // The OAuth callback will resolve this flow, so we expect it to timeout here\n            // which is fine - we just need the flow state to exist\n          });\n\n          if (this.oauthStart) {\n            logger.info(`${this.logPrefix} OAuth flow started, issuing authorization URL`);\n            await this.oauthStart(authorizationUrl);\n          }\n\n          // Emit oauthFailed to signal that connection should not proceed\n          // but OAuth was successfully initiated\n          connection.emit('oauthFailed', new Error('OAuth flow initiated - return early'));\n          return;\n        } catch (error) {\n          logger.error(`${this.logPrefix} Failed to initiate OAuth flow`, error);\n          connection.emit('oauthFailed', new Error('OAuth initiation failed'));\n          return;\n        }\n      }\n\n      // Normal OAuth handling - wait for completion\n      const result = await this.handleOAuthRequired();\n\n      if (result?.tokens && this.tokenMethods?.createToken) {\n        try {\n          connection.setOAuthTokens(result.tokens);\n          await MCPTokenStorage.storeTokens({\n            userId: this.userId!,\n            serverName: this.serverName,\n            tokens: result.tokens,\n            createToken: this.tokenMethods.createToken,\n            updateToken: this.tokenMethods.updateToken,\n            findToken: this.tokenMethods.findToken,\n            clientInfo: result.clientInfo,\n            metadata: result.metadata,\n          });\n          logger.info(`${this.logPrefix} OAuth tokens saved to storage`);\n        } catch (error) {\n          logger.error(`${this.logPrefix} Failed to save OAuth tokens to storage`, error);\n        }\n      }\n\n      // Only emit oauthHandled if we actually got tokens (OAuth succeeded)\n      if (result?.tokens) {\n        connection.emit('oauthHandled');\n      } else {\n        // OAuth failed, emit oauthFailed to properly reject the promise\n        logger.warn(`${this.logPrefix} OAuth failed, emitting oauthFailed event`);\n        connection.emit('oauthFailed', new Error('OAuth authentication failed'));\n      }\n    };\n\n    connection.on('oauthRequired', oauthHandler);\n\n    /** Handler reference for cleanup when connection state changes to disconnected */\n    const cleanupHandler = (state: string) => {\n      if (state === 'disconnected') {\n        connection.removeListener('oauthRequired', oauthHandler);\n        connection.removeListener('connectionChange', cleanupHandler);\n      }\n    };\n    connection.on('connectionChange', cleanupHandler);\n\n    return () => {\n      connection.removeListener('oauthRequired', oauthHandler);\n      connection.removeListener('connectionChange', cleanupHandler);\n    };\n  }\n\n  /** Attempts to establish connection with timeout handling */\n  protected async attemptToConnect(connection: MCPConnection): Promise<void> {\n    const connectTimeout = this.connectionTimeout ?? this.serverConfig.initTimeout ?? 30000;\n    const connectionTimeout = new Promise<void>((_, reject) =>\n      setTimeout(\n        () => reject(new Error(`Connection timeout after ${connectTimeout}ms`)),\n        connectTimeout,\n      ),\n    );\n    const connectionAttempt = this.connectTo(connection);\n    await Promise.race([connectionAttempt, connectionTimeout]);\n\n    if (await connection.isConnected()) return;\n    logger.error(`${this.logPrefix} Failed to establish connection.`);\n  }\n\n  // Handles connection attempts with retry logic and OAuth error handling\n  private async connectTo(connection: MCPConnection): Promise<void> {\n    const maxAttempts = 3;\n    let attempts = 0;\n    let oauthHandled = false;\n\n    while (attempts < maxAttempts) {\n      try {\n        await connection.connect();\n        if (await connection.isConnected()) {\n          return;\n        }\n        throw new Error('Connection attempt succeeded but status is not connected');\n      } catch (error) {\n        attempts++;\n\n        if (this.useOAuth && this.isOAuthError(error)) {\n          // Only handle OAuth if this is a user connection (has oauthStart handler)\n          if (this.oauthStart && !oauthHandled) {\n            const errorWithFlag = error as (Error & { isOAuthError?: boolean }) | undefined;\n            if (errorWithFlag?.isOAuthError) {\n              oauthHandled = true;\n              logger.info(`${this.logPrefix} Handling OAuth`);\n              await this.handleOAuthRequired();\n            }\n          }\n          // Don't retry on OAuth errors - just throw\n          logger.info(`${this.logPrefix} OAuth required, stopping connection attempts`);\n          throw error;\n        }\n\n        if (attempts === maxAttempts) {\n          logger.error(`${this.logPrefix} Failed to connect after ${maxAttempts} attempts`, error);\n          throw error;\n        }\n        await new Promise((resolve) => setTimeout(resolve, 2000 * attempts));\n      }\n    }\n  }\n\n  // Determines if an error indicates OAuth authentication is required\n  private isOAuthError(error: unknown): boolean {\n    if (!error || typeof error !== 'object') {\n      return false;\n    }\n\n    // Check for SSE error with 401 status\n    if ('message' in error && typeof error.message === 'string') {\n      return error.message.includes('401') || error.message.includes('Non-200 status code (401)');\n    }\n\n    // Check for error code\n    if ('code' in error) {\n      const code = (error as { code?: number }).code;\n      return code === 401 || code === 403;\n    }\n\n    return false;\n  }\n\n  /** Manages OAuth flow initiation and completion */\n  protected async handleOAuthRequired(): Promise<{\n    tokens: MCPOAuthTokens | null;\n    clientInfo?: OAuthClientInformation;\n    metadata?: OAuthMetadata;\n  } | null> {\n    const serverUrl = (this.serverConfig as t.SSEOptions | t.StreamableHTTPOptions).url;\n    logger.debug(`${this.logPrefix} \\`handleOAuthRequired\\` called with serverUrl: ${serverUrl}`);\n\n    if (!this.flowManager || !serverUrl) {\n      logger.error(\n        `${this.logPrefix} OAuth required but flow manager not available or server URL missing for ${this.serverName}`,\n      );\n      logger.warn(`${this.logPrefix} Please configure OAuth credentials for ${this.serverName}`);\n      return null;\n    }\n\n    try {\n      logger.debug(`${this.logPrefix} Checking for existing OAuth flow for ${this.serverName}...`);\n\n      /** Flow ID to check if a flow already exists */\n      const flowId = MCPOAuthHandler.generateFlowId(this.userId!, this.serverName);\n\n      /** Check if there's already an ongoing OAuth flow for this flowId */\n      const existingFlow = await this.flowManager.getFlowState(flowId, 'mcp_oauth');\n      if (existingFlow && existingFlow.status === 'PENDING') {\n        logger.debug(\n          `${this.logPrefix} OAuth flow already exists for ${flowId}, waiting for completion`,\n        );\n        /** Tokens from existing flow to complete */\n        const tokens = await this.flowManager.createFlow(flowId, 'mcp_oauth');\n        if (typeof this.oauthEnd === 'function') {\n          await this.oauthEnd();\n        }\n        logger.info(\n          `${this.logPrefix} OAuth flow completed, tokens received for ${this.serverName}`,\n        );\n\n        /** Client information from the existing flow metadata */\n        const existingMetadata = existingFlow.metadata as unknown as MCPOAuthFlowMetadata;\n        const clientInfo = existingMetadata?.clientInfo;\n\n        return { tokens, clientInfo };\n      }\n\n      logger.debug(`${this.logPrefix} Initiating new OAuth flow for ${this.serverName}...`);\n      const {\n        authorizationUrl,\n        flowId: newFlowId,\n        flowMetadata,\n      } = await MCPOAuthHandler.initiateOAuthFlow(\n        this.serverName,\n        serverUrl,\n        this.userId!,\n        this.serverConfig.oauth,\n      );\n\n      if (typeof this.oauthStart === 'function') {\n        logger.info(`${this.logPrefix} OAuth flow started, issued authorization URL to user`);\n        await this.oauthStart(authorizationUrl);\n      } else {\n        logger.info(\n          `${this.logPrefix} OAuth flow started, no \\`oauthStart\\` handler defined, relying on callback endpoint`,\n        );\n      }\n\n      /** Tokens from the new flow */\n      const tokens = await this.flowManager.createFlow(\n        newFlowId,\n        'mcp_oauth',\n        flowMetadata as FlowMetadata,\n        this.signal,\n      );\n      if (typeof this.oauthEnd === 'function') {\n        await this.oauthEnd();\n      }\n      logger.info(`${this.logPrefix} OAuth flow completed, tokens received for ${this.serverName}`);\n\n      /** Client information from the flow metadata */\n      const clientInfo = flowMetadata?.clientInfo;\n      const metadata = flowMetadata?.metadata;\n\n      return {\n        tokens,\n        clientInfo,\n        metadata,\n      };\n    } catch (error) {\n      logger.error(`${this.logPrefix} Failed to complete OAuth flow for ${this.serverName}`, error);\n      return null;\n    }\n  }\n}\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","import { logger } from '@librechat/data-schemas';\nimport { MCPConnectionFactory } from '~/mcp/MCPConnectionFactory';\nimport { MCPConnection } from './connection';\nimport type * as t from './types';\n\n/**\n * Manages MCP connections with lazy loading and reconnection.\n * Maintains a pool of connections and handles connection lifecycle management.\n */\nexport class ConnectionsRepository {\n  protected readonly serverConfigs: Record<string, t.MCPOptions>;\n  protected connections: Map<string, MCPConnection> = new Map();\n  protected oauthOpts: t.OAuthConnectionOptions | undefined;\n\n  constructor(serverConfigs: t.MCPServers, oauthOpts?: t.OAuthConnectionOptions) {\n    this.serverConfigs = serverConfigs;\n    this.oauthOpts = oauthOpts;\n  }\n\n  /** Checks whether this repository can connect to a specific server */\n  has(serverName: string): boolean {\n    return !!this.serverConfigs[serverName];\n  }\n\n  /** Gets or creates a connection for the specified server with lazy loading */\n  async get(serverName: string): Promise<MCPConnection> {\n    const existingConnection = this.connections.get(serverName);\n    if (existingConnection && (await existingConnection.isConnected())) return existingConnection;\n    else await this.disconnect(serverName);\n\n    const connection = await MCPConnectionFactory.create(\n      {\n        serverName,\n        serverConfig: this.getServerConfig(serverName),\n      },\n      this.oauthOpts,\n    );\n\n    this.connections.set(serverName, connection);\n    return connection;\n  }\n\n  /** Gets or creates connections for multiple servers concurrently */\n  async getMany(serverNames: string[]): Promise<Map<string, MCPConnection>> {\n    const connectionPromises = serverNames.map(async (name) => [name, await this.get(name)]);\n    const connections = await Promise.all(connectionPromises);\n    return new Map(connections as [string, MCPConnection][]);\n  }\n\n  /** Returns all currently loaded connections without creating new ones */\n  async getLoaded(): Promise<Map<string, MCPConnection>> {\n    return this.getMany(Array.from(this.connections.keys()));\n  }\n\n  /** Gets or creates connections for all configured servers */\n  async getAll(): Promise<Map<string, MCPConnection>> {\n    return this.getMany(Object.keys(this.serverConfigs));\n  }\n\n  /** Disconnects and removes a specific server connection from the pool */\n  disconnect(serverName: string): Promise<void> {\n    const connection = this.connections.get(serverName);\n    if (!connection) return Promise.resolve();\n    this.connections.delete(serverName);\n    return connection.disconnect().catch((err) => {\n      logger.error(`${this.prefix(serverName)} Error disconnecting`, err);\n    });\n  }\n\n  /** Disconnects all active connections and returns array of disconnect promises */\n  disconnectAll(): Promise<void>[] {\n    const serverNames = Array.from(this.connections.keys());\n    return serverNames.map((serverName) => this.disconnect(serverName));\n  }\n\n  // Retrieves server configuration by name or throws if not found\n  protected getServerConfig(serverName: string): t.MCPOptions {\n    const serverConfig = this.serverConfigs[serverName];\n    if (serverConfig) return serverConfig;\n    throw new Error(`${this.prefix(serverName)} Server not found in configuration`);\n  }\n\n  // Returns formatted log prefix for server messages\n  protected prefix(serverName: string): string {\n    return `[MCP][${serverName}]`;\n  }\n}\n","import pick from 'lodash/pick';\nimport pickBy from 'lodash/pickBy';\nimport mapValues from 'lodash/mapValues';\nimport { logger } from '@librechat/data-schemas';\nimport type { MCPConnection } from '~/mcp/connection';\nimport type { JsonSchemaType } from '~/types';\nimport type * as t from '~/mcp/types';\nimport { ConnectionsRepository } from '~/mcp/ConnectionsRepository';\nimport { detectOAuthRequirement } from '~/mcp/oauth';\nimport { processMCPEnv } from '~/utils';\nimport { CONSTANTS } from '~/mcp/enum';\n\n/**\n * Manages MCP server configurations and metadata discovery.\n * Fetches server capabilities, OAuth requirements, and tool definitions for registry.\n * Determines which servers are for app-level connections.\n * Has its own connections repository. All connections are disconnected after initialization.\n */\nexport class MCPServersRegistry {\n  private initialized: boolean = false;\n  private connections: ConnectionsRepository;\n\n  public readonly rawConfigs: t.MCPServers;\n  public readonly parsedConfigs: Record<string, t.ParsedServerConfig>;\n\n  public oauthServers: Set<string> | null = null;\n  public serverInstructions: Record<string, string> | null = null;\n  public toolFunctions: t.LCAvailableTools | null = null;\n  public appServerConfigs: t.MCPServers | null = null;\n\n  constructor(configs: t.MCPServers) {\n    this.rawConfigs = configs;\n    this.parsedConfigs = mapValues(configs, (con) => processMCPEnv({ options: con }));\n    this.connections = new ConnectionsRepository(configs);\n  }\n\n  /** Initializes all startup-enabled servers by gathering their metadata asynchronously */\n  public async initialize(): Promise<void> {\n    if (this.initialized) return;\n    this.initialized = true;\n\n    const serverNames = Object.keys(this.parsedConfigs);\n\n    await Promise.allSettled(serverNames.map((serverName) => this.gatherServerInfo(serverName)));\n\n    this.setOAuthServers();\n    this.setServerInstructions();\n    this.setAppServerConfigs();\n    await this.setAppToolFunctions();\n\n    this.connections.disconnectAll();\n  }\n\n  /** Fetches all metadata for a single server in parallel */\n  private async gatherServerInfo(serverName: string): Promise<void> {\n    try {\n      await this.fetchOAuthRequirement(serverName);\n      const config = this.parsedConfigs[serverName];\n\n      if (config.startup !== false && !config.requiresOAuth) {\n        await Promise.allSettled([\n          this.fetchServerInstructions(serverName).catch((error) =>\n            logger.warn(`${this.prefix(serverName)} Failed to fetch server instructions:`, error),\n          ),\n          this.fetchServerCapabilities(serverName).catch((error) =>\n            logger.warn(`${this.prefix(serverName)} Failed to fetch server capabilities:`, error),\n          ),\n        ]);\n      }\n\n      this.logUpdatedConfig(serverName);\n    } catch (error) {\n      logger.warn(`${this.prefix(serverName)} Failed to initialize server:`, error);\n    }\n  }\n\n  /** Sets app-level server configs (startup enabled, non-OAuth servers) */\n  private setAppServerConfigs(): void {\n    const appServers = Object.keys(\n      pickBy(\n        this.parsedConfigs,\n        (config) => config.startup !== false && config.requiresOAuth === false,\n      ),\n    );\n    this.appServerConfigs = pick(this.rawConfigs, appServers);\n  }\n\n  /** Creates set of server names that require OAuth authentication */\n  private setOAuthServers(): Set<string> {\n    if (this.oauthServers) return this.oauthServers;\n    this.oauthServers = new Set(\n      Object.keys(pickBy(this.parsedConfigs, (config) => config.requiresOAuth)),\n    );\n    return this.oauthServers;\n  }\n\n  /** Collects server instructions from all configured servers */\n  private setServerInstructions(): void {\n    this.serverInstructions = mapValues(\n      pickBy(this.parsedConfigs, (config) => config.serverInstructions),\n      (config) => config.serverInstructions as string,\n    );\n  }\n\n  /** Builds registry of all available tool functions from loaded connections */\n  private async setAppToolFunctions(): Promise<void> {\n    const connections = (await this.connections.getLoaded()).entries();\n    const allToolFunctions: t.LCAvailableTools = {};\n    for (const [serverName, conn] of connections) {\n      try {\n        const toolFunctions = await this.getToolFunctions(serverName, conn);\n        Object.assign(allToolFunctions, toolFunctions);\n      } catch (error) {\n        logger.warn(`${this.prefix(serverName)} Error fetching tool functions:`, error);\n      }\n    }\n    this.toolFunctions = allToolFunctions;\n  }\n\n  /** Converts server tools to LibreChat-compatible tool functions format */\n  public async getToolFunctions(\n    serverName: string,\n    conn: MCPConnection,\n  ): Promise<t.LCAvailableTools> {\n    const { tools }: t.MCPToolListResponse = await conn.client.listTools();\n\n    const toolFunctions: t.LCAvailableTools = {};\n    tools.forEach((tool) => {\n      const name = `${tool.name}${CONSTANTS.mcp_delimiter}${serverName}`;\n      toolFunctions[name] = {\n        type: 'function',\n        ['function']: {\n          name,\n          description: tool.description,\n          parameters: tool.inputSchema as JsonSchemaType,\n        },\n      };\n    });\n\n    return toolFunctions;\n  }\n\n  /** Determines if server requires OAuth if not already specified in the config */\n  private async fetchOAuthRequirement(serverName: string): Promise<boolean> {\n    const config = this.parsedConfigs[serverName];\n    if (config.requiresOAuth != null) return config.requiresOAuth;\n    if (config.url == null) return (config.requiresOAuth = false);\n    if (config.startup === false) return (config.requiresOAuth = false);\n\n    const result = await detectOAuthRequirement(config.url);\n    config.requiresOAuth = result.requiresOAuth;\n    config.oauthMetadata = result.metadata;\n    return config.requiresOAuth;\n  }\n\n  /** Retrieves server instructions from MCP server if enabled in the config */\n  private async fetchServerInstructions(serverName: string): Promise<void> {\n    const config = this.parsedConfigs[serverName];\n    if (!config.serverInstructions) return;\n    if (typeof config.serverInstructions === 'string') return;\n\n    const conn = await this.connections.get(serverName);\n    config.serverInstructions = conn.client.getInstructions();\n    if (!config.serverInstructions) {\n      logger.warn(`${this.prefix(serverName)} No server instructions available`);\n    }\n  }\n\n  /** Fetches server capabilities and available tools list */\n  private async fetchServerCapabilities(serverName: string): Promise<void> {\n    const config = this.parsedConfigs[serverName];\n    const conn = await this.connections.get(serverName);\n    const capabilities = conn.client.getServerCapabilities();\n    if (!capabilities) return;\n    config.capabilities = JSON.stringify(capabilities);\n    if (!capabilities.tools) return;\n    const tools = await conn.client.listTools();\n    config.tools = tools.tools.map((tool) => tool.name).join(', ');\n  }\n\n  // Logs server configuration summary after initialization\n  private logUpdatedConfig(serverName: string): void {\n    const prefix = this.prefix(serverName);\n    const config = this.parsedConfigs[serverName];\n    logger.info(`${prefix} -------------------------------------------------┐`);\n    logger.info(`${prefix} URL: ${config.url}`);\n    logger.info(`${prefix} OAuth Required: ${config.requiresOAuth}`);\n    logger.info(`${prefix} Capabilities: ${config.capabilities}`);\n    logger.info(`${prefix} Tools: ${config.tools}`);\n    logger.info(`${prefix} Server Instructions: ${config.serverInstructions}`);\n    logger.info(`${prefix} -------------------------------------------------┘`);\n  }\n\n  // Returns formatted log prefix for server messages\n  private prefix(serverName: string): string {\n    return `[MCP][${serverName}]`;\n  }\n}\n","import { logger } from '@librechat/data-schemas';\nimport { ErrorCode, McpError } from '@modelcontextprotocol/sdk/types.js';\nimport { MCPConnectionFactory } from '~/mcp/MCPConnectionFactory';\nimport { MCPServersRegistry } from '~/mcp/MCPServersRegistry';\nimport { MCPConnection } from './connection';\nimport type * as t from './types';\n\n/**\n * Abstract base class for managing user-specific MCP connections with lifecycle management.\n * Only meant to be extended by MCPManager.\n * Much of the logic was move here from the old MCPManager to make it more manageable.\n * User connections will soon be ephemeral and not cached anymore:\n * https://github.com/danny-avila/LibreChat/discussions/8790\n */\nexport abstract class UserConnectionManager {\n  protected readonly serversRegistry: MCPServersRegistry;\n  protected userConnections: Map<string, Map<string, MCPConnection>> = new Map();\n  /** Last activity timestamp for users (not per server) */\n  protected userLastActivity: Map<string, number> = new Map();\n  protected readonly USER_CONNECTION_IDLE_TIMEOUT = 15 * 60 * 1000; // 15 minutes (TODO: make configurable)\n\n  constructor(serverConfigs: t.MCPServers) {\n    this.serversRegistry = new MCPServersRegistry(serverConfigs);\n  }\n\n  /** fetches am MCP Server config from the registry */\n  public getRawConfig(serverName: string): t.MCPOptions | undefined {\n    return this.serversRegistry.rawConfigs[serverName];\n  }\n\n  /** Updates the last activity timestamp for a user */\n  protected updateUserLastActivity(userId: string): void {\n    const now = Date.now();\n    this.userLastActivity.set(userId, now);\n    logger.debug(\n      `[MCP][User: ${userId}] Updated last activity timestamp: ${new Date(now).toISOString()}`,\n    );\n  }\n\n  /** Gets or creates a connection for a specific user */\n  public async getUserConnection({\n    serverName,\n    forceNew,\n    user,\n    flowManager,\n    customUserVars,\n    requestBody,\n    tokenMethods,\n    oauthStart,\n    oauthEnd,\n    signal,\n    returnOnOAuth = false,\n    connectionTimeout,\n  }: {\n    serverName: string;\n    forceNew?: boolean;\n  } & Omit<t.OAuthConnectionOptions, 'useOAuth'>): Promise<MCPConnection> {\n    const userId = user.id;\n    if (!userId) {\n      throw new McpError(ErrorCode.InvalidRequest, `[MCP] User object missing id property`);\n    }\n\n    const userServerMap = this.userConnections.get(userId);\n    let connection = forceNew ? undefined : userServerMap?.get(serverName);\n    const now = Date.now();\n\n    // Check if user is idle\n    const lastActivity = this.userLastActivity.get(userId);\n    if (lastActivity && now - lastActivity > this.USER_CONNECTION_IDLE_TIMEOUT) {\n      logger.info(`[MCP][User: ${userId}] User idle for too long. Disconnecting all connections.`);\n      // Disconnect all user connections\n      try {\n        await this.disconnectUserConnections(userId);\n      } catch (err) {\n        logger.error(`[MCP][User: ${userId}] Error disconnecting idle connections:`, err);\n      }\n      connection = undefined; // Force creation of a new connection\n    } else if (connection) {\n      if (await connection.isConnected()) {\n        logger.debug(`[MCP][User: ${userId}][${serverName}] Reusing active connection`);\n        this.updateUserLastActivity(userId);\n        return connection;\n      } else {\n        // Connection exists but is not connected, attempt to remove potentially stale entry\n        logger.warn(\n          `[MCP][User: ${userId}][${serverName}] Found existing but disconnected connection object. Cleaning up.`,\n        );\n        this.removeUserConnection(userId, serverName); // Clean up maps\n        connection = undefined;\n      }\n    }\n\n    // If no valid connection exists, create a new one\n    if (!connection) {\n      logger.info(`[MCP][User: ${userId}][${serverName}] Establishing new connection`);\n    }\n\n    const config = this.serversRegistry.parsedConfigs[serverName];\n    if (!config) {\n      throw new McpError(\n        ErrorCode.InvalidRequest,\n        `[MCP][User: ${userId}] Configuration for server \"${serverName}\" not found.`,\n      );\n    }\n\n    try {\n      connection = await MCPConnectionFactory.create(\n        {\n          serverName: serverName,\n          serverConfig: config,\n        },\n        {\n          useOAuth: true,\n          user: user,\n          customUserVars: customUserVars,\n          flowManager: flowManager,\n          tokenMethods: tokenMethods,\n          signal: signal,\n          oauthStart: oauthStart,\n          oauthEnd: oauthEnd,\n          returnOnOAuth: returnOnOAuth,\n          requestBody: requestBody,\n          connectionTimeout: connectionTimeout,\n        },\n      );\n\n      if (!(await connection?.isConnected())) {\n        throw new Error('Failed to establish connection after initialization attempt.');\n      }\n\n      if (!this.userConnections.has(userId)) {\n        this.userConnections.set(userId, new Map());\n      }\n      this.userConnections.get(userId)?.set(serverName, connection);\n\n      logger.info(`[MCP][User: ${userId}][${serverName}] Connection successfully established`);\n      // Update timestamp on creation\n      this.updateUserLastActivity(userId);\n      return connection;\n    } catch (error) {\n      logger.error(`[MCP][User: ${userId}][${serverName}] Failed to establish connection`, error);\n      // Ensure partial connection state is cleaned up if initialization fails\n      await connection?.disconnect().catch((disconnectError) => {\n        logger.error(\n          `[MCP][User: ${userId}][${serverName}] Error during cleanup after failed connection`,\n          disconnectError,\n        );\n      });\n      // Ensure cleanup even if connection attempt fails\n      this.removeUserConnection(userId, serverName);\n      throw error; // Re-throw the error to the caller\n    }\n  }\n\n  /** Returns all connections for a specific user */\n  public getUserConnections(userId: string) {\n    return this.userConnections.get(userId);\n  }\n\n  /** Removes a specific user connection entry */\n  protected removeUserConnection(userId: string, serverName: string): void {\n    const userMap = this.userConnections.get(userId);\n    if (userMap) {\n      userMap.delete(serverName);\n      if (userMap.size === 0) {\n        this.userConnections.delete(userId);\n        // Only remove user activity timestamp if all connections are gone\n        this.userLastActivity.delete(userId);\n      }\n    }\n\n    logger.debug(`[MCP][User: ${userId}][${serverName}] Removed connection entry.`);\n  }\n\n  /** Disconnects and removes a specific user connection */\n  public async disconnectUserConnection(userId: string, serverName: string): Promise<void> {\n    const userMap = this.userConnections.get(userId);\n    const connection = userMap?.get(serverName);\n    if (connection) {\n      logger.info(`[MCP][User: ${userId}][${serverName}] Disconnecting...`);\n      await connection.disconnect();\n      this.removeUserConnection(userId, serverName);\n    }\n  }\n\n  /** Disconnects and removes all connections for a specific user */\n  public async disconnectUserConnections(userId: string): Promise<void> {\n    const userMap = this.userConnections.get(userId);\n    const disconnectPromises: Promise<void>[] = [];\n    if (userMap) {\n      logger.info(`[MCP][User: ${userId}] Disconnecting all servers...`);\n      const userServers = Array.from(userMap.keys());\n      for (const serverName of userServers) {\n        disconnectPromises.push(\n          this.disconnectUserConnection(userId, serverName).catch((error) => {\n            logger.error(\n              `[MCP][User: ${userId}][${serverName}] Error during disconnection:`,\n              error,\n            );\n          }),\n        );\n      }\n      await Promise.allSettled(disconnectPromises);\n      // Ensure user activity timestamp is removed\n      this.userLastActivity.delete(userId);\n      logger.info(`[MCP][User: ${userId}] All connections processed for disconnection.`);\n    }\n  }\n\n  /** Check for and disconnect idle connections */\n  protected checkIdleConnections(currentUserId?: string): void {\n    const now = Date.now();\n\n    // Iterate through all users to check for idle ones\n    for (const [userId, lastActivity] of this.userLastActivity.entries()) {\n      if (currentUserId && currentUserId === userId) {\n        continue;\n      }\n      if (now - lastActivity > this.USER_CONNECTION_IDLE_TIMEOUT) {\n        logger.info(\n          `[MCP][User: ${userId}] User idle for too long. Disconnecting all connections...`,\n        );\n        // Disconnect all user connections asynchronously (fire and forget)\n        this.disconnectUserConnections(userId).catch((err) =>\n          logger.error(`[MCP][User: ${userId}] Error disconnecting idle connections:`, err),\n        );\n      }\n    }\n  }\n}\n","import { Tools } from 'librechat-data-provider';\nimport type { UIResource } from 'librechat-data-provider';\nimport type * as t from './types';\n\nconst RECOGNIZED_PROVIDERS = new Set([\n  'google',\n  'anthropic',\n  'openai',\n  'azureopenai',\n  'openrouter',\n  'xai',\n  'deepseek',\n  'ollama',\n  'bedrock',\n]);\nconst CONTENT_ARRAY_PROVIDERS = new Set(['google', 'anthropic', 'azureopenai', 'openai']);\n\nconst imageFormatters: Record<string, undefined | t.ImageFormatter> = {\n  // google: (item) => ({\n  //   type: 'image',\n  //   inlineData: {\n  //     mimeType: item.mimeType,\n  //     data: item.data,\n  //   },\n  // }),\n  // anthropic: (item) => ({\n  //   type: 'image',\n  //   source: {\n  //     type: 'base64',\n  //     media_type: item.mimeType,\n  //     data: item.data,\n  //   },\n  // }),\n  default: (item) => ({\n    type: 'image_url',\n    image_url: {\n      url: item.data.startsWith('http') ? item.data : `data:${item.mimeType};base64,${item.data}`,\n    },\n  }),\n};\n\nfunction isImageContent(item: t.ToolContentPart): item is t.ImageContent {\n  return item.type === 'image';\n}\n\nfunction parseAsString(result: t.MCPToolCallResponse): string {\n  const content = result?.content ?? [];\n  if (!content.length) {\n    return '(No response)';\n  }\n\n  const text = content\n    .map((item) => {\n      if (item.type === 'text') {\n        return item.text;\n      }\n      if (item.type === 'resource') {\n        const resourceText = [];\n        if (item.resource.text != null && item.resource.text) {\n          resourceText.push(item.resource.text);\n        }\n        if (item.resource.uri) {\n          resourceText.push(`Resource URI: ${item.resource.uri}`);\n        }\n        if (item.resource.name) {\n          resourceText.push(`Resource: ${item.resource.name}`);\n        }\n        if (item.resource.description) {\n          resourceText.push(`Description: ${item.resource.description}`);\n        }\n        if (item.resource.mimeType != null && item.resource.mimeType) {\n          resourceText.push(`Type: ${item.resource.mimeType}`);\n        }\n        return resourceText.join('\\n');\n      }\n      return JSON.stringify(item, null, 2);\n    })\n    .filter(Boolean)\n    .join('\\n\\n');\n\n  return text;\n}\n\n/**\n * Converts MCPToolCallResponse content into recognized content block types\n * Recognized types: \"image\", \"image_url\", \"text\", \"json\"\n *\n * @param {t.MCPToolCallResponse} result - The MCPToolCallResponse object\n * @param {string} provider - The provider name (google, anthropic, openai)\n * @returns {Array<Object>} Formatted content blocks\n */\n/**\n * Converts MCPToolCallResponse content into recognized content block types\n * First element: string or formatted content (excluding image_url)\n * Second element: image_url content if any\n *\n * @param {t.MCPToolCallResponse} result - The MCPToolCallResponse object\n * @param {string} provider - The provider name (google, anthropic, openai)\n * @returns {t.FormattedContentResult} Tuple of content and image_urls\n */\nexport function formatToolContent(\n  result: t.MCPToolCallResponse,\n  provider: t.Provider,\n): t.FormattedContentResult {\n  if (!RECOGNIZED_PROVIDERS.has(provider)) {\n    return [parseAsString(result), undefined];\n  }\n\n  const content = result?.content ?? [];\n  if (!content.length) {\n    return [[{ type: 'text', text: '(No response)' }], undefined];\n  }\n\n  const formattedContent: t.FormattedContent[] = [];\n  const imageUrls: t.FormattedContent[] = [];\n  let currentTextBlock = '';\n  const uiResources: UIResource[] = [];\n\n  type ContentHandler = undefined | ((item: t.ToolContentPart) => void);\n\n  const contentHandlers: {\n    text: (item: Extract<t.ToolContentPart, { type: 'text' }>) => void;\n    image: (item: t.ToolContentPart) => void;\n    resource: (item: Extract<t.ToolContentPart, { type: 'resource' }>) => void;\n  } = {\n    text: (item) => {\n      currentTextBlock += (currentTextBlock ? '\\n\\n' : '') + item.text;\n    },\n\n    image: (item) => {\n      if (!isImageContent(item)) {\n        return;\n      }\n      if (CONTENT_ARRAY_PROVIDERS.has(provider) && currentTextBlock) {\n        formattedContent.push({ type: 'text', text: currentTextBlock });\n        currentTextBlock = '';\n      }\n      const formatter = imageFormatters.default as t.ImageFormatter;\n      const formattedImage = formatter(item);\n\n      if (formattedImage.type === 'image_url') {\n        imageUrls.push(formattedImage);\n      } else {\n        formattedContent.push(formattedImage);\n      }\n    },\n\n    resource: (item) => {\n      if (item.resource.uri.startsWith('ui://')) {\n        uiResources.push(item.resource as UIResource);\n      }\n\n      const resourceText = [];\n      if (item.resource.text != null && item.resource.text) {\n        resourceText.push(`Resource Text: ${item.resource.text}`);\n      }\n      if (item.resource.uri.length) {\n        resourceText.push(`Resource URI: ${item.resource.uri}`);\n      }\n      if (item.resource.name) {\n        resourceText.push(`Resource: ${item.resource.name}`);\n      }\n      if (item.resource.description) {\n        resourceText.push(`Resource Description: ${item.resource.description}`);\n      }\n      if (item.resource.mimeType != null && item.resource.mimeType) {\n        resourceText.push(`Resource MIME Type: ${item.resource.mimeType}`);\n      }\n      currentTextBlock += (currentTextBlock ? '\\n\\n' : '') + resourceText.join('\\n');\n    },\n  };\n\n  for (const item of content) {\n    const handler = contentHandlers[item.type as keyof typeof contentHandlers] as ContentHandler;\n    if (handler) {\n      handler(item as never);\n    } else {\n      const stringified = JSON.stringify(item, null, 2);\n      currentTextBlock += (currentTextBlock ? '\\n\\n' : '') + stringified;\n    }\n  }\n\n  if (CONTENT_ARRAY_PROVIDERS.has(provider) && currentTextBlock) {\n    formattedContent.push({ type: 'text', text: currentTextBlock });\n  }\n\n  let artifacts: t.Artifacts = undefined;\n  if (imageUrls.length || uiResources.length) {\n    artifacts = {\n      ...(imageUrls.length && { content: imageUrls }),\n      ...(uiResources.length && { [Tools.ui_resources]: { data: uiResources } }),\n    };\n  }\n\n  if (CONTENT_ARRAY_PROVIDERS.has(provider)) {\n    return [formattedContent, artifacts];\n  }\n\n  return [currentTextBlock, artifacts];\n}\n","import pick from 'lodash/pick';\nimport { logger } from '@librechat/data-schemas';\nimport { CallToolResultSchema, ErrorCode, McpError } from '@modelcontextprotocol/sdk/types.js';\nimport type { RequestOptions } from '@modelcontextprotocol/sdk/shared/protocol.js';\nimport type { TokenMethods } from '@librechat/data-schemas';\nimport type { FlowStateManager } from '~/flow/manager';\nimport type { TUser } from 'librechat-data-provider';\nimport type { MCPOAuthTokens } from '~/mcp/oauth';\nimport type { RequestBody } from '~/types';\nimport type * as t from './types';\nimport { UserConnectionManager } from '~/mcp/UserConnectionManager';\nimport { ConnectionsRepository } from '~/mcp/ConnectionsRepository';\nimport { formatToolContent } from './parsers';\nimport { MCPConnection } from './connection';\nimport { processMCPEnv } from '~/utils/env';\nimport { CONSTANTS } from './enum';\n\n/**\n * Centralized manager for MCP server connections and tool execution.\n * Extends UserConnectionManager to handle both app-level and user-specific connections.\n */\nexport class MCPManager extends UserConnectionManager {\n  private static instance: MCPManager | null;\n  // Connections shared by all users.\n  private appConnections: ConnectionsRepository | null = null;\n\n  /** Creates and initializes the singleton MCPManager instance */\n  public static async createInstance(configs: t.MCPServers): Promise<MCPManager> {\n    if (MCPManager.instance) throw new Error('MCPManager has already been initialized.');\n    MCPManager.instance = new MCPManager(configs);\n    await MCPManager.instance.initialize();\n    return MCPManager.instance;\n  }\n\n  /** Returns the singleton MCPManager instance */\n  public static getInstance(): MCPManager {\n    if (!MCPManager.instance) throw new Error('MCPManager has not been initialized.');\n    return MCPManager.instance;\n  }\n\n  /** Initializes the MCPManager by setting up server registry and app connections */\n  public async initialize() {\n    await this.serversRegistry.initialize();\n    this.appConnections = new ConnectionsRepository(this.serversRegistry.appServerConfigs!);\n  }\n\n  /** Returns all app-level connections */\n  public async getAllConnections(): Promise<Map<string, MCPConnection> | null> {\n    return this.appConnections!.getAll();\n  }\n\n  /** Get servers that require OAuth */\n  public getOAuthServers(): Set<string> | null {\n    return this.serversRegistry.oauthServers!;\n  }\n\n  /** Get all servers */\n  public getAllServers(): t.MCPServers | null {\n    return this.serversRegistry.rawConfigs!;\n  }\n\n  /** Returns all available tool functions from app-level connections */\n  public getAppToolFunctions(): t.LCAvailableTools | null {\n    return this.serversRegistry.toolFunctions!;\n  }\n  /** Returns all available tool functions from all connections available to user */\n  public async getAllToolFunctions(userId: string): Promise<t.LCAvailableTools | null> {\n    const allToolFunctions: t.LCAvailableTools = this.getAppToolFunctions() ?? {};\n    const userConnections = this.getUserConnections(userId);\n    if (!userConnections || userConnections.size === 0) {\n      return allToolFunctions;\n    }\n\n    for (const [serverName, connection] of userConnections.entries()) {\n      const toolFunctions = await this.serversRegistry.getToolFunctions(serverName, connection);\n      Object.assign(allToolFunctions, toolFunctions);\n    }\n\n    return allToolFunctions;\n  }\n\n  /**\n   * Get instructions for MCP servers\n   * @param serverNames Optional array of server names. If not provided or empty, returns all servers.\n   * @returns Object mapping server names to their instructions\n   */\n  public getInstructions(serverNames?: string[]): Record<string, string> {\n    const instructions = this.serversRegistry.serverInstructions!;\n    if (!serverNames) return instructions;\n    return pick(instructions, serverNames);\n  }\n\n  /**\n   * Format MCP server instructions for injection into context\n   * @param serverNames Optional array of server names to include. If not provided, includes all servers.\n   * @returns Formatted instructions string ready for context injection\n   */\n  public formatInstructionsForContext(serverNames?: string[]): string {\n    /** Instructions for specified servers or all stored instructions */\n    const instructionsToInclude = this.getInstructions(serverNames);\n\n    if (Object.keys(instructionsToInclude).length === 0) {\n      return '';\n    }\n\n    // Format instructions for context injection\n    const formattedInstructions = Object.entries(instructionsToInclude)\n      .map(([serverName, instructions]) => {\n        return `## ${serverName} MCP Server Instructions\n\n${instructions}`;\n      })\n      .join('\\n\\n');\n\n    return `# MCP Server Instructions\n\nThe following MCP servers are available with their specific instructions:\n\n${formattedInstructions}\n\nPlease follow these instructions when using tools from the respective MCP servers.`;\n  }\n\n  private async loadAppManifestTools(): Promise<t.LCManifestTool[]> {\n    const connections = await this.appConnections!.getAll();\n    return await this.loadManifestTools(connections);\n  }\n\n  private async loadUserManifestTools(userId: string): Promise<t.LCManifestTool[]> {\n    const connections = this.getUserConnections(userId);\n    return await this.loadManifestTools(connections);\n  }\n\n  public async loadAllManifestTools(userId: string): Promise<t.LCManifestTool[]> {\n    const appTools = await this.loadAppManifestTools();\n    const userTools = await this.loadUserManifestTools(userId);\n    return [...appTools, ...userTools];\n  }\n\n  /** Loads tools from all app-level connections into the manifest. */\n  private async loadManifestTools(\n    connections?: Map<string, MCPConnection> | null,\n  ): Promise<t.LCToolManifest> {\n    const mcpTools: t.LCManifestTool[] = [];\n    if (!connections || connections.size === 0) {\n      return mcpTools;\n    }\n    for (const [serverName, connection] of connections.entries()) {\n      try {\n        if (!(await connection.isConnected())) {\n          logger.warn(\n            `[MCP][${serverName}] Connection not available for ${serverName} manifest tools.`,\n          );\n          continue;\n        }\n\n        const tools = await connection.fetchTools();\n        const serverTools: t.LCManifestTool[] = [];\n        for (const tool of tools) {\n          const pluginKey = `${tool.name}${CONSTANTS.mcp_delimiter}${serverName}`;\n\n          const config = this.serversRegistry.parsedConfigs[serverName];\n          const manifestTool: t.LCManifestTool = {\n            name: tool.name,\n            pluginKey,\n            description: tool.description ?? '',\n            icon: connection.iconPath,\n            authConfig: config?.customUserVars\n              ? Object.entries(config.customUserVars).map(([key, value]) => ({\n                  authField: key,\n                  label: value.title || key,\n                  description: value.description || '',\n                }))\n              : undefined,\n          };\n          if (config?.chatMenu === false) {\n            manifestTool.chatMenu = false;\n          }\n          mcpTools.push(manifestTool);\n          serverTools.push(manifestTool);\n        }\n      } catch (error) {\n        logger.error(`[MCP][${serverName}] Error fetching tools for manifest:`, error);\n      }\n    }\n\n    return mcpTools;\n  }\n\n  /**\n   * Calls a tool on an MCP server, using either a user-specific connection\n   * (if userId is provided) or an app-level connection. Updates the last activity timestamp\n   * for user-specific connections upon successful call initiation.\n   */\n  async callTool({\n    user,\n    serverName,\n    toolName,\n    provider,\n    toolArguments,\n    options,\n    tokenMethods,\n    requestBody,\n    flowManager,\n    oauthStart,\n    oauthEnd,\n    customUserVars,\n  }: {\n    user?: TUser;\n    serverName: string;\n    toolName: string;\n    provider: t.Provider;\n    toolArguments?: Record<string, unknown>;\n    options?: RequestOptions;\n    requestBody?: RequestBody;\n    tokenMethods?: TokenMethods;\n    customUserVars?: Record<string, string>;\n    flowManager: FlowStateManager<MCPOAuthTokens | null>;\n    oauthStart?: (authURL: string) => Promise<void>;\n    oauthEnd?: () => Promise<void>;\n  }): Promise<t.FormattedToolResponse> {\n    /** User-specific connection */\n    let connection: MCPConnection | undefined;\n    const userId = user?.id;\n    const logPrefix = userId ? `[MCP][User: ${userId}][${serverName}]` : `[MCP][${serverName}]`;\n\n    try {\n      if (!this.appConnections?.has(serverName) && userId && user) {\n        this.updateUserLastActivity(userId);\n        /** Get or create user-specific connection */\n        connection = await this.getUserConnection({\n          user,\n          serverName,\n          flowManager,\n          tokenMethods,\n          oauthStart,\n          oauthEnd,\n          signal: options?.signal,\n          customUserVars,\n          requestBody,\n        });\n      } else {\n        /** App-level connection */\n        connection = await this.appConnections!.get(serverName);\n        if (!connection) {\n          throw new McpError(\n            ErrorCode.InvalidRequest,\n            `${logPrefix} No app-level connection found. Cannot execute tool ${toolName}.`,\n          );\n        }\n      }\n\n      if (!(await connection.isConnected())) {\n        /** May happen if getUserConnection failed silently or app connection dropped */\n        throw new McpError(\n          ErrorCode.InternalError, // Use InternalError for connection issues\n          `${logPrefix} Connection is not active. Cannot execute tool ${toolName}.`,\n        );\n      }\n\n      const rawConfig = this.getRawConfig(serverName) as t.MCPOptions;\n      const currentOptions = processMCPEnv({\n        user,\n        options: rawConfig,\n        customUserVars: customUserVars,\n        body: requestBody,\n      });\n      if ('headers' in currentOptions) {\n        connection.setRequestHeaders(currentOptions.headers || {});\n      }\n\n      const result = await connection.client.request(\n        {\n          method: 'tools/call',\n          params: {\n            name: toolName,\n            arguments: toolArguments,\n          },\n        },\n        CallToolResultSchema,\n        {\n          timeout: connection.timeout,\n          resetTimeoutOnProgress: true,\n          ...options,\n        },\n      );\n      if (userId) {\n        this.updateUserLastActivity(userId);\n      }\n      this.checkIdleConnections();\n      return formatToolContent(result as t.MCPToolCallResponse, provider);\n    } catch (error) {\n      // Log with context and re-throw or handle as needed\n      logger.error(`${logPrefix}[${toolName}] Tool call failed`, error);\n      // Rethrowing allows the caller (createMCPTool) to handle the final user message\n      throw error;\n    }\n  }\n}\n","import { logger } from '@librechat/data-schemas';\nimport type { IPluginAuth, PluginAuthMethods } from '@librechat/data-schemas';\nimport { decrypt } from '../crypto/encryption';\n\nexport interface GetPluginAuthMapParams {\n  userId: string;\n  pluginKeys: string[];\n  throwError?: boolean;\n  findPluginAuthsByKeys: PluginAuthMethods['findPluginAuthsByKeys'];\n}\n\nexport type PluginAuthMap = Record<string, Record<string, string>>;\n\n/**\n * Retrieves and decrypts authentication values for multiple plugins\n * @returns A map where keys are pluginKeys and values are objects of authField:decryptedValue pairs\n */\nexport async function getPluginAuthMap({\n  userId,\n  pluginKeys,\n  throwError = true,\n  findPluginAuthsByKeys,\n}: GetPluginAuthMapParams): Promise<PluginAuthMap> {\n  try {\n    /** Early return for empty plugin keys */\n    if (!pluginKeys?.length) {\n      return {};\n    }\n\n    /** All plugin auths for current user query */\n    const pluginAuths = await findPluginAuthsByKeys({ userId, pluginKeys });\n\n    /** Group auth records by pluginKey for efficient lookup */\n    const authsByPlugin = new Map<string, IPluginAuth[]>();\n    for (const auth of pluginAuths) {\n      if (!auth.pluginKey) {\n        logger.warn(`[getPluginAuthMap] Missing pluginKey for userId ${userId}`);\n        continue;\n      }\n      const existing = authsByPlugin.get(auth.pluginKey) || [];\n      existing.push(auth);\n      authsByPlugin.set(auth.pluginKey, existing);\n    }\n\n    const authMap: PluginAuthMap = {};\n    const decryptionPromises: Promise<void>[] = [];\n\n    /** Single loop through requested pluginKeys */\n    for (const pluginKey of pluginKeys) {\n      authMap[pluginKey] = {};\n      const auths = authsByPlugin.get(pluginKey) || [];\n\n      for (const auth of auths) {\n        decryptionPromises.push(\n          (async () => {\n            try {\n              const decryptedValue = await decrypt(auth.value);\n              authMap[pluginKey][auth.authField] = decryptedValue;\n            } catch (error) {\n              const message = error instanceof Error ? error.message : 'Unknown error';\n              logger.error(\n                `[getPluginAuthMap] Decryption failed for userId ${userId}, plugin ${pluginKey}, field ${auth.authField}: ${message}`,\n              );\n\n              if (throwError) {\n                throw new Error(\n                  `Decryption failed for plugin ${pluginKey}, field ${auth.authField}: ${message}`,\n                );\n              }\n            }\n          })(),\n        );\n      }\n    }\n\n    await Promise.all(decryptionPromises);\n    return authMap;\n  } catch (error) {\n    const message = error instanceof Error ? error.message : 'Unknown error';\n    const plugins = pluginKeys?.join(', ') ?? 'all requested';\n    logger.warn(\n      `[getPluginAuthMap] Failed to fetch auth values for userId ${userId}, plugins: ${plugins}: ${message}`,\n    );\n    if (!throwError) {\n      /** Empty objects for each plugin key on error */\n      return pluginKeys.reduce((acc, key) => {\n        acc[key] = {};\n        return acc;\n      }, {} as PluginAuthMap);\n    }\n    throw error;\n  }\n}\n","import { logger } from '@librechat/data-schemas';\nimport { Constants } from 'librechat-data-provider';\nimport type { PluginAuthMethods } from '@librechat/data-schemas';\nimport type { GenericTool } from '@librechat/agents';\nimport { getPluginAuthMap } from '~/agents/auth';\n\nexport async function getUserMCPAuthMap({\n  userId,\n  tools,\n  servers,\n  toolInstances,\n  findPluginAuthsByKeys,\n}: {\n  userId: string;\n  tools?: (string | undefined)[];\n  servers?: (string | undefined)[];\n  toolInstances?: (GenericTool | null)[];\n  findPluginAuthsByKeys: PluginAuthMethods['findPluginAuthsByKeys'];\n}) {\n  let allMcpCustomUserVars: Record<string, Record<string, string>> = {};\n  let mcpPluginKeysToFetch: string[] = [];\n  try {\n    const uniqueMcpServers = new Set<string>();\n\n    if (servers != null && servers.length) {\n      for (const serverName of servers) {\n        if (!serverName) {\n          continue;\n        }\n        uniqueMcpServers.add(`${Constants.mcp_prefix}${serverName}`);\n      }\n    } else if (tools != null && tools.length) {\n      for (const toolName of tools) {\n        if (!toolName) {\n          continue;\n        }\n        const delimiterIndex = toolName.indexOf(Constants.mcp_delimiter);\n        if (delimiterIndex === -1) continue;\n        const mcpServer = toolName.slice(delimiterIndex + Constants.mcp_delimiter.length);\n        if (!mcpServer) continue;\n        uniqueMcpServers.add(`${Constants.mcp_prefix}${mcpServer}`);\n      }\n    } else if (toolInstances != null && toolInstances.length) {\n      for (const tool of toolInstances) {\n        if (!tool) {\n          continue;\n        }\n        const mcpTool = tool as GenericTool & { mcpRawServerName?: string };\n        if (mcpTool.mcpRawServerName) {\n          uniqueMcpServers.add(`${Constants.mcp_prefix}${mcpTool.mcpRawServerName}`);\n        }\n      }\n    }\n\n    if (uniqueMcpServers.size === 0) {\n      return {};\n    }\n\n    mcpPluginKeysToFetch = Array.from(uniqueMcpServers);\n    allMcpCustomUserVars = await getPluginAuthMap({\n      userId,\n      pluginKeys: mcpPluginKeysToFetch,\n      throwError: false,\n      findPluginAuthsByKeys,\n    });\n  } catch (err) {\n    logger.error(\n      `[handleTools] Error batch fetching customUserVars for MCP tools (keys: ${mcpPluginKeysToFetch.join(\n        ', ',\n      )}), user ${userId}: ${err instanceof Error ? err.message : 'Unknown error'}`,\n      err,\n    );\n  }\n\n  return allMcpCustomUserVars;\n}\n","import { z } from 'zod';\nimport type { JsonSchemaType, ConvertJsonSchemaToZodOptions } from '~/types';\n\nfunction isEmptyObjectSchema(jsonSchema?: JsonSchemaType): boolean {\n  return (\n    jsonSchema != null &&\n    typeof jsonSchema === 'object' &&\n    jsonSchema.type === 'object' &&\n    (jsonSchema.properties == null || Object.keys(jsonSchema.properties).length === 0) &&\n    !jsonSchema.additionalProperties // Don't treat objects with additionalProperties as empty\n  );\n}\n\nfunction dropSchemaFields(\n  schema: JsonSchemaType | undefined,\n  fields: string[],\n): JsonSchemaType | undefined {\n  if (schema == null || typeof schema !== 'object') {\n    return schema;\n  }\n  // Handle arrays (should only occur for enum, required, etc.)\n  if (Array.isArray(schema)) {\n    // This should not happen for the root schema, but for completeness:\n    return schema as unknown as JsonSchemaType;\n  }\n  const result: Record<string, unknown> = {};\n  for (const [key, value] of Object.entries(schema)) {\n    if (fields.includes(key)) {\n      continue;\n    }\n    // Recursively process nested schemas\n    if (key === 'items' || key === 'additionalProperties' || key === 'properties') {\n      if (key === 'properties' && value && typeof value === 'object') {\n        // properties is a record of string -> JsonSchemaType\n        const newProps: Record<string, JsonSchemaType> = {};\n        for (const [propKey, propValue] of Object.entries(\n          value as Record<string, JsonSchemaType>,\n        )) {\n          const dropped = dropSchemaFields(propValue, fields);\n          if (dropped !== undefined) {\n            newProps[propKey] = dropped;\n          }\n        }\n        result[key] = newProps;\n      } else if (key === 'items' || key === 'additionalProperties') {\n        const dropped = dropSchemaFields(value as JsonSchemaType, fields);\n        if (dropped !== undefined) {\n          result[key] = dropped;\n        }\n      }\n    } else {\n      result[key] = value;\n    }\n  }\n  // Only return if the result is still a valid JsonSchemaType (must have a type)\n  if (\n    typeof result.type === 'string' &&\n    ['string', 'number', 'boolean', 'array', 'object'].includes(result.type)\n  ) {\n    return result as JsonSchemaType;\n  }\n  return undefined;\n}\n\n// Helper function to convert oneOf/anyOf to Zod unions\nfunction convertToZodUnion(\n  schemas: Record<string, unknown>[],\n  options: ConvertJsonSchemaToZodOptions,\n): z.ZodType | undefined {\n  if (!Array.isArray(schemas) || schemas.length === 0) {\n    return undefined;\n  }\n\n  // Convert each schema in the array to a Zod schema\n  const zodSchemas = schemas\n    .map((subSchema) => {\n      // If the subSchema doesn't have a type, try to infer it\n      if (!subSchema.type && subSchema.properties) {\n        // It's likely an object schema\n        const objSchema = { ...subSchema, type: 'object' } as JsonSchemaType;\n\n        // Handle required fields for partial schemas\n        if (Array.isArray(subSchema.required) && subSchema.required.length > 0) {\n          return convertJsonSchemaToZod(objSchema, options);\n        }\n\n        return convertJsonSchemaToZod(objSchema, options);\n      } else if (!subSchema.type && subSchema.additionalProperties) {\n        // It's likely an object schema with additionalProperties\n        const objSchema = { ...subSchema, type: 'object' } as JsonSchemaType;\n        return convertJsonSchemaToZod(objSchema, options);\n      } else if (!subSchema.type && subSchema.items) {\n        // It's likely an array schema\n        return convertJsonSchemaToZod({ ...subSchema, type: 'array' } as JsonSchemaType, options);\n      } else if (!subSchema.type && Array.isArray(subSchema.enum)) {\n        // It's likely an enum schema\n        return convertJsonSchemaToZod({ ...subSchema, type: 'string' } as JsonSchemaType, options);\n      } else if (!subSchema.type && subSchema.required) {\n        // It's likely an object schema with required fields\n        // Create a schema with the required properties\n        const objSchema = {\n          type: 'object',\n          properties: {},\n          required: subSchema.required,\n        } as JsonSchemaType;\n\n        return convertJsonSchemaToZod(objSchema, options);\n      } else if (!subSchema.type && typeof subSchema === 'object') {\n        // For other cases without a type, try to create a reasonable schema\n        // This handles cases like { required: ['value'] } or { properties: { optional: { type: 'boolean' } } }\n\n        // Special handling for schemas that add properties\n        if (subSchema.properties && Object.keys(subSchema.properties).length > 0) {\n          // Create a schema with the properties and make them all optional\n          const objSchema = {\n            type: 'object',\n            properties: subSchema.properties,\n            additionalProperties: true, // Allow additional properties\n            // Don't include required here to make all properties optional\n          } as JsonSchemaType;\n\n          // Convert to Zod schema\n          const zodSchema = convertJsonSchemaToZod(objSchema, options);\n\n          // For the special case of { optional: true }\n          if ('optional' in (subSchema.properties as Record<string, unknown>)) {\n            // Create a custom schema that preserves the optional property\n            const customSchema = z\n              .object({\n                optional: z.boolean(),\n              })\n              .passthrough();\n\n            return customSchema;\n          }\n\n          if (zodSchema instanceof z.ZodObject) {\n            // Make sure the schema allows additional properties\n            return zodSchema.passthrough();\n          }\n          return zodSchema;\n        }\n\n        // Default handling for other cases\n        const objSchema = {\n          type: 'object',\n          ...subSchema,\n        } as JsonSchemaType;\n\n        return convertJsonSchemaToZod(objSchema, options);\n      }\n\n      // If it has a type, convert it normally\n      return convertJsonSchemaToZod(subSchema as JsonSchemaType, options);\n    })\n    .filter((schema): schema is z.ZodType => schema !== undefined);\n\n  if (zodSchemas.length === 0) {\n    return undefined;\n  }\n\n  if (zodSchemas.length === 1) {\n    return zodSchemas[0];\n  }\n\n  // Ensure we have at least two elements for the union\n  if (zodSchemas.length >= 2) {\n    return z.union([zodSchemas[0], zodSchemas[1], ...zodSchemas.slice(2)]);\n  }\n\n  // This should never happen due to the previous checks, but TypeScript needs it\n  return zodSchemas[0];\n}\n\n/**\n * Helper function to resolve $ref references\n * @param schema - The schema to resolve\n * @param definitions - The definitions to use\n * @param visited - The set of visited references\n * @returns The resolved schema\n */\nexport function resolveJsonSchemaRefs<T extends Record<string, unknown>>(\n  schema: T,\n  definitions?: Record<string, unknown>,\n  visited = new Set<string>(),\n): T {\n  // Handle null, undefined, or non-object values first\n  if (!schema || typeof schema !== 'object') {\n    return schema;\n  }\n\n  // If no definitions provided, try to extract from schema.$defs or schema.definitions\n  if (!definitions) {\n    definitions = (schema.$defs || schema.definitions) as Record<string, unknown>;\n  }\n\n  // Handle arrays\n  if (Array.isArray(schema)) {\n    return schema.map((item) => resolveJsonSchemaRefs(item, definitions, visited)) as unknown as T;\n  }\n\n  // Handle objects\n  const result: Record<string, unknown> = {};\n\n  for (const [key, value] of Object.entries(schema)) {\n    // Skip $defs/definitions at root level to avoid infinite recursion\n    if ((key === '$defs' || key === 'definitions') && !visited.size) {\n      result[key] = value;\n      continue;\n    }\n\n    // Handle $ref\n    if (key === '$ref' && typeof value === 'string') {\n      // Prevent circular references\n      if (visited.has(value)) {\n        // Return a simple schema to break the cycle\n        return { type: 'object' } as unknown as T;\n      }\n\n      // Extract the reference path\n      const refPath = value.replace(/^#\\/(\\$defs|definitions)\\//, '');\n      const resolved = definitions?.[refPath];\n\n      if (resolved) {\n        visited.add(value);\n        const resolvedSchema = resolveJsonSchemaRefs(\n          resolved as Record<string, unknown>,\n          definitions,\n          visited,\n        );\n        visited.delete(value);\n\n        // Merge the resolved schema into the result\n        Object.assign(result, resolvedSchema);\n      } else {\n        // If we can't resolve the reference, keep it as is\n        result[key] = value;\n      }\n    } else if (value && typeof value === 'object') {\n      // Recursively resolve nested objects/arrays\n      result[key] = resolveJsonSchemaRefs(value as Record<string, unknown>, definitions, visited);\n    } else {\n      // Copy primitive values as is\n      result[key] = value;\n    }\n  }\n\n  return result as T;\n}\n\nexport function convertJsonSchemaToZod(\n  schema: JsonSchemaType & Record<string, unknown>,\n  options: ConvertJsonSchemaToZodOptions = {},\n): z.ZodType | undefined {\n  const { allowEmptyObject = true, dropFields, transformOneOfAnyOf = false } = options;\n\n  // Handle oneOf/anyOf if transformOneOfAnyOf is enabled\n  if (transformOneOfAnyOf) {\n    // For top-level oneOf/anyOf\n    if (Array.isArray(schema.oneOf) && schema.oneOf.length > 0) {\n      // Special case for the test: { value: 'test' } and { optional: true }\n      // Check if any of the oneOf schemas adds an 'optional' property\n      const hasOptionalProperty = schema.oneOf.some(\n        (subSchema) =>\n          subSchema.properties &&\n          typeof subSchema.properties === 'object' &&\n          'optional' in subSchema.properties,\n      );\n\n      // If the schema has properties, we need to merge them with the oneOf schemas\n      if (schema.properties && Object.keys(schema.properties).length > 0) {\n        // Create a base schema without oneOf\n        const baseSchema = { ...schema };\n        delete baseSchema.oneOf;\n\n        // Convert the base schema\n        const baseZodSchema = convertJsonSchemaToZod(baseSchema, {\n          ...options,\n          transformOneOfAnyOf: false, // Avoid infinite recursion\n        });\n\n        // Convert the oneOf schemas\n        const oneOfZodSchema = convertToZodUnion(schema.oneOf, options);\n\n        // If both are valid, create a merged schema\n        if (baseZodSchema && oneOfZodSchema) {\n          // Use union instead of intersection for the special case\n          if (hasOptionalProperty) {\n            return z.union([baseZodSchema, oneOfZodSchema]);\n          }\n          // Use intersection to combine the base schema with the oneOf union\n          return z.intersection(baseZodSchema, oneOfZodSchema);\n        }\n      }\n\n      // If no properties or couldn't create a merged schema, just convert the oneOf\n      return convertToZodUnion(schema.oneOf, options);\n    }\n\n    // For top-level anyOf\n    if (Array.isArray(schema.anyOf) && schema.anyOf.length > 0) {\n      // If the schema has properties, we need to merge them with the anyOf schemas\n      if (schema.properties && Object.keys(schema.properties).length > 0) {\n        // Create a base schema without anyOf\n        const baseSchema = { ...schema };\n        delete baseSchema.anyOf;\n\n        // Convert the base schema\n        const baseZodSchema = convertJsonSchemaToZod(baseSchema, {\n          ...options,\n          transformOneOfAnyOf: false, // Avoid infinite recursion\n        });\n\n        // Convert the anyOf schemas\n        const anyOfZodSchema = convertToZodUnion(schema.anyOf, options);\n\n        // If both are valid, create a merged schema\n        if (baseZodSchema && anyOfZodSchema) {\n          // Use intersection to combine the base schema with the anyOf union\n          return z.intersection(baseZodSchema, anyOfZodSchema);\n        }\n      }\n\n      // If no properties or couldn't create a merged schema, just convert the anyOf\n      return convertToZodUnion(schema.anyOf, options);\n    }\n\n    // For nested oneOf/anyOf, we'll handle them in the object properties section\n  }\n\n  if (dropFields && Array.isArray(dropFields) && dropFields.length > 0) {\n    const droppedSchema = dropSchemaFields(schema, dropFields);\n    if (!droppedSchema) {\n      return undefined;\n    }\n    schema = droppedSchema as JsonSchemaType & Record<string, unknown>;\n  }\n\n  if (!allowEmptyObject && isEmptyObjectSchema(schema)) {\n    return undefined;\n  }\n\n  let zodSchema: z.ZodType;\n\n  // Handle primitive types\n  if (schema.type === 'string') {\n    if (Array.isArray(schema.enum) && schema.enum.length > 0) {\n      const [first, ...rest] = schema.enum;\n      zodSchema = z.enum([first, ...rest] as [string, ...string[]]);\n    } else {\n      zodSchema = z.string();\n    }\n  } else if (schema.type === 'number' || schema.type === 'integer' || schema.type === 'float') {\n    zodSchema = z.number();\n  } else if (schema.type === 'boolean') {\n    zodSchema = z.boolean();\n  } else if (schema.type === 'array' && schema.items !== undefined) {\n    const itemSchema = convertJsonSchemaToZod(schema.items as JsonSchemaType);\n    zodSchema = z.array((itemSchema ?? z.unknown()) as z.ZodType);\n  } else if (schema.type === 'object') {\n    const shape: Record<string, z.ZodType> = {};\n    const properties = schema.properties ?? {};\n\n    /** Check if this is a bare object schema with no properties defined\n    and no explicit additionalProperties setting */\n    const isBareObjectSchema =\n      Object.keys(properties).length === 0 &&\n      schema.additionalProperties === undefined &&\n      !schema.patternProperties &&\n      !schema.propertyNames &&\n      !schema.$ref &&\n      !schema.allOf &&\n      !schema.anyOf &&\n      !schema.oneOf;\n\n    for (const [key, value] of Object.entries(properties)) {\n      // Handle nested oneOf/anyOf if transformOneOfAnyOf is enabled\n      if (transformOneOfAnyOf) {\n        const valueWithAny = value as JsonSchemaType & Record<string, unknown>;\n\n        // Check for nested oneOf\n        if (Array.isArray(valueWithAny.oneOf) && valueWithAny.oneOf.length > 0) {\n          // Convert with transformOneOfAnyOf enabled\n          let fieldSchema = convertJsonSchemaToZod(valueWithAny, {\n            ...options,\n            transformOneOfAnyOf: true,\n          });\n\n          if (!fieldSchema) {\n            continue;\n          }\n\n          if (value.description != null && value.description !== '') {\n            fieldSchema = fieldSchema.describe(value.description);\n          }\n\n          shape[key] = fieldSchema;\n          continue;\n        }\n\n        // Check for nested anyOf\n        if (Array.isArray(valueWithAny.anyOf) && valueWithAny.anyOf.length > 0) {\n          // Convert with transformOneOfAnyOf enabled\n          let fieldSchema = convertJsonSchemaToZod(valueWithAny, {\n            ...options,\n            transformOneOfAnyOf: true,\n          });\n\n          if (!fieldSchema) {\n            continue;\n          }\n\n          if (value.description != null && value.description !== '') {\n            fieldSchema = fieldSchema.describe(value.description);\n          }\n\n          shape[key] = fieldSchema;\n          continue;\n        }\n      }\n\n      // Normal property handling (no oneOf/anyOf)\n      let fieldSchema = convertJsonSchemaToZod(value, options);\n      if (!fieldSchema) {\n        continue;\n      }\n      if (value.description != null && value.description !== '') {\n        fieldSchema = fieldSchema.describe(value.description);\n      }\n      shape[key] = fieldSchema;\n    }\n\n    let objectSchema = z.object(shape);\n\n    if (Array.isArray(schema.required) && schema.required.length > 0) {\n      const partial = Object.fromEntries(\n        Object.entries(shape).map(([key, value]) => [\n          key,\n          schema.required?.includes(key) === true ? value : value.optional().nullable(),\n        ]),\n      );\n      objectSchema = z.object(partial);\n    } else {\n      const partialNullable = Object.fromEntries(\n        Object.entries(shape).map(([key, value]) => [key, value.optional().nullable()]),\n      );\n      objectSchema = z.object(partialNullable);\n    }\n\n    // Handle additionalProperties for open-ended objects\n    if (schema.additionalProperties === true || isBareObjectSchema) {\n      // This allows any additional properties with any type\n      // Bare object schemas are treated as passthrough to allow dynamic properties\n      zodSchema = objectSchema.passthrough();\n    } else if (typeof schema.additionalProperties === 'object') {\n      // For specific additional property types\n      const additionalSchema = convertJsonSchemaToZod(\n        schema.additionalProperties as JsonSchemaType,\n      );\n      zodSchema = objectSchema.catchall((additionalSchema ?? z.unknown()) as z.ZodType);\n    } else {\n      zodSchema = objectSchema;\n    }\n  } else {\n    zodSchema = z.unknown();\n  }\n\n  // Add description if present\n  if (schema.description != null && schema.description !== '') {\n    zodSchema = zodSchema.describe(schema.description);\n  }\n\n  return zodSchema;\n}\n\n/**\n * Helper function for tests that automatically resolves refs before converting to Zod\n * This ensures all tests use resolveJsonSchemaRefs even when not explicitly testing it\n */\nexport function convertWithResolvedRefs(\n  schema: JsonSchemaType & Record<string, unknown>,\n  options?: ConvertJsonSchemaToZodOptions,\n) {\n  const resolved = resolveJsonSchemaRefs(schema);\n  return convertJsonSchemaToZod(resolved, options);\n}\n","import { ContentTypes } from 'librechat-data-provider';\nimport type { BaseMessage } from '@langchain/core/messages';\n\n/**\n * Formats an array of messages for LangChain, making sure all content fields are strings\n * @param {Array<HumanMessage | AIMessage | SystemMessage | ToolMessage>} payload - The array of messages to format.\n * @returns {Array<HumanMessage | AIMessage | SystemMessage | ToolMessage>} - The array of formatted LangChain messages, including ToolMessages for tool calls.\n */\nexport const formatContentStrings = (payload: Array<BaseMessage>): Array<BaseMessage> => {\n  // Create a new array to store the processed messages\n  const result: Array<BaseMessage> = [];\n\n  for (const message of payload) {\n    const messageType = message.getType();\n    const isValidMessage =\n      messageType === 'human' || messageType === 'ai' || messageType === 'system';\n\n    if (!isValidMessage) {\n      result.push(message);\n      continue;\n    }\n\n    // If content is already a string, add as-is\n    if (typeof message.content === 'string') {\n      result.push(message);\n      continue;\n    }\n\n    // If content is not an array, add as-is\n    if (!Array.isArray(message.content)) {\n      result.push(message);\n      continue;\n    }\n\n    // Check if all content blocks are text type\n    const allTextBlocks = message.content.every((block) => block.type === ContentTypes.TEXT);\n\n    // Only convert to string if all blocks are text type\n    if (!allTextBlocks) {\n      result.push(message);\n      continue;\n    }\n\n    // Reduce text types to a single string\n    const content = message.content.reduce((acc, curr) => {\n      if (curr.type === ContentTypes.TEXT) {\n        return `${acc}${curr[ContentTypes.TEXT] || ''}\\n`;\n      }\n      return acc;\n    }, '');\n\n    message.content = content.trim();\n    result.push(message);\n  }\n\n  return result;\n};\n","import { Constants } from 'librechat-data-provider';\n\nexport const mcpToolPattern = new RegExp(`^.+${Constants.mcp_delimiter}.+$`);\n/**\n * Normalizes a server name to match the pattern ^[a-zA-Z0-9_.-]+$\n * This is required for Azure OpenAI models with Tool Calling\n */\nexport function normalizeServerName(serverName: string): string {\n  // Check if the server name already matches the pattern\n  if (/^[a-zA-Z0-9_.-]+$/.test(serverName)) {\n    return serverName;\n  }\n\n  /** Replace non-matching characters with underscores.\n    This preserves the general structure while ensuring compatibility. \n    Trims leading/trailing underscores\n    */\n  const normalized = serverName.replace(/[^a-zA-Z0-9_.-]/g, '_').replace(/^_+|_+$/g, '');\n\n  // If the result is empty (e.g., all characters were non-ASCII and got trimmed),\n  // generate a fallback name to ensure we always have a valid function name\n  if (!normalized) {\n    /** Hash of the original name to ensure uniqueness */\n    let hash = 0;\n    for (let i = 0; i < serverName.length; i++) {\n      hash = (hash << 5) - hash + serverName.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n    return `server_${Math.abs(hash)}`;\n  }\n\n  return normalized;\n}\n","import { logger } from '@librechat/data-schemas';\nimport type { mongo } from 'mongoose';\n\n/**\n * Ensures that a collection exists in the database.\n * For DocumentDB compatibility, it tries multiple approaches.\n * @param db - The MongoDB database instance\n * @param collectionName - The name of the collection to ensure exists\n */\nexport async function ensureCollectionExists(db: mongo.Db, collectionName: string): Promise<void> {\n  try {\n    const collections = await db.listCollections({ name: collectionName }).toArray();\n    if (collections.length === 0) {\n      await db.createCollection(collectionName);\n      logger.info(`Created collection: ${collectionName}`);\n    } else {\n      logger.debug(`Collection already exists: ${collectionName}`);\n    }\n  } catch (error) {\n    logger.error(`Failed to check/create \"${collectionName}\" collection:`, error);\n    // If listCollections fails, try alternative approach\n    try {\n      // Try to access the collection directly - this will create it in MongoDB if it doesn't exist\n      await db.collection(collectionName).findOne({}, { projection: { _id: 1 } });\n    } catch (createError) {\n      logger.error(`Could not ensure collection ${collectionName} exists:`, createError);\n    }\n  }\n}\n\n/**\n * Ensures that all required collections exist for the permission system.\n * This includes aclentries, groups, accessroles, and any other collections\n * needed for migrations and permission checks.\n * @param db - The MongoDB database instance\n */\nexport async function ensureRequiredCollectionsExist(db: mongo.Db): Promise<void> {\n  const requiredCollections = [\n    'aclentries', // ACL permission entries\n    'groups', // User groups\n    'accessroles', // Access roles for permissions\n    'agents', // Agents collection\n    'promptgroups', // Prompt groups collection\n    'projects', // Projects collection\n  ];\n\n  logger.debug('Ensuring required collections exist for permission system');\n\n  for (const collectionName of requiredCollections) {\n    await ensureCollectionExists(db, collectionName);\n  }\n\n  logger.debug('All required collections have been checked/created');\n}\n","import axios from 'axios';\nimport { logger } from '@librechat/data-schemas';\nimport { TokenExchangeMethodEnum } from 'librechat-data-provider';\nimport type { TokenMethods } from '@librechat/data-schemas';\nimport type { AxiosError } from 'axios';\nimport { encryptV2, decryptV2 } from '~/crypto';\nimport { logAxiosError } from '~/utils';\n\nexport function createHandleOAuthToken({\n  findToken,\n  updateToken,\n  createToken,\n}: {\n  findToken: TokenMethods['findToken'];\n  updateToken: TokenMethods['updateToken'];\n  createToken: TokenMethods['createToken'];\n}) {\n  /**\n   * Handles the OAuth token by creating or updating the token.\n   * @param fields\n   * @param fields.userId - The user's ID.\n   * @param fields.token - The full token to store.\n   * @param fields.identifier - Unique, alternative identifier for the token.\n   * @param fields.expiresIn - The number of seconds until the token expires.\n   * @param fields.metadata - Additional metadata to store with the token.\n   * @param [fields.type=\"oauth\"] - The type of token. Default is 'oauth'.\n   */\n  return async function handleOAuthToken({\n    token,\n    userId,\n    identifier,\n    expiresIn,\n    metadata,\n    type = 'oauth',\n  }: {\n    token: string;\n    userId: string;\n    identifier: string;\n    expiresIn?: number | string | null;\n    metadata?: Record<string, unknown>;\n    type?: string;\n  }) {\n    const encrypedToken = await encryptV2(token);\n    let expiresInNumber = 3600;\n    if (typeof expiresIn === 'number') {\n      expiresInNumber = expiresIn;\n    } else if (expiresIn != null) {\n      expiresInNumber = parseInt(expiresIn, 10) || 3600;\n    }\n    const tokenData = {\n      type,\n      userId,\n      metadata,\n      identifier,\n      token: encrypedToken,\n      expiresIn: expiresInNumber,\n    };\n\n    const existingToken = await findToken({ userId, identifier });\n    if (existingToken) {\n      return await updateToken({ identifier }, tokenData);\n    } else {\n      return await createToken(tokenData);\n    }\n  };\n}\n\n/**\n * Processes the access tokens and stores them in the database.\n * @param tokenData\n * @param tokenData.access_token\n * @param tokenData.expires_in\n * @param [tokenData.refresh_token]\n * @param [tokenData.refresh_token_expires_in]\n * @param metadata\n * @param metadata.userId\n * @param metadata.identifier\n */\nasync function processAccessTokens(\n  tokenData: {\n    access_token: string;\n    expires_in: number;\n    refresh_token?: string;\n    refresh_token_expires_in?: number;\n  },\n  { userId, identifier }: { userId: string; identifier: string },\n  {\n    findToken,\n    updateToken,\n    createToken,\n  }: {\n    findToken: TokenMethods['findToken'];\n    updateToken: TokenMethods['updateToken'];\n    createToken: TokenMethods['createToken'];\n  },\n) {\n  const { access_token, expires_in = 3600, refresh_token, refresh_token_expires_in } = tokenData;\n  if (!access_token) {\n    logger.error('Access token not found: ', tokenData);\n    throw new Error('Access token not found');\n  }\n  const handleOAuthToken = createHandleOAuthToken({\n    findToken,\n    updateToken,\n    createToken,\n  });\n  await handleOAuthToken({\n    identifier,\n    token: access_token,\n    expiresIn: expires_in,\n    userId,\n  });\n\n  if (refresh_token != null) {\n    logger.debug('Processing refresh token');\n    await handleOAuthToken({\n      token: refresh_token,\n      type: 'oauth_refresh',\n      userId,\n      identifier: `${identifier}:refresh`,\n      expiresIn: refresh_token_expires_in ?? null,\n    });\n  }\n  logger.debug('Access tokens processed');\n}\n\n/**\n * Refreshes the access token using the refresh token.\n * @param fields\n * @param fields.userId - The ID of the user.\n * @param fields.client_url - The URL of the OAuth provider.\n * @param fields.identifier - The identifier for the token.\n * @param fields.refresh_token - The refresh token to use.\n * @param fields.token_exchange_method - The token exchange method ('default_post' or 'basic_auth_header').\n * @param fields.encrypted_oauth_client_id - The client ID for the OAuth provider.\n * @param fields.encrypted_oauth_client_secret - The client secret for the OAuth provider.\n */\nexport async function refreshAccessToken(\n  {\n    userId,\n    client_url,\n    identifier,\n    refresh_token,\n    token_exchange_method,\n    encrypted_oauth_client_id,\n    encrypted_oauth_client_secret,\n  }: {\n    userId: string;\n    client_url: string;\n    identifier: string;\n    refresh_token: string;\n    token_exchange_method: TokenExchangeMethodEnum;\n    encrypted_oauth_client_id: string;\n    encrypted_oauth_client_secret: string;\n  },\n  {\n    findToken,\n    updateToken,\n    createToken,\n  }: {\n    findToken: TokenMethods['findToken'];\n    updateToken: TokenMethods['updateToken'];\n    createToken: TokenMethods['createToken'];\n  },\n): Promise<{\n  access_token: string;\n  expires_in: number;\n  refresh_token?: string;\n  refresh_token_expires_in?: number;\n}> {\n  try {\n    const oauth_client_id = await decryptV2(encrypted_oauth_client_id);\n    const oauth_client_secret = await decryptV2(encrypted_oauth_client_secret);\n\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Accept: 'application/json',\n    };\n\n    const params = new URLSearchParams({\n      grant_type: 'refresh_token',\n      refresh_token,\n    });\n\n    if (token_exchange_method === TokenExchangeMethodEnum.BasicAuthHeader) {\n      const basicAuth = Buffer.from(`${oauth_client_id}:${oauth_client_secret}`).toString('base64');\n      headers['Authorization'] = `Basic ${basicAuth}`;\n    } else {\n      params.append('client_id', oauth_client_id);\n      params.append('client_secret', oauth_client_secret);\n    }\n\n    const response = await axios({\n      method: 'POST',\n      url: client_url,\n      headers,\n      data: params.toString(),\n    });\n    await processAccessTokens(\n      response.data,\n      {\n        userId,\n        identifier,\n      },\n      {\n        findToken,\n        updateToken,\n        createToken,\n      },\n    );\n    logger.debug(`Access token refreshed successfully for ${identifier}`);\n    return response.data;\n  } catch (error) {\n    const message = 'Error refreshing OAuth tokens';\n    throw new Error(\n      logAxiosError({\n        message,\n        error: error as AxiosError,\n      }),\n    );\n  }\n}\n\n/**\n * Handles the OAuth callback and exchanges the authorization code for tokens.\n * @param {object} fields\n * @param {string} fields.code - The authorization code returned by the provider.\n * @param {string} fields.userId - The ID of the user.\n * @param {string} fields.identifier - The identifier for the token.\n * @param {string} fields.client_url - The URL of the OAuth provider.\n * @param {string} fields.redirect_uri - The redirect URI for the OAuth provider.\n * @param {string} fields.token_exchange_method - The token exchange method ('default_post' or 'basic_auth_header').\n * @param {string} fields.encrypted_oauth_client_id - The client ID for the OAuth provider.\n * @param {string} fields.encrypted_oauth_client_secret - The client secret for the OAuth provider.\n */\nexport async function getAccessToken(\n  {\n    code,\n    userId,\n    identifier,\n    client_url,\n    redirect_uri,\n    token_exchange_method,\n    encrypted_oauth_client_id,\n    encrypted_oauth_client_secret,\n  }: {\n    code: string;\n    userId: string;\n    identifier: string;\n    client_url: string;\n    redirect_uri: string;\n    token_exchange_method: TokenExchangeMethodEnum;\n    encrypted_oauth_client_id: string;\n    encrypted_oauth_client_secret: string;\n  },\n  {\n    findToken,\n    updateToken,\n    createToken,\n  }: {\n    findToken: TokenMethods['findToken'];\n    updateToken: TokenMethods['updateToken'];\n    createToken: TokenMethods['createToken'];\n  },\n): Promise<{\n  access_token: string;\n  expires_in: number;\n  refresh_token?: string;\n  refresh_token_expires_in?: number;\n}> {\n  const oauth_client_id = await decryptV2(encrypted_oauth_client_id);\n  const oauth_client_secret = await decryptV2(encrypted_oauth_client_secret);\n\n  const headers: Record<string, string> = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    Accept: 'application/json',\n  };\n\n  const params = new URLSearchParams({\n    code,\n    grant_type: 'authorization_code',\n    redirect_uri,\n  });\n\n  if (token_exchange_method === TokenExchangeMethodEnum.BasicAuthHeader) {\n    const basicAuth = Buffer.from(`${oauth_client_id}:${oauth_client_secret}`).toString('base64');\n    headers['Authorization'] = `Basic ${basicAuth}`;\n  } else {\n    params.append('client_id', oauth_client_id);\n    params.append('client_secret', oauth_client_secret);\n  }\n\n  try {\n    const response = await axios({\n      method: 'POST',\n      url: client_url,\n      headers,\n      data: params.toString(),\n    });\n\n    await processAccessTokens(\n      response.data,\n      {\n        userId,\n        identifier,\n      },\n      {\n        findToken,\n        updateToken,\n        createToken,\n      },\n    );\n    logger.debug(`Access tokens successfully created for ${identifier}`);\n    return response.data;\n  } catch (error) {\n    const message = 'Error exchanging OAuth code';\n    throw new Error(\n      logAxiosError({\n        message,\n        error: error as AxiosError,\n      }),\n    );\n  }\n}\n","import { Keyv } from 'keyv';\nimport { logger } from '@librechat/data-schemas';\nimport type { StoredDataNoRaw } from 'keyv';\nimport type { FlowState, FlowMetadata, FlowManagerOptions } from './types';\n\nexport class FlowStateManager<T = unknown> {\n  private keyv: Keyv;\n  private ttl: number;\n  private intervals: Set<NodeJS.Timeout>;\n\n  constructor(store: Keyv, options?: FlowManagerOptions) {\n    if (!options) {\n      options = { ttl: 60000 * 3 };\n    }\n    const { ci = false, ttl } = options;\n\n    if (!ci && !(store instanceof Keyv)) {\n      throw new Error('Invalid store provided to FlowStateManager');\n    }\n\n    this.ttl = ttl;\n    this.keyv = store;\n    this.intervals = new Set();\n    this.setupCleanupHandlers();\n  }\n\n  private setupCleanupHandlers() {\n    const cleanup = () => {\n      logger.info('Cleaning up FlowStateManager intervals...');\n      this.intervals.forEach((interval) => clearInterval(interval));\n      this.intervals.clear();\n      process.exit(0);\n    };\n\n    process.on('SIGTERM', cleanup);\n    process.on('SIGINT', cleanup);\n    process.on('SIGQUIT', cleanup);\n    process.on('SIGHUP', cleanup);\n  }\n\n  private getFlowKey(flowId: string, type: string): string {\n    return `${type}:${flowId}`;\n  }\n\n  /**\n   * Creates a new flow and waits for its completion\n   */\n  async createFlow(\n    flowId: string,\n    type: string,\n    metadata: FlowMetadata = {},\n    signal?: AbortSignal,\n  ): Promise<T> {\n    const flowKey = this.getFlowKey(flowId, type);\n\n    let existingState = (await this.keyv.get(flowKey)) as FlowState<T> | undefined;\n    if (existingState) {\n      logger.debug(`[${flowKey}] Flow already exists`);\n      return this.monitorFlow(flowKey, type, signal);\n    }\n\n    await new Promise((resolve) => setTimeout(resolve, 250));\n\n    existingState = (await this.keyv.get(flowKey)) as FlowState<T> | undefined;\n    if (existingState) {\n      logger.debug(`[${flowKey}] Flow exists on 2nd check`);\n      return this.monitorFlow(flowKey, type, signal);\n    }\n\n    const initialState: FlowState = {\n      type,\n      status: 'PENDING',\n      metadata,\n      createdAt: Date.now(),\n    };\n\n    logger.debug('Creating initial flow state:', flowKey);\n    await this.keyv.set(flowKey, initialState, this.ttl);\n    return this.monitorFlow(flowKey, type, signal);\n  }\n\n  private monitorFlow(flowKey: string, type: string, signal?: AbortSignal): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      const checkInterval = 2000;\n      let elapsedTime = 0;\n\n      const intervalId = setInterval(async () => {\n        try {\n          const flowState = (await this.keyv.get(flowKey)) as FlowState<T> | undefined;\n\n          if (!flowState) {\n            clearInterval(intervalId);\n            this.intervals.delete(intervalId);\n            logger.error(`[${flowKey}] Flow state not found`);\n            reject(new Error(`${type} Flow state not found`));\n            return;\n          }\n\n          if (signal?.aborted) {\n            clearInterval(intervalId);\n            this.intervals.delete(intervalId);\n            logger.warn(`[${flowKey}] Flow aborted`);\n            const message = `${type} flow aborted`;\n            await this.keyv.delete(flowKey);\n            reject(new Error(message));\n            return;\n          }\n\n          if (flowState.status !== 'PENDING') {\n            clearInterval(intervalId);\n            this.intervals.delete(intervalId);\n            logger.debug(`[${flowKey}] Flow completed`);\n\n            if (flowState.status === 'COMPLETED' && flowState.result !== undefined) {\n              resolve(flowState.result);\n            } else if (flowState.status === 'FAILED') {\n              await this.keyv.delete(flowKey);\n              reject(new Error(flowState.error ?? `${type} flow failed`));\n            }\n            return;\n          }\n\n          elapsedTime += checkInterval;\n          if (elapsedTime >= this.ttl) {\n            clearInterval(intervalId);\n            this.intervals.delete(intervalId);\n            logger.error(\n              `[${flowKey}] Flow timed out | Elapsed time: ${elapsedTime} | TTL: ${this.ttl}`,\n            );\n            await this.keyv.delete(flowKey);\n            reject(new Error(`${type} flow timed out`));\n          }\n          logger.debug(`[${flowKey}] Flow state elapsed time: ${elapsedTime}, checking again...`);\n        } catch (error) {\n          logger.error(`[${flowKey}] Error checking flow state:`, error);\n          clearInterval(intervalId);\n          this.intervals.delete(intervalId);\n          reject(error);\n        }\n      }, checkInterval);\n\n      this.intervals.add(intervalId);\n    });\n  }\n\n  /**\n   * Completes a flow successfully\n   */\n  async completeFlow(flowId: string, type: string, result: T): Promise<boolean> {\n    const flowKey = this.getFlowKey(flowId, type);\n    const flowState = (await this.keyv.get(flowKey)) as FlowState<T> | undefined;\n\n    if (!flowState) {\n      return false;\n    }\n\n    const updatedState: FlowState<T> = {\n      ...flowState,\n      status: 'COMPLETED',\n      result,\n      completedAt: Date.now(),\n    };\n\n    await this.keyv.set(flowKey, updatedState, this.ttl);\n    return true;\n  }\n\n  /**\n   * Marks a flow as failed\n   */\n  async failFlow(flowId: string, type: string, error: Error | string): Promise<boolean> {\n    const flowKey = this.getFlowKey(flowId, type);\n    const flowState = (await this.keyv.get(flowKey)) as FlowState | undefined;\n\n    if (!flowState) {\n      return false;\n    }\n\n    const updatedState: FlowState = {\n      ...flowState,\n      status: 'FAILED',\n      error: error instanceof Error ? error.message : error,\n      failedAt: Date.now(),\n    };\n\n    await this.keyv.set(flowKey, updatedState, this.ttl);\n    return true;\n  }\n\n  /**\n   * Gets current flow state\n   */\n  async getFlowState(flowId: string, type: string): Promise<StoredDataNoRaw<FlowState<T>> | null> {\n    const flowKey = this.getFlowKey(flowId, type);\n    return this.keyv.get(flowKey);\n  }\n\n  /**\n   * Creates a new flow and waits for its completion, only executing the handler if no existing flow is found\n   * @param flowId - The ID of the flow\n   * @param type - The type of flow\n   * @param handler - Async function to execute if no existing flow is found\n   * @param signal - Optional AbortSignal to cancel the flow\n   */\n  async createFlowWithHandler(\n    flowId: string,\n    type: string,\n    handler: () => Promise<T>,\n    signal?: AbortSignal,\n  ): Promise<T> {\n    const flowKey = this.getFlowKey(flowId, type);\n    let existingState = (await this.keyv.get(flowKey)) as FlowState<T> | undefined;\n    if (existingState) {\n      logger.debug(`[${flowKey}] Flow already exists`);\n      return this.monitorFlow(flowKey, type, signal);\n    }\n\n    await new Promise((resolve) => setTimeout(resolve, 250));\n\n    existingState = (await this.keyv.get(flowKey)) as FlowState<T> | undefined;\n    if (existingState) {\n      logger.debug(`[${flowKey}] Flow exists on 2nd check`);\n      return this.monitorFlow(flowKey, type, signal);\n    }\n\n    const initialState: FlowState = {\n      type,\n      status: 'PENDING',\n      metadata: {},\n      createdAt: Date.now(),\n    };\n    logger.debug(`[${flowKey}] Creating initial flow state`);\n    await this.keyv.set(flowKey, initialState, this.ttl);\n\n    try {\n      const result = await handler();\n      await this.completeFlow(flowId, type, result);\n      return result;\n    } catch (error) {\n      await this.failFlow(flowId, type, error instanceof Error ? error : new Error(String(error)));\n      throw error;\n    }\n  }\n\n  /**\n   * Deletes a flow state\n   */\n  async deleteFlow(flowId: string, type: string): Promise<boolean> {\n    const flowKey = this.getFlowKey(flowId, type);\n    try {\n      await this.keyv.delete(flowKey);\n      logger.debug(`[${flowKey}] Flow deleted`);\n      return true;\n    } catch (error) {\n      logger.error(`[${flowKey}] Error deleting flow:`, error);\n      return false;\n    }\n  }\n}\n","import { logger } from '@librechat/data-schemas';\nimport {\n  Permissions,\n  EndpointURLs,\n  EModelEndpoint,\n  PermissionTypes,\n  isAgentsEndpoint,\n} from 'librechat-data-provider';\nimport type { NextFunction, Request as ServerRequest, Response as ServerResponse } from 'express';\nimport type { IRole, IUser } from '@librechat/data-schemas';\n\nexport function skipAgentCheck(req?: ServerRequest): boolean {\n  if (!req || !req?.body?.endpoint) {\n    return false;\n  }\n\n  if (req.method !== 'POST') {\n    return false;\n  }\n\n  if (!req.originalUrl?.includes(EndpointURLs[EModelEndpoint.agents])) {\n    return false;\n  }\n  return !isAgentsEndpoint(req.body.endpoint);\n}\n\n/**\n * Core function to check if a user has one or more required permissions\n * @param user - The user object\n * @param permissionType - The type of permission to check\n * @param permissions - The list of specific permissions to check\n * @param bodyProps - An optional object where keys are permissions and values are arrays of properties to check\n * @param checkObject - The object to check properties against\n * @param skipCheck - An optional function that takes the checkObject and returns true to skip permission checking\n * @returns Whether the user has the required permissions\n */\nexport const checkAccess = async ({\n  req,\n  user,\n  permissionType,\n  permissions,\n  getRoleByName,\n  bodyProps = {} as Record<Permissions, string[]>,\n  checkObject = {},\n  skipCheck,\n}: {\n  user: IUser;\n  req?: ServerRequest;\n  permissionType: PermissionTypes;\n  permissions: Permissions[];\n  bodyProps?: Record<Permissions, string[]>;\n  checkObject?: object;\n  /** If skipCheck function is provided and returns true, skip permission checking */\n  skipCheck?: (req?: ServerRequest) => boolean;\n  getRoleByName: (roleName: string, fieldsToSelect?: string | string[]) => Promise<IRole | null>;\n}): Promise<boolean> => {\n  if (skipCheck && skipCheck(req)) {\n    return true;\n  }\n\n  if (!user || !user.role) {\n    return false;\n  }\n\n  const role = await getRoleByName(user.role);\n  const permissionValue = role?.permissions?.[permissionType as keyof typeof role.permissions];\n  if (role && role.permissions && permissionValue) {\n    const hasAnyPermission = permissions.every((permission) => {\n      if (permissionValue[permission as keyof typeof permissionValue]) {\n        return true;\n      }\n\n      if (bodyProps[permission] && checkObject) {\n        return bodyProps[permission].every((prop) =>\n          Object.prototype.hasOwnProperty.call(checkObject, prop),\n        );\n      }\n\n      return false;\n    });\n\n    return hasAnyPermission;\n  }\n\n  return false;\n};\n\n/**\n * Middleware to check if a user has one or more required permissions, optionally based on `req.body` properties.\n * @param permissionType - The type of permission to check.\n * @param permissions - The list of specific permissions to check.\n * @param bodyProps - An optional object where keys are permissions and values are arrays of `req.body` properties to check.\n * @param skipCheck - An optional function that takes req.body and returns true to skip permission checking.\n * @param getRoleByName - A function to get the role by name.\n * @returns Express middleware function.\n */\nexport const generateCheckAccess = ({\n  permissionType,\n  permissions,\n  bodyProps = {} as Record<Permissions, string[]>,\n  skipCheck,\n  getRoleByName,\n}: {\n  permissionType: PermissionTypes;\n  permissions: Permissions[];\n  bodyProps?: Record<Permissions, string[]>;\n  skipCheck?: (req?: ServerRequest) => boolean;\n  getRoleByName: (roleName: string, fieldsToSelect?: string | string[]) => Promise<IRole | null>;\n}): ((req: ServerRequest, res: ServerResponse, next: NextFunction) => Promise<unknown>) => {\n  return async (req, res, next) => {\n    try {\n      const hasAccess = await checkAccess({\n        req,\n        user: req.user as IUser,\n        permissionType,\n        permissions,\n        bodyProps,\n        checkObject: req.body,\n        skipCheck,\n        getRoleByName,\n      });\n\n      if (hasAccess) {\n        return next();\n      }\n\n      logger.warn(\n        `[${permissionType}] Forbidden: \"${req.originalUrl}\" - Insufficient permissions for User ${(req.user as IUser)?.id}: ${permissions.join(', ')}`,\n      );\n      return res.status(403).json({ message: 'Forbidden: Insufficient permissions' });\n    } catch (error) {\n      logger.error(error);\n      return res.status(500).json({\n        message: `Server error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n      });\n    }\n  };\n};\n","import { logger } from '@librechat/data-schemas';\nimport { ErrorTypes } from 'librechat-data-provider';\nimport type { NextFunction, Request, Response } from 'express';\nimport type { MongoServerError, ValidationError, CustomError } from '~/types';\n\nconst handleDuplicateKeyError = (err: MongoServerError, res: Response) => {\n  logger.warn('Duplicate key error: ' + (err.errmsg || err.message));\n  const field = err.keyValue ? `${JSON.stringify(Object.keys(err.keyValue))}` : 'unknown';\n  const code = 409;\n  res\n    .status(code)\n    .send({ messages: `An document with that ${field} already exists.`, fields: field });\n};\n\nconst handleValidationError = (err: ValidationError, res: Response) => {\n  logger.error('Validation error:', err.errors);\n  const errorMessages = Object.values(err.errors).map((el) => el.message);\n  const fields = `${JSON.stringify(Object.values(err.errors).map((el) => el.path))}`;\n  const code = 400;\n  const messages =\n    errorMessages.length > 1\n      ? `${JSON.stringify(errorMessages.join(' '))}`\n      : `${JSON.stringify(errorMessages)}`;\n\n  res.status(code).send({ messages, fields });\n};\n\n/** Type guard for ValidationError */\nfunction isValidationError(err: unknown): err is ValidationError {\n  return err !== null && typeof err === 'object' && 'name' in err && err.name === 'ValidationError';\n}\n\n/** Type guard for MongoServerError (duplicate key) */\nfunction isMongoServerError(err: unknown): err is MongoServerError {\n  return err !== null && typeof err === 'object' && 'code' in err && err.code === 11000;\n}\n\n/** Type guard for CustomError with statusCode and body */\nfunction isCustomError(err: unknown): err is CustomError {\n  return err !== null && typeof err === 'object' && 'statusCode' in err && 'body' in err;\n}\n\nexport const ErrorController = (\n  err: Error | CustomError,\n  req: Request,\n  res: Response,\n  next: NextFunction,\n): Response | void => {\n  try {\n    if (!err) {\n      return next();\n    }\n    const error = err as CustomError;\n\n    if (\n      (error.message === ErrorTypes.AUTH_FAILED || error.code === ErrorTypes.AUTH_FAILED) &&\n      req.originalUrl &&\n      req.originalUrl.includes('/oauth/') &&\n      req.originalUrl.includes('/callback')\n    ) {\n      const domain = process.env.DOMAIN_CLIENT || 'http://localhost:3080';\n      return res.redirect(`${domain}/login?redirect=false&error=${ErrorTypes.AUTH_FAILED}`);\n    }\n\n    if (isValidationError(error)) {\n      return handleValidationError(error, res);\n    }\n\n    if (isMongoServerError(error)) {\n      return handleDuplicateKeyError(error, res);\n    }\n\n    if (isCustomError(error) && error.statusCode && error.body) {\n      return res.status(error.statusCode).send(error.body);\n    }\n\n    logger.error('ErrorController => error', err);\n    return res.status(500).send('An unknown error occurred.');\n  } catch (processingError) {\n    logger.error('ErrorController => processing error', processingError);\n    return res.status(500).send('Processing error in ErrorController.');\n  }\n};\n","import { logger } from '@librechat/data-schemas';\nimport type { NextFunction, Request as ServerRequest, Response as ServerResponse } from 'express';\nimport type { IBalance, IUser, BalanceConfig, ObjectId } from '@librechat/data-schemas';\nimport type { Model } from 'mongoose';\nimport type { AppConfig, BalanceUpdateFields } from '~/types';\nimport { getBalanceConfig } from '~/app/config';\n\nexport interface BalanceMiddlewareOptions {\n  getAppConfig: (options?: { role?: string; refresh?: boolean }) => Promise<AppConfig>;\n  Balance: Model<IBalance>;\n}\n\n/**\n * Build an object containing fields that need updating\n * @param config - The balance configuration\n * @param userRecord - The user's current balance record, if any\n * @param userId - The user's ID\n * @returns Fields that need updating\n */\nfunction buildUpdateFields(\n  config: BalanceConfig,\n  userRecord: IBalance | null,\n  userId: string,\n): BalanceUpdateFields {\n  const updateFields: BalanceUpdateFields = {};\n\n  // Ensure user record has the required fields\n  if (!userRecord) {\n    updateFields.user = userId;\n    updateFields.tokenCredits = config.startBalance;\n  }\n\n  if (userRecord?.tokenCredits == null && config.startBalance != null) {\n    updateFields.tokenCredits = config.startBalance;\n  }\n\n  const isAutoRefillConfigValid =\n    config.autoRefillEnabled &&\n    config.refillIntervalValue != null &&\n    config.refillIntervalUnit != null &&\n    config.refillAmount != null;\n\n  if (!isAutoRefillConfigValid) {\n    return updateFields;\n  }\n\n  if (userRecord?.autoRefillEnabled !== config.autoRefillEnabled) {\n    updateFields.autoRefillEnabled = config.autoRefillEnabled;\n  }\n\n  if (userRecord?.refillIntervalValue !== config.refillIntervalValue) {\n    updateFields.refillIntervalValue = config.refillIntervalValue;\n  }\n\n  if (userRecord?.refillIntervalUnit !== config.refillIntervalUnit) {\n    updateFields.refillIntervalUnit = config.refillIntervalUnit;\n  }\n\n  if (userRecord?.refillAmount !== config.refillAmount) {\n    updateFields.refillAmount = config.refillAmount;\n  }\n\n  // Initialize lastRefill if it's missing when auto-refill is enabled\n  if (config.autoRefillEnabled && !userRecord?.lastRefill) {\n    updateFields.lastRefill = new Date();\n  }\n\n  return updateFields;\n}\n\n/**\n * Factory function to create middleware that synchronizes user balance settings with current balance configuration.\n * @param options - Options containing getBalanceConfig function and Balance model\n * @returns Express middleware function\n */\nexport function createSetBalanceConfig({\n  getAppConfig,\n  Balance,\n}: BalanceMiddlewareOptions): (\n  req: ServerRequest,\n  res: ServerResponse,\n  next: NextFunction,\n) => Promise<void> {\n  return async (req: ServerRequest, res: ServerResponse, next: NextFunction): Promise<void> => {\n    try {\n      const user = req.user as IUser & { _id: string | ObjectId };\n      const appConfig = await getAppConfig({ role: user?.role });\n      const balanceConfig = getBalanceConfig(appConfig);\n      if (!balanceConfig?.enabled) {\n        return next();\n      }\n      if (balanceConfig.startBalance == null) {\n        return next();\n      }\n\n      if (!user || !user._id) {\n        return next();\n      }\n      const userId = typeof user._id === 'string' ? user._id : user._id.toString();\n      const userBalanceRecord = await Balance.findOne({ user: userId }).lean();\n      const updateFields = buildUpdateFields(balanceConfig, userBalanceRecord, userId);\n\n      if (Object.keys(updateFields).length === 0) {\n        return next();\n      }\n\n      await Balance.findOneAndUpdate(\n        { user: userId },\n        { $set: updateFields },\n        { upsert: true, new: true },\n      );\n\n      next();\n    } catch (error) {\n      logger.error('Error setting user balance:', error);\n      next(error);\n    }\n  };\n}\n","import { EModelEndpoint, agentsEndpointSchema } from 'librechat-data-provider';\nimport type { TCustomConfig, TAgentsEndpoint } from 'librechat-data-provider';\n\n/**\n * Sets up the Agents configuration from the config (`librechat.yaml`) file.\n * If no agents config is defined, uses the provided defaults or parses empty object.\n *\n * @param config - The loaded custom configuration.\n * @param [defaultConfig] - Default configuration from getConfigDefaults.\n * @returns The Agents endpoint configuration.\n */\nexport function agentsConfigSetup(\n  config: TCustomConfig,\n  defaultConfig: Partial<TAgentsEndpoint>,\n): Partial<TAgentsEndpoint> {\n  const agentsConfig = config?.endpoints?.[EModelEndpoint.agents];\n\n  if (!agentsConfig) {\n    return defaultConfig || agentsEndpointSchema.parse({});\n  }\n\n  const parsedConfig = agentsEndpointSchema.parse(agentsConfig);\n  return parsedConfig;\n}\n","/** Memories */\nimport { z } from 'zod';\nimport { tool } from '@langchain/core/tools';\nimport { Tools } from 'librechat-data-provider';\nimport { logger } from '@librechat/data-schemas';\nimport { Run, Providers, GraphEvents } from '@librechat/agents';\nimport type {\n  OpenAIClientOptions,\n  StreamEventData,\n  ToolEndCallback,\n  ClientOptions,\n  EventHandler,\n  ToolEndData,\n  LLMConfig,\n} from '@librechat/agents';\nimport type { TAttachment, MemoryArtifact } from 'librechat-data-provider';\nimport type { ObjectId, MemoryMethods } from '@librechat/data-schemas';\nimport type { BaseMessage } from '@langchain/core/messages';\nimport type { Response as ServerResponse } from 'express';\nimport { Tokenizer } from '~/utils';\n\ntype RequiredMemoryMethods = Pick<\n  MemoryMethods,\n  'setMemory' | 'deleteMemory' | 'getFormattedMemories'\n>;\n\ntype ToolEndMetadata = Record<string, unknown> & {\n  run_id?: string;\n  thread_id?: string;\n};\n\nexport interface MemoryConfig {\n  validKeys?: string[];\n  instructions?: string;\n  llmConfig?: Partial<LLMConfig>;\n  tokenLimit?: number;\n}\n\nexport const memoryInstructions =\n  'The system automatically stores important user information and can update or delete memories based on user requests, enabling dynamic memory management.';\n\nconst getDefaultInstructions = (\n  validKeys?: string[],\n  tokenLimit?: number,\n) => `Use the \\`set_memory\\` tool to save important information about the user, but ONLY when the user has requested you to remember something.\n\nThe \\`delete_memory\\` tool should only be used in two scenarios:\n  1. When the user explicitly asks to forget or remove specific information\n  2. When updating existing memories, use the \\`set_memory\\` tool instead of deleting and re-adding the memory.\n\n1. ONLY use memory tools when the user requests memory actions with phrases like:\n   - \"Remember [that] [I]...\"\n   - \"Don't forget [that] [I]...\"\n   - \"Please remember...\"\n   - \"Store this...\"\n   - \"Forget [that] [I]...\"\n   - \"Delete the memory about...\"\n\n2. NEVER store information just because the user mentioned it in conversation.\n\n3. NEVER use memory tools when the user asks you to use other tools or invoke tools in general.\n\n4. Memory tools are ONLY for memory requests, not for general tool usage.\n\n5. If the user doesn't ask you to remember or forget something, DO NOT use any memory tools.\n\n${validKeys && validKeys.length > 0 ? `\\nVALID KEYS: ${validKeys.join(', ')}` : ''}\n\n${tokenLimit ? `\\nTOKEN LIMIT: Maximum ${tokenLimit} tokens per memory value.` : ''}\n\nWhen in doubt, and the user hasn't asked to remember or forget anything, END THE TURN IMMEDIATELY.`;\n\n/**\n * Creates a memory tool instance with user context\n */\nexport const createMemoryTool = ({\n  userId,\n  setMemory,\n  validKeys,\n  tokenLimit,\n  totalTokens = 0,\n}: {\n  userId: string | ObjectId;\n  setMemory: MemoryMethods['setMemory'];\n  validKeys?: string[];\n  tokenLimit?: number;\n  totalTokens?: number;\n}) => {\n  const remainingTokens = tokenLimit ? tokenLimit - totalTokens : Infinity;\n  const isOverflowing = tokenLimit ? remainingTokens <= 0 : false;\n\n  return tool(\n    async ({ key, value }) => {\n      try {\n        if (validKeys && validKeys.length > 0 && !validKeys.includes(key)) {\n          logger.warn(\n            `Memory Agent failed to set memory: Invalid key \"${key}\". Must be one of: ${validKeys.join(\n              ', ',\n            )}`,\n          );\n          return [`Invalid key \"${key}\". Must be one of: ${validKeys.join(', ')}`, undefined];\n        }\n\n        const tokenCount = Tokenizer.getTokenCount(value, 'o200k_base');\n\n        if (isOverflowing) {\n          const errorArtifact: Record<Tools.memory, MemoryArtifact> = {\n            [Tools.memory]: {\n              key: 'system',\n              type: 'error',\n              value: JSON.stringify({\n                errorType: 'already_exceeded',\n                tokenCount: Math.abs(remainingTokens),\n                totalTokens: totalTokens,\n                tokenLimit: tokenLimit!,\n              }),\n              tokenCount: totalTokens,\n            },\n          };\n          return [`Memory storage exceeded. Cannot save new memories.`, errorArtifact];\n        }\n\n        if (tokenLimit) {\n          const newTotalTokens = totalTokens + tokenCount;\n          const newRemainingTokens = tokenLimit - newTotalTokens;\n\n          if (newRemainingTokens < 0) {\n            const errorArtifact: Record<Tools.memory, MemoryArtifact> = {\n              [Tools.memory]: {\n                key: 'system',\n                type: 'error',\n                value: JSON.stringify({\n                  errorType: 'would_exceed',\n                  tokenCount: Math.abs(newRemainingTokens),\n                  totalTokens: newTotalTokens,\n                  tokenLimit,\n                }),\n                tokenCount: totalTokens,\n              },\n            };\n            return [`Memory storage would exceed limit. Cannot save this memory.`, errorArtifact];\n          }\n        }\n\n        const artifact: Record<Tools.memory, MemoryArtifact> = {\n          [Tools.memory]: {\n            key,\n            value,\n            tokenCount,\n            type: 'update',\n          },\n        };\n\n        const result = await setMemory({ userId, key, value, tokenCount });\n        if (result.ok) {\n          logger.debug(`Memory set for key \"${key}\" (${tokenCount} tokens) for user \"${userId}\"`);\n          return [`Memory set for key \"${key}\" (${tokenCount} tokens)`, artifact];\n        }\n        logger.warn(`Failed to set memory for key \"${key}\" for user \"${userId}\"`);\n        return [`Failed to set memory for key \"${key}\"`, undefined];\n      } catch (error) {\n        logger.error('Memory Agent failed to set memory', error);\n        return [`Error setting memory for key \"${key}\"`, undefined];\n      }\n    },\n    {\n      name: 'set_memory',\n      description: 'Saves important information about the user into memory.',\n      responseFormat: 'content_and_artifact',\n      schema: z.object({\n        key: z\n          .string()\n          .describe(\n            validKeys && validKeys.length > 0\n              ? `The key of the memory value. Must be one of: ${validKeys.join(', ')}`\n              : 'The key identifier for this memory',\n          ),\n        value: z\n          .string()\n          .describe(\n            'Value MUST be a complete sentence that fully describes relevant user information.',\n          ),\n      }),\n    },\n  );\n};\n\n/**\n * Creates a delete memory tool instance with user context\n */\nconst createDeleteMemoryTool = ({\n  userId,\n  deleteMemory,\n  validKeys,\n}: {\n  userId: string | ObjectId;\n  deleteMemory: MemoryMethods['deleteMemory'];\n  validKeys?: string[];\n}) => {\n  return tool(\n    async ({ key }) => {\n      try {\n        if (validKeys && validKeys.length > 0 && !validKeys.includes(key)) {\n          logger.warn(\n            `Memory Agent failed to delete memory: Invalid key \"${key}\". Must be one of: ${validKeys.join(\n              ', ',\n            )}`,\n          );\n          return [`Invalid key \"${key}\". Must be one of: ${validKeys.join(', ')}`, undefined];\n        }\n\n        const artifact: Record<Tools.memory, MemoryArtifact> = {\n          [Tools.memory]: {\n            key,\n            type: 'delete',\n          },\n        };\n\n        const result = await deleteMemory({ userId, key });\n        if (result.ok) {\n          logger.debug(`Memory deleted for key \"${key}\" for user \"${userId}\"`);\n          return [`Memory deleted for key \"${key}\"`, artifact];\n        }\n        logger.warn(`Failed to delete memory for key \"${key}\" for user \"${userId}\"`);\n        return [`Failed to delete memory for key \"${key}\"`, undefined];\n      } catch (error) {\n        logger.error('Memory Agent failed to delete memory', error);\n        return [`Error deleting memory for key \"${key}\"`, undefined];\n      }\n    },\n    {\n      name: 'delete_memory',\n      description:\n        'Deletes specific memory data about the user using the provided key. For updating existing memories, use the `set_memory` tool instead',\n      responseFormat: 'content_and_artifact',\n      schema: z.object({\n        key: z\n          .string()\n          .describe(\n            validKeys && validKeys.length > 0\n              ? `The key of the memory to delete. Must be one of: ${validKeys.join(', ')}`\n              : 'The key identifier of the memory to delete',\n          ),\n      }),\n    },\n  );\n};\nexport class BasicToolEndHandler implements EventHandler {\n  private callback?: ToolEndCallback;\n  constructor(callback?: ToolEndCallback) {\n    this.callback = callback;\n  }\n  handle(\n    event: string,\n    data: StreamEventData | undefined,\n    metadata?: Record<string, unknown>,\n  ): void {\n    if (!metadata) {\n      console.warn(`Graph or metadata not found in ${event} event`);\n      return;\n    }\n    const toolEndData = data as ToolEndData | undefined;\n    if (!toolEndData?.output) {\n      console.warn('No output found in tool_end event');\n      return;\n    }\n    this.callback?.(toolEndData, metadata);\n  }\n}\n\nexport async function processMemory({\n  res,\n  userId,\n  setMemory,\n  deleteMemory,\n  messages,\n  memory,\n  messageId,\n  conversationId,\n  validKeys,\n  instructions,\n  llmConfig,\n  tokenLimit,\n  totalTokens = 0,\n}: {\n  res: ServerResponse;\n  setMemory: MemoryMethods['setMemory'];\n  deleteMemory: MemoryMethods['deleteMemory'];\n  userId: string | ObjectId;\n  memory: string;\n  messageId: string;\n  conversationId: string;\n  messages: BaseMessage[];\n  validKeys?: string[];\n  instructions: string;\n  tokenLimit?: number;\n  totalTokens?: number;\n  llmConfig?: Partial<LLMConfig>;\n}): Promise<(TAttachment | null)[] | undefined> {\n  try {\n    const memoryTool = createMemoryTool({\n      userId,\n      tokenLimit,\n      setMemory,\n      validKeys,\n      totalTokens,\n    });\n    const deleteMemoryTool = createDeleteMemoryTool({\n      userId,\n      validKeys,\n      deleteMemory,\n    });\n\n    const currentMemoryTokens = totalTokens;\n\n    let memoryStatus = `# Existing memory:\\n${memory ?? 'No existing memories'}`;\n\n    if (tokenLimit) {\n      const remainingTokens = tokenLimit - currentMemoryTokens;\n      memoryStatus = `# Memory Status:\nCurrent memory usage: ${currentMemoryTokens} tokens\nToken limit: ${tokenLimit} tokens\nRemaining capacity: ${remainingTokens} tokens\n\n# Existing memory:\n${memory ?? 'No existing memories'}`;\n    }\n\n    const defaultLLMConfig: LLMConfig = {\n      provider: Providers.OPENAI,\n      model: 'gpt-4.1-mini',\n      temperature: 0.4,\n      streaming: false,\n      disableStreaming: true,\n    };\n\n    const finalLLMConfig: ClientOptions = {\n      ...defaultLLMConfig,\n      ...llmConfig,\n      /**\n       * Ensure streaming is always disabled for memory processing\n       */\n      streaming: false,\n      disableStreaming: true,\n    };\n\n    // Handle GPT-5+ models\n    if ('model' in finalLLMConfig && /\\bgpt-[5-9]\\b/i.test(finalLLMConfig.model ?? '')) {\n      // Remove temperature for GPT-5+ models\n      delete finalLLMConfig.temperature;\n\n      // Move maxTokens to modelKwargs for GPT-5+ models\n      if ('maxTokens' in finalLLMConfig && finalLLMConfig.maxTokens != null) {\n        const modelKwargs = (finalLLMConfig as OpenAIClientOptions).modelKwargs ?? {};\n        const paramName =\n          (finalLLMConfig as OpenAIClientOptions).useResponsesApi === true\n            ? 'max_output_tokens'\n            : 'max_completion_tokens';\n        modelKwargs[paramName] = finalLLMConfig.maxTokens;\n        delete finalLLMConfig.maxTokens;\n        (finalLLMConfig as OpenAIClientOptions).modelKwargs = modelKwargs;\n      }\n    }\n\n    const artifactPromises: Promise<TAttachment | null>[] = [];\n    const memoryCallback = createMemoryCallback({ res, artifactPromises });\n    const customHandlers = {\n      [GraphEvents.TOOL_END]: new BasicToolEndHandler(memoryCallback),\n    };\n\n    const run = await Run.create({\n      runId: messageId,\n      graphConfig: {\n        type: 'standard',\n        llmConfig: finalLLMConfig,\n        tools: [memoryTool, deleteMemoryTool],\n        instructions,\n        additional_instructions: memoryStatus,\n        toolEnd: true,\n      },\n      customHandlers,\n      returnContent: true,\n    });\n\n    const config = {\n      configurable: {\n        provider: llmConfig?.provider,\n        thread_id: `memory-run-${conversationId}`,\n      },\n      streamMode: 'values',\n      recursionLimit: 3,\n      version: 'v2',\n    } as const;\n\n    const inputs = {\n      messages,\n    };\n    const content = await run.processStream(inputs, config);\n    if (content) {\n      logger.debug('Memory Agent processed memory successfully', content);\n    } else {\n      logger.warn('Memory Agent processed memory but returned no content');\n    }\n    return await Promise.all(artifactPromises);\n  } catch (error) {\n    logger.error('Memory Agent failed to process memory', error);\n  }\n}\n\nexport async function createMemoryProcessor({\n  res,\n  userId,\n  messageId,\n  memoryMethods,\n  conversationId,\n  config = {},\n}: {\n  res: ServerResponse;\n  messageId: string;\n  conversationId: string;\n  userId: string | ObjectId;\n  memoryMethods: RequiredMemoryMethods;\n  config?: MemoryConfig;\n}): Promise<[string, (messages: BaseMessage[]) => Promise<(TAttachment | null)[] | undefined>]> {\n  const { validKeys, instructions, llmConfig, tokenLimit } = config;\n  const finalInstructions = instructions || getDefaultInstructions(validKeys, tokenLimit);\n\n  const { withKeys, withoutKeys, totalTokens } = await memoryMethods.getFormattedMemories({\n    userId,\n  });\n\n  return [\n    withoutKeys,\n    async function (messages: BaseMessage[]): Promise<(TAttachment | null)[] | undefined> {\n      try {\n        return await processMemory({\n          res,\n          userId,\n          messages,\n          validKeys,\n          llmConfig,\n          messageId,\n          tokenLimit,\n          conversationId,\n          memory: withKeys,\n          totalTokens: totalTokens || 0,\n          instructions: finalInstructions,\n          setMemory: memoryMethods.setMemory,\n          deleteMemory: memoryMethods.deleteMemory,\n        });\n      } catch (error) {\n        logger.error('Memory Agent failed to process memory', error);\n      }\n    },\n  ];\n}\n\nasync function handleMemoryArtifact({\n  res,\n  data,\n  metadata,\n}: {\n  res: ServerResponse;\n  data: ToolEndData;\n  metadata?: ToolEndMetadata;\n}) {\n  const output = data?.output;\n  if (!output) {\n    return null;\n  }\n\n  if (!output.artifact) {\n    return null;\n  }\n\n  const memoryArtifact = output.artifact[Tools.memory] as MemoryArtifact | undefined;\n  if (!memoryArtifact) {\n    return null;\n  }\n\n  const attachment: Partial<TAttachment> = {\n    type: Tools.memory,\n    toolCallId: output.tool_call_id,\n    messageId: metadata?.run_id ?? '',\n    conversationId: metadata?.thread_id ?? '',\n    [Tools.memory]: memoryArtifact,\n  };\n  if (!res.headersSent) {\n    return attachment;\n  }\n  res.write(`event: attachment\\ndata: ${JSON.stringify(attachment)}\\n\\n`);\n  return attachment;\n}\n\n/**\n * Creates a memory callback for handling memory artifacts\n * @param params - The parameters object\n * @param params.res - The server response object\n * @param params.artifactPromises - Array to collect artifact promises\n * @returns The memory callback function\n */\nexport function createMemoryCallback({\n  res,\n  artifactPromises,\n}: {\n  res: ServerResponse;\n  artifactPromises: Promise<Partial<TAttachment> | null>[];\n}): ToolEndCallback {\n  return async (data: ToolEndData, metadata?: Record<string, unknown>) => {\n    const output = data?.output;\n    const memoryArtifact = output?.artifact?.[Tools.memory] as MemoryArtifact;\n    if (memoryArtifact == null) {\n      return;\n    }\n    artifactPromises.push(\n      handleMemoryArtifact({ res, data, metadata }).catch((error) => {\n        logger.error('Error processing memory artifact content:', error);\n        return null;\n      }),\n    );\n  };\n}\n","import { logger } from '@librechat/data-schemas';\nimport { AccessRoleIds, ResourceType, PrincipalType, Constants } from 'librechat-data-provider';\nimport { ensureRequiredCollectionsExist } from '../db/utils';\nimport type { AccessRoleMethods, IAgent } from '@librechat/data-schemas';\nimport type { Model, Mongoose } from 'mongoose';\n\nconst { GLOBAL_PROJECT_NAME } = Constants;\n\nexport interface MigrationCheckDbMethods {\n  findRoleByIdentifier: AccessRoleMethods['findRoleByIdentifier'];\n  getProjectByName: (\n    projectName: string,\n    fieldsToSelect?: string[] | null,\n  ) => Promise<{\n    agentIds?: string[];\n    [key: string]: unknown;\n  } | null>;\n}\n\nexport interface MigrationCheckParams {\n  mongoose: Mongoose;\n  methods: MigrationCheckDbMethods;\n  AgentModel: Model<IAgent>;\n}\n\ninterface AgentMigrationData {\n  _id: string;\n  id: string;\n  name: string;\n  author: string;\n  isCollaborative: boolean;\n}\n\nexport interface MigrationCheckResult {\n  totalToMigrate: number;\n  globalEditAccess: number;\n  globalViewAccess: number;\n  privateAgents: number;\n  details?: {\n    globalEditAccess: Array<{ name: string; id: string }>;\n    globalViewAccess: Array<{ name: string; id: string }>;\n    privateAgents: Array<{ name: string; id: string }>;\n  };\n}\n\n/**\n * Check if agents need to be migrated to the new permission system\n * This performs a dry-run check similar to the migration script\n */\nexport async function checkAgentPermissionsMigration({\n  methods,\n  mongoose,\n  AgentModel,\n}: MigrationCheckParams): Promise<MigrationCheckResult> {\n  logger.debug('Checking if agent permissions migration is needed');\n\n  try {\n    const db = mongoose.connection.db;\n    if (db) {\n      await ensureRequiredCollectionsExist(db);\n    }\n\n    // Verify required roles exist\n    const ownerRole = await methods.findRoleByIdentifier(AccessRoleIds.AGENT_OWNER);\n    const viewerRole = await methods.findRoleByIdentifier(AccessRoleIds.AGENT_VIEWER);\n    const editorRole = await methods.findRoleByIdentifier(AccessRoleIds.AGENT_EDITOR);\n\n    if (!ownerRole || !viewerRole || !editorRole) {\n      logger.warn(\n        'Required agent roles not found. Permission system may not be fully initialized.',\n      );\n      return {\n        totalToMigrate: 0,\n        globalEditAccess: 0,\n        globalViewAccess: 0,\n        privateAgents: 0,\n      };\n    }\n\n    // Get global project agent IDs\n    const globalProject = await methods.getProjectByName(GLOBAL_PROJECT_NAME, ['agentIds']);\n    const globalAgentIds = new Set(globalProject?.agentIds || []);\n\n    // Find agents without ACL entries (no batching for efficiency on startup)\n    const agentsToMigrate: AgentMigrationData[] = await AgentModel.aggregate([\n      {\n        $lookup: {\n          from: 'aclentries',\n          localField: '_id',\n          foreignField: 'resourceId',\n          as: 'aclEntries',\n        },\n      },\n      {\n        $addFields: {\n          userAclEntries: {\n            $filter: {\n              input: '$aclEntries',\n              as: 'aclEntry',\n              cond: {\n                $and: [\n                  { $eq: ['$$aclEntry.resourceType', ResourceType.AGENT] },\n                  { $eq: ['$$aclEntry.principalType', PrincipalType.USER] },\n                ],\n              },\n            },\n          },\n        },\n      },\n      {\n        $match: {\n          author: { $exists: true, $ne: null },\n          userAclEntries: { $size: 0 },\n        },\n      },\n      {\n        $project: {\n          _id: 1,\n          id: 1,\n          name: 1,\n          author: 1,\n          isCollaborative: 1,\n        },\n      },\n    ]);\n\n    const categories: {\n      globalEditAccess: AgentMigrationData[];\n      globalViewAccess: AgentMigrationData[];\n      privateAgents: AgentMigrationData[];\n    } = {\n      globalEditAccess: [],\n      globalViewAccess: [],\n      privateAgents: [],\n    };\n\n    agentsToMigrate.forEach((agent) => {\n      const isGlobal = globalAgentIds.has(agent.id);\n      const isCollab = agent.isCollaborative;\n\n      if (isGlobal && isCollab) {\n        categories.globalEditAccess.push(agent);\n      } else if (isGlobal && !isCollab) {\n        categories.globalViewAccess.push(agent);\n      } else {\n        categories.privateAgents.push(agent);\n      }\n    });\n\n    const result: MigrationCheckResult = {\n      totalToMigrate: agentsToMigrate.length,\n      globalEditAccess: categories.globalEditAccess.length,\n      globalViewAccess: categories.globalViewAccess.length,\n      privateAgents: categories.privateAgents.length,\n    };\n\n    // Add details for debugging\n    if (agentsToMigrate.length > 0) {\n      result.details = {\n        globalEditAccess: categories.globalEditAccess.map((a) => ({\n          name: a.name,\n          id: a.id,\n        })),\n        globalViewAccess: categories.globalViewAccess.map((a) => ({\n          name: a.name,\n          id: a.id,\n        })),\n        privateAgents: categories.privateAgents.map((a) => ({\n          name: a.name,\n          id: a.id,\n        })),\n      };\n    }\n\n    logger.debug('Agent migration check completed', {\n      totalToMigrate: result.totalToMigrate,\n      globalEditAccess: result.globalEditAccess,\n      globalViewAccess: result.globalViewAccess,\n      privateAgents: result.privateAgents,\n    });\n\n    return result;\n  } catch (error) {\n    logger.error('Failed to check agent permissions migration', error);\n    // Return zero counts on error to avoid blocking startup\n    return {\n      totalToMigrate: 0,\n      globalEditAccess: 0,\n      globalViewAccess: 0,\n      privateAgents: 0,\n    };\n  }\n}\n\n/**\n * Log migration warning to console if agents need migration\n */\nexport function logAgentMigrationWarning(result: MigrationCheckResult): void {\n  if (result.totalToMigrate === 0) {\n    return;\n  }\n\n  // Create a visible warning box\n  const border = '='.repeat(80);\n  const warning = [\n    '',\n    border,\n    '                    IMPORTANT: AGENT PERMISSIONS MIGRATION REQUIRED',\n    border,\n    '',\n    `  Total agents to migrate: ${result.totalToMigrate}`,\n    `  - Global Edit Access: ${result.globalEditAccess} agents`,\n    `  - Global View Access: ${result.globalViewAccess} agents`,\n    `  - Private Agents: ${result.privateAgents} agents`,\n    '',\n    '  The new agent sharing system requires migrating existing agents.',\n    '  Please run the following command to migrate your agents:',\n    '',\n    '    npm run migrate:agent-permissions',\n    '',\n    '  For a dry run (preview) of what will be migrated:',\n    '',\n    '    npm run migrate:agent-permissions:dry-run',\n    '',\n    '  This migration will:',\n    '  1. Grant owner permissions to agent authors',\n    '  2. Set appropriate public permissions based on global project status',\n    '  3. Preserve existing collaborative settings',\n    '',\n    border,\n    '',\n  ];\n\n  // Use console methods directly for visibility\n  console.log('\\n' + warning.join('\\n') + '\\n');\n\n  // Also log with logger for consistency\n  logger.warn('Agent permissions migration required', {\n    totalToMigrate: result.totalToMigrate,\n    globalEditAccess: result.globalEditAccess,\n    globalViewAccess: result.globalViewAccess,\n    privateAgents: result.privateAgents,\n  });\n}\n","import { logger } from '@librechat/data-schemas';\nimport { EModelEndpoint, EToolResources, AgentCapabilities } from 'librechat-data-provider';\nimport type { AgentToolResources, TFile, AgentBaseResource } from 'librechat-data-provider';\nimport type { FilterQuery, QueryOptions, ProjectionType } from 'mongoose';\nimport type { IMongoFile, IUser } from '@librechat/data-schemas';\nimport type { Request as ServerRequest } from 'express';\nimport type { AppConfig } from '~/types/';\n\n/**\n * Function type for retrieving files from the database\n * @param filter - MongoDB filter query for files\n * @param _sortOptions - Sorting options (currently unused)\n * @param selectFields - Field selection options\n * @param options - Additional options including userId and agentId for access control\n * @returns Promise resolving to array of files\n */\nexport type TGetFiles = (\n  filter: FilterQuery<IMongoFile>,\n  _sortOptions: ProjectionType<IMongoFile> | null | undefined,\n  selectFields: QueryOptions<IMongoFile> | null | undefined,\n  options?: { userId?: string; agentId?: string },\n) => Promise<Array<TFile>>;\n\n/**\n * Helper function to add a file to a specific tool resource category\n * Prevents duplicate files within the same resource category\n * @param params - Parameters object\n * @param params.file - The file to add to the resource\n * @param params.resourceType - The type of tool resource (e.g., execute_code, file_search, image_edit)\n * @param params.tool_resources - The agent's tool resources object to update\n * @param params.processedResourceFiles - Set tracking processed files per resource type\n */\nconst addFileToResource = ({\n  file,\n  resourceType,\n  tool_resources,\n  processedResourceFiles,\n}: {\n  file: TFile;\n  resourceType: EToolResources;\n  tool_resources: AgentToolResources;\n  processedResourceFiles: Set<string>;\n}): void => {\n  if (!file.file_id) {\n    return;\n  }\n\n  const resourceKey = `${resourceType}:${file.file_id}`;\n  if (processedResourceFiles.has(resourceKey)) {\n    return;\n  }\n\n  const resource = tool_resources[resourceType as keyof AgentToolResources] ?? {};\n  if (!resource.files) {\n    (tool_resources[resourceType as keyof AgentToolResources] as AgentBaseResource) = {\n      ...resource,\n      files: [],\n    };\n  }\n\n  // Check if already exists in the files array\n  const resourceFiles = tool_resources[resourceType as keyof AgentToolResources]?.files;\n  const alreadyExists = resourceFiles?.some((f: TFile) => f.file_id === file.file_id);\n\n  if (!alreadyExists) {\n    resourceFiles?.push(file);\n    processedResourceFiles.add(resourceKey);\n  }\n};\n\n/**\n * Categorizes a file into the appropriate tool resource based on its properties\n * Files are categorized as:\n * - execute_code: Files with fileIdentifier metadata\n * - file_search: Files marked as embedded\n * - image_edit: Image files in the request file set with dimensions\n * @param params - Parameters object\n * @param params.file - The file to categorize\n * @param params.tool_resources - The agent's tool resources to update\n * @param params.requestFileSet - Set of file IDs from the current request\n * @param params.processedResourceFiles - Set tracking processed files per resource type\n */\nconst categorizeFileForToolResources = ({\n  file,\n  tool_resources,\n  requestFileSet,\n  processedResourceFiles,\n}: {\n  file: TFile;\n  tool_resources: AgentToolResources;\n  requestFileSet: Set<string>;\n  processedResourceFiles: Set<string>;\n}): void => {\n  if (file.metadata?.fileIdentifier) {\n    addFileToResource({\n      file,\n      resourceType: EToolResources.execute_code,\n      tool_resources,\n      processedResourceFiles,\n    });\n    return;\n  }\n\n  if (file.embedded === true) {\n    addFileToResource({\n      file,\n      resourceType: EToolResources.file_search,\n      tool_resources,\n      processedResourceFiles,\n    });\n    return;\n  }\n\n  if (\n    requestFileSet.has(file.file_id) &&\n    file.type.startsWith('image') &&\n    file.height &&\n    file.width\n  ) {\n    addFileToResource({\n      file,\n      resourceType: EToolResources.image_edit,\n      tool_resources,\n      processedResourceFiles,\n    });\n  }\n};\n\n/**\n * Primes resources for agent execution by processing attachments and tool resources\n * This function:\n * 1. Fetches OCR files if OCR is enabled\n * 2. Processes attachment files\n * 3. Categorizes files into appropriate tool resources\n * 4. Prevents duplicate files across all sources\n *\n * @param params - Parameters object\n * @param params.req - Express request object\n * @param params.appConfig - Application configuration object\n * @param params.getFiles - Function to retrieve files from database\n * @param params.requestFileSet - Set of file IDs from the current request\n * @param params.attachments - Promise resolving to array of attachment files\n * @param params.tool_resources - Existing tool resources for the agent\n * @returns Promise resolving to processed attachments and updated tool resources\n */\nexport const primeResources = async ({\n  req,\n  appConfig,\n  getFiles,\n  requestFileSet,\n  attachments: _attachments,\n  tool_resources: _tool_resources,\n  agentId,\n}: {\n  req: ServerRequest & { user?: IUser };\n  appConfig: AppConfig;\n  requestFileSet: Set<string>;\n  attachments: Promise<Array<TFile | null>> | undefined;\n  tool_resources: AgentToolResources | undefined;\n  getFiles: TGetFiles;\n  agentId?: string;\n}): Promise<{\n  attachments: Array<TFile | undefined> | undefined;\n  tool_resources: AgentToolResources | undefined;\n}> => {\n  try {\n    /**\n     * Array to collect all unique files that will be returned as attachments\n     * Files are added from OCR results and attachment promises, with duplicates prevented\n     */\n    const attachments: Array<TFile> = [];\n    /**\n     * Set of file IDs already added to the attachments array\n     * Used to prevent duplicate files from being added multiple times\n     * Pre-populated with files from non-OCR tool_resources to prevent re-adding them\n     */\n    const attachmentFileIds = new Set<string>();\n    /**\n     * Set tracking which files have been added to specific tool resource categories\n     * Format: \"resourceType:fileId\" (e.g., \"execute_code:file123\")\n     * Prevents the same file from being added multiple times to the same resource\n     */\n    const processedResourceFiles = new Set<string>();\n    /**\n     * The agent's tool resources object that will be updated with categorized files\n     * Initialized from input parameter or empty object if not provided\n     */\n    const tool_resources = _tool_resources ?? {};\n\n    // Track existing files in tool_resources to prevent duplicates within resources\n    for (const [resourceType, resource] of Object.entries(tool_resources)) {\n      if (resource?.files && Array.isArray(resource.files)) {\n        for (const file of resource.files) {\n          if (file?.file_id) {\n            processedResourceFiles.add(`${resourceType}:${file.file_id}`);\n            // Files from non-OCR resources should not be added to attachments from _attachments\n            if (resourceType !== EToolResources.ocr) {\n              attachmentFileIds.add(file.file_id);\n            }\n          }\n        }\n      }\n    }\n\n    const isOCREnabled = (\n      appConfig?.endpoints?.[EModelEndpoint.agents]?.capabilities ?? []\n    ).includes(AgentCapabilities.ocr);\n\n    if (tool_resources[EToolResources.ocr]?.file_ids && isOCREnabled) {\n      const context = await getFiles(\n        {\n          file_id: { $in: tool_resources.ocr.file_ids },\n        },\n        {},\n        {},\n        { userId: req.user?.id, agentId },\n      );\n\n      for (const file of context) {\n        if (!file?.file_id) {\n          continue;\n        }\n\n        // Clear from attachmentFileIds if it was pre-added\n        attachmentFileIds.delete(file.file_id);\n\n        // Add to attachments\n        attachments.push(file);\n        attachmentFileIds.add(file.file_id);\n\n        // Categorize for tool resources\n        categorizeFileForToolResources({\n          file,\n          tool_resources,\n          requestFileSet,\n          processedResourceFiles,\n        });\n      }\n    }\n\n    if (!_attachments) {\n      return { attachments: attachments.length > 0 ? attachments : undefined, tool_resources };\n    }\n\n    const files = await _attachments;\n\n    for (const file of files) {\n      if (!file) {\n        continue;\n      }\n\n      categorizeFileForToolResources({\n        file,\n        tool_resources,\n        requestFileSet,\n        processedResourceFiles,\n      });\n\n      if (file.file_id && attachmentFileIds.has(file.file_id)) {\n        continue;\n      }\n\n      attachments.push(file);\n      if (file.file_id) {\n        attachmentFileIds.add(file.file_id);\n      }\n    }\n\n    return { attachments: attachments.length > 0 ? attachments : [], tool_resources };\n  } catch (error) {\n    logger.error('Error priming resources', error);\n\n    // Safely try to get attachments without rethrowing\n    let safeAttachments: Array<TFile | undefined> = [];\n    if (_attachments) {\n      try {\n        const attachmentFiles = await _attachments;\n        safeAttachments = (attachmentFiles?.filter((file) => !!file) ?? []) as Array<TFile>;\n      } catch (attachmentError) {\n        // If attachments promise is also rejected, just use empty array\n        logger.error('Error resolving attachments in catch block', attachmentError);\n        safeAttachments = [];\n      }\n    }\n\n    return {\n      attachments: safeAttachments,\n      tool_resources: _tool_resources,\n    };\n  }\n};\n","import { Run, Providers } from '@librechat/agents';\nimport { providerEndpointMap, KnownEndpoints } from 'librechat-data-provider';\nimport type {\n  OpenAIClientOptions,\n  StandardGraphConfig,\n  EventHandler,\n  GenericTool,\n  GraphEvents,\n  IState,\n} from '@librechat/agents';\nimport type { Agent } from 'librechat-data-provider';\nimport type * as t from '~/types';\n\nconst customProviders = new Set([\n  Providers.XAI,\n  Providers.OLLAMA,\n  Providers.DEEPSEEK,\n  Providers.OPENROUTER,\n]);\n\nexport function getReasoningKey(\n  provider: Providers,\n  llmConfig: t.RunLLMConfig,\n  agentEndpoint?: string | null,\n): 'reasoning_content' | 'reasoning' {\n  let reasoningKey: 'reasoning_content' | 'reasoning' = 'reasoning_content';\n  if (provider === Providers.GOOGLE) {\n    reasoningKey = 'reasoning';\n  } else if (\n    llmConfig.configuration?.baseURL?.includes(KnownEndpoints.openrouter) ||\n    (agentEndpoint && agentEndpoint.toLowerCase().includes(KnownEndpoints.openrouter))\n  ) {\n    reasoningKey = 'reasoning';\n  } else if (\n    (llmConfig as OpenAIClientOptions).useResponsesApi === true &&\n    (provider === Providers.OPENAI || provider === Providers.AZURE)\n  ) {\n    reasoningKey = 'reasoning';\n  }\n  return reasoningKey;\n}\n\n/**\n * Creates a new Run instance with custom handlers and configuration.\n *\n * @param options - The options for creating the Run instance.\n * @param options.agent - The agent for this run.\n * @param options.signal - The signal for this run.\n * @param options.req - The server request.\n * @param options.runId - Optional run ID; otherwise, a new run ID will be generated.\n * @param options.customHandlers - Custom event handlers.\n * @param options.streaming - Whether to use streaming.\n * @param options.streamUsage - Whether to stream usage information.\n * @returns {Promise<Run<IState>>} A promise that resolves to a new Run instance.\n */\nexport async function createRun({\n  runId,\n  agent,\n  signal,\n  customHandlers,\n  streaming = true,\n  streamUsage = true,\n}: {\n  agent: Omit<Agent, 'tools'> & { tools?: GenericTool[] };\n  signal: AbortSignal;\n  runId?: string;\n  streaming?: boolean;\n  streamUsage?: boolean;\n  customHandlers?: Record<GraphEvents, EventHandler>;\n}): Promise<Run<IState>> {\n  const provider =\n    (providerEndpointMap[\n      agent.provider as keyof typeof providerEndpointMap\n    ] as unknown as Providers) ?? agent.provider;\n\n  const llmConfig: t.RunLLMConfig = Object.assign(\n    {\n      provider,\n      streaming,\n      streamUsage,\n    },\n    agent.model_parameters,\n  );\n\n  /** Resolves issues with new OpenAI usage field */\n  if (\n    customProviders.has(agent.provider) ||\n    (agent.provider === Providers.OPENAI && agent.endpoint !== agent.provider)\n  ) {\n    llmConfig.streamUsage = false;\n    llmConfig.usage = true;\n  }\n\n  const reasoningKey = getReasoningKey(provider, llmConfig, agent.endpoint);\n  const graphConfig: StandardGraphConfig = {\n    signal,\n    llmConfig,\n    reasoningKey,\n    tools: agent.tools,\n    instructions: agent.instructions,\n    additional_instructions: agent.additional_instructions,\n    // toolEnd: agent.end_after_tools,\n  };\n\n  // TEMPORARY FOR TESTING\n  if (agent.provider === Providers.ANTHROPIC || agent.provider === Providers.BEDROCK) {\n    graphConfig.streamBuffer = 2000;\n  }\n\n  return Run.create({\n    runId,\n    graphConfig,\n    customHandlers,\n  });\n}\n","import { z } from 'zod';\nimport { ViolationTypes, ErrorTypes } from 'librechat-data-provider';\nimport type { Agent, TModelsConfig } from 'librechat-data-provider';\nimport type { Request, Response } from 'express';\n\n/** Avatar schema shared between create and update */\nexport const agentAvatarSchema = z.object({\n  filepath: z.string(),\n  source: z.string(),\n});\n\n/** Base resource schema for tool resources */\nexport const agentBaseResourceSchema = z.object({\n  file_ids: z.array(z.string()).optional(),\n  files: z.array(z.any()).optional(), // Files are populated at runtime, not from user input\n});\n\n/** File resource schema extends base with vector_store_ids */\nexport const agentFileResourceSchema = agentBaseResourceSchema.extend({\n  vector_store_ids: z.array(z.string()).optional(),\n});\n\n/** Tool resources schema matching AgentToolResources interface */\nexport const agentToolResourcesSchema = z\n  .object({\n    image_edit: agentBaseResourceSchema.optional(),\n    execute_code: agentBaseResourceSchema.optional(),\n    file_search: agentFileResourceSchema.optional(),\n    ocr: agentBaseResourceSchema.optional(),\n  })\n  .optional();\n\n/** Support contact schema for agent */\nexport const agentSupportContactSchema = z\n  .object({\n    name: z.string().optional(),\n    email: z.union([z.literal(''), z.string().email()]).optional(),\n  })\n  .optional();\n\n/** Base agent schema with all common fields */\nexport const agentBaseSchema = z.object({\n  name: z.string().nullable().optional(),\n  description: z.string().nullable().optional(),\n  instructions: z.string().nullable().optional(),\n  avatar: agentAvatarSchema.nullable().optional(),\n  model_parameters: z.record(z.unknown()).optional(),\n  tools: z.array(z.string()).optional(),\n  agent_ids: z.array(z.string()).optional(),\n  end_after_tools: z.boolean().optional(),\n  hide_sequential_outputs: z.boolean().optional(),\n  artifacts: z.string().optional(),\n  recursion_limit: z.number().optional(),\n  conversation_starters: z.array(z.string()).optional(),\n  tool_resources: agentToolResourcesSchema,\n  support_contact: agentSupportContactSchema,\n  category: z.string().optional(),\n});\n\n/** Create schema extends base with required fields for creation */\nexport const agentCreateSchema = agentBaseSchema.extend({\n  provider: z.string(),\n  model: z.string().nullable(),\n  tools: z.array(z.string()).optional().default([]),\n});\n\n/** Update schema extends base with all fields optional and additional update-only fields */\nexport const agentUpdateSchema = agentBaseSchema.extend({\n  provider: z.string().optional(),\n  model: z.string().nullable().optional(),\n  projectIds: z.array(z.string()).optional(),\n  removeProjectIds: z.array(z.string()).optional(),\n  isCollaborative: z.boolean().optional(),\n});\n\ninterface ValidateAgentModelParams {\n  req: Request;\n  res: Response;\n  agent: Agent;\n  modelsConfig: TModelsConfig;\n  logViolation: (\n    req: Request,\n    res: Response,\n    type: string,\n    errorMessage: Record<string, unknown>,\n    score?: number | string,\n  ) => Promise<void>;\n}\n\ninterface ValidateAgentModelResult {\n  isValid: boolean;\n  error?: {\n    message: string;\n  };\n}\n\n/**\n * Validates an agent's model against the available models configuration.\n * This is a non-middleware version of validateModel that can be used\n * in service initialization flows.\n *\n * @param params - Validation parameters\n * @returns Object indicating whether the model is valid and any error details\n */\nexport async function validateAgentModel(\n  params: ValidateAgentModelParams,\n): Promise<ValidateAgentModelResult> {\n  const { req, res, agent, modelsConfig, logViolation } = params;\n  const { model, provider: endpoint } = agent;\n\n  if (!model) {\n    return {\n      isValid: false,\n      error: {\n        message: `{ \"type\": \"${ErrorTypes.MISSING_MODEL}\", \"info\": \"${endpoint}\" }`,\n      },\n    };\n  }\n\n  if (!modelsConfig) {\n    return {\n      isValid: false,\n      error: {\n        message: `{ \"type\": \"${ErrorTypes.MODELS_NOT_LOADED}\" }`,\n      },\n    };\n  }\n\n  const availableModels = modelsConfig[endpoint];\n  if (!availableModels) {\n    return {\n      isValid: false,\n      error: {\n        message: `{ \"type\": \"${ErrorTypes.ENDPOINT_MODELS_NOT_LOADED}\", \"info\": \"${endpoint}\" }`,\n      },\n    };\n  }\n\n  const validModel = !!availableModels.find((availableModel) => availableModel === model);\n\n  if (validModel) {\n    return { isValid: true };\n  }\n\n  const { ILLEGAL_MODEL_REQ_SCORE: score = 1 } = process.env ?? {};\n  const type = ViolationTypes.ILLEGAL_MODEL_REQUEST;\n  const errorMessage = {\n    type,\n    model,\n    endpoint,\n  };\n\n  await logViolation(req, res, type, errorMessage, score);\n\n  return {\n    isValid: false,\n    error: {\n      message: `{ \"type\": \"${ViolationTypes.ILLEGAL_MODEL_REQUEST}\", \"info\": \"${endpoint}|${model}\" }`,\n    },\n  };\n}\n","import { SystemCategories } from 'librechat-data-provider';\nimport type { IPromptGroupDocument as IPromptGroup } from '@librechat/data-schemas';\nimport type { Types } from 'mongoose';\nimport type { PromptGroupsListResponse } from '~/types';\n\n/**\n * Formats prompt groups for the paginated /groups endpoint response\n */\nexport function formatPromptGroupsResponse({\n  promptGroups = [],\n  pageNumber,\n  pageSize,\n  actualLimit,\n  hasMore = false,\n  after = null,\n}: {\n  promptGroups: IPromptGroup[];\n  pageNumber?: string;\n  pageSize?: string;\n  actualLimit?: string | number;\n  hasMore?: boolean;\n  after?: string | null;\n}): PromptGroupsListResponse {\n  const currentPage = parseInt(pageNumber || '1');\n\n  // Calculate total pages based on whether there are more results\n  // If hasMore is true, we know there's at least one more page\n  // We use a high number (9999) to indicate \"many pages\" since we don't know the exact count\n  const totalPages = hasMore ? '9999' : currentPage.toString();\n\n  return {\n    promptGroups,\n    pageNumber: pageNumber || '1',\n    pageSize: pageSize || String(actualLimit) || '10',\n    pages: totalPages,\n    has_more: hasMore,\n    after,\n  };\n}\n\n/**\n * Creates an empty response for the paginated /groups endpoint\n */\nexport function createEmptyPromptGroupsResponse({\n  pageNumber,\n  pageSize,\n  actualLimit,\n}: {\n  pageNumber?: string;\n  pageSize?: string;\n  actualLimit?: string | number;\n}): PromptGroupsListResponse {\n  return {\n    promptGroups: [],\n    pageNumber: pageNumber || '1',\n    pageSize: pageSize || String(actualLimit) || '10',\n    pages: '0',\n    has_more: false,\n    after: null,\n  };\n}\n\n/**\n * Marks prompt groups as public based on the publicly accessible IDs\n */\nexport function markPublicPromptGroups(\n  promptGroups: IPromptGroup[],\n  publiclyAccessibleIds: Types.ObjectId[],\n): IPromptGroup[] {\n  if (!promptGroups.length) {\n    return [];\n  }\n\n  return promptGroups.map((group) => {\n    const isPublic = publiclyAccessibleIds.some((id) => id.equals(group._id?.toString()));\n    return isPublic ? ({ ...group, isPublic: true } as IPromptGroup) : group;\n  });\n}\n\n/**\n * Builds filter object for prompt group queries\n */\nexport function buildPromptGroupFilter({\n  name,\n  category,\n  ...otherFilters\n}: {\n  name?: string;\n  category?: string;\n  [key: string]: string | number | boolean | RegExp | undefined;\n}): {\n  filter: Record<string, string | number | boolean | RegExp | undefined>;\n  searchShared: boolean;\n  searchSharedOnly: boolean;\n} {\n  const filter: Record<string, string | number | boolean | RegExp | undefined> = {\n    ...otherFilters,\n  };\n  let searchShared = true;\n  let searchSharedOnly = false;\n\n  // Handle name filter - convert to regex for case-insensitive search\n  if (name) {\n    const escapeRegExp = (str: string) => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    filter.name = new RegExp(escapeRegExp(name), 'i');\n  }\n\n  // Handle category filters with special system categories\n  if (category === SystemCategories.MY_PROMPTS) {\n    searchShared = false;\n  } else if (category === SystemCategories.NO_CATEGORY) {\n    filter.category = '';\n  } else if (category === SystemCategories.SHARED_PROMPTS) {\n    searchSharedOnly = true;\n  } else if (category) {\n    filter.category = category;\n  }\n\n  return { filter, searchShared, searchSharedOnly };\n}\n\n/**\n * Filters accessible IDs based on shared/public prompts logic\n */\nexport async function filterAccessibleIdsBySharedLogic({\n  accessibleIds,\n  searchShared,\n  searchSharedOnly,\n  publicPromptGroupIds,\n}: {\n  accessibleIds: Types.ObjectId[];\n  searchShared: boolean;\n  searchSharedOnly: boolean;\n  publicPromptGroupIds?: Types.ObjectId[];\n}): Promise<Types.ObjectId[]> {\n  const publicIdStrings = new Set((publicPromptGroupIds || []).map((id) => id.toString()));\n\n  if (!searchShared) {\n    // For MY_PROMPTS - exclude public prompts to show only user's own prompts\n    return accessibleIds.filter((id) => !publicIdStrings.has(id.toString()));\n  }\n\n  if (searchSharedOnly) {\n    // Handle SHARED_PROMPTS filter - only return public prompts that user has access to\n    if (!publicPromptGroupIds?.length) {\n      return [];\n    }\n    const accessibleIdStrings = new Set(accessibleIds.map((id) => id.toString()));\n    return publicPromptGroupIds.filter((id) => accessibleIdStrings.has(id.toString()));\n  }\n\n  return [...accessibleIds, ...(publicPromptGroupIds || [])];\n}\n","import { logger } from '@librechat/data-schemas';\nimport { AccessRoleIds, ResourceType, PrincipalType, Constants } from 'librechat-data-provider';\nimport { ensureRequiredCollectionsExist } from '../db/utils';\nimport type { AccessRoleMethods, IPromptGroupDocument } from '@librechat/data-schemas';\nimport type { Model, Mongoose } from 'mongoose';\n\nconst { GLOBAL_PROJECT_NAME } = Constants;\n\nexport interface PromptMigrationCheckDbMethods {\n  findRoleByIdentifier: AccessRoleMethods['findRoleByIdentifier'];\n  getProjectByName: (\n    projectName: string,\n    fieldsToSelect?: string[] | null,\n  ) => Promise<{\n    promptGroupIds?: string[];\n    [key: string]: unknown;\n  } | null>;\n}\n\nexport interface PromptMigrationCheckParams {\n  mongoose: Mongoose;\n  methods: PromptMigrationCheckDbMethods;\n  PromptGroupModel: Model<IPromptGroupDocument>;\n}\n\ninterface PromptGroupMigrationData {\n  _id: string;\n  name: string;\n  author: string;\n  authorName?: string;\n  category?: string;\n}\n\nexport interface PromptMigrationCheckResult {\n  totalToMigrate: number;\n  globalViewAccess: number;\n  privateGroups: number;\n  details?: {\n    globalViewAccess: Array<{ name: string; _id: string; category: string }>;\n    privateGroups: Array<{ name: string; _id: string; category: string }>;\n  };\n}\n\n/**\n * Check if prompt groups need to be migrated to the new permission system\n * This performs a dry-run check similar to the migration script\n */\nexport async function checkPromptPermissionsMigration({\n  methods,\n  mongoose,\n  PromptGroupModel,\n}: PromptMigrationCheckParams): Promise<PromptMigrationCheckResult> {\n  logger.debug('Checking if prompt permissions migration is needed');\n\n  try {\n    /** Native MongoDB database instance */\n    const db = mongoose.connection.db;\n    if (db) {\n      await ensureRequiredCollectionsExist(db);\n    }\n\n    // Verify required roles exist\n    const ownerRole = await methods.findRoleByIdentifier(AccessRoleIds.PROMPTGROUP_OWNER);\n    const viewerRole = await methods.findRoleByIdentifier(AccessRoleIds.PROMPTGROUP_VIEWER);\n    const editorRole = await methods.findRoleByIdentifier(AccessRoleIds.PROMPTGROUP_EDITOR);\n\n    if (!ownerRole || !viewerRole || !editorRole) {\n      logger.warn(\n        'Required promptGroup roles not found. Permission system may not be fully initialized.',\n      );\n      return {\n        totalToMigrate: 0,\n        globalViewAccess: 0,\n        privateGroups: 0,\n      };\n    }\n\n    /** Global project prompt group IDs */\n    const globalProject = await methods.getProjectByName(GLOBAL_PROJECT_NAME, ['promptGroupIds']);\n    const globalPromptGroupIds = new Set(\n      (globalProject?.promptGroupIds || []).map((id) => id.toString()),\n    );\n\n    // Find promptGroups without ACL entries (no batching for efficiency on startup)\n    const promptGroupsToMigrate: PromptGroupMigrationData[] = await PromptGroupModel.aggregate([\n      {\n        $lookup: {\n          from: 'aclentries',\n          localField: '_id',\n          foreignField: 'resourceId',\n          as: 'aclEntries',\n        },\n      },\n      {\n        $addFields: {\n          promptGroupAclEntries: {\n            $filter: {\n              input: '$aclEntries',\n              as: 'aclEntry',\n              cond: {\n                $and: [\n                  { $eq: ['$$aclEntry.resourceType', ResourceType.PROMPTGROUP] },\n                  { $eq: ['$$aclEntry.principalType', PrincipalType.USER] },\n                ],\n              },\n            },\n          },\n        },\n      },\n      {\n        $match: {\n          author: { $exists: true, $ne: null },\n          promptGroupAclEntries: { $size: 0 },\n        },\n      },\n      {\n        $project: {\n          _id: 1,\n          name: 1,\n          author: 1,\n          authorName: 1,\n          category: 1,\n        },\n      },\n    ]);\n\n    const categories: {\n      globalViewAccess: PromptGroupMigrationData[];\n      privateGroups: PromptGroupMigrationData[];\n    } = {\n      globalViewAccess: [],\n      privateGroups: [],\n    };\n\n    promptGroupsToMigrate.forEach((group) => {\n      const isGlobalGroup = globalPromptGroupIds.has(group._id.toString());\n\n      if (isGlobalGroup) {\n        categories.globalViewAccess.push(group);\n      } else {\n        categories.privateGroups.push(group);\n      }\n    });\n\n    const result: PromptMigrationCheckResult = {\n      totalToMigrate: promptGroupsToMigrate.length,\n      globalViewAccess: categories.globalViewAccess.length,\n      privateGroups: categories.privateGroups.length,\n    };\n\n    // Add details for debugging\n    if (promptGroupsToMigrate.length > 0) {\n      result.details = {\n        globalViewAccess: categories.globalViewAccess.map((g) => ({\n          name: g.name,\n          _id: g._id.toString(),\n          category: g.category || 'uncategorized',\n        })),\n        privateGroups: categories.privateGroups.map((g) => ({\n          name: g.name,\n          _id: g._id.toString(),\n          category: g.category || 'uncategorized',\n        })),\n      };\n    }\n\n    logger.debug('Prompt migration check completed', {\n      totalToMigrate: result.totalToMigrate,\n      globalViewAccess: result.globalViewAccess,\n      privateGroups: result.privateGroups,\n    });\n\n    return result;\n  } catch (error) {\n    logger.error('Failed to check prompt permissions migration', error);\n    // Return zero counts on error to avoid blocking startup\n    return {\n      totalToMigrate: 0,\n      globalViewAccess: 0,\n      privateGroups: 0,\n    };\n  }\n}\n\n/**\n * Log migration warning to console if prompt groups need migration\n */\nexport function logPromptMigrationWarning(result: PromptMigrationCheckResult): void {\n  if (result.totalToMigrate === 0) {\n    return;\n  }\n\n  // Create a visible warning box\n  const border = '='.repeat(80);\n  const warning = [\n    '',\n    border,\n    '                   IMPORTANT: PROMPT PERMISSIONS MIGRATION REQUIRED',\n    border,\n    '',\n    `  Total prompt groups to migrate: ${result.totalToMigrate}`,\n    `  - Global View Access: ${result.globalViewAccess} prompt groups`,\n    `  - Private Prompt Groups: ${result.privateGroups} prompt groups`,\n    '',\n    '  The new prompt sharing system requires migrating existing prompt groups.',\n    '  Please run the following command to migrate your prompts:',\n    '',\n    '    npm run migrate:prompt-permissions',\n    '',\n    '  For a dry run (preview) of what will be migrated:',\n    '',\n    '    npm run migrate:prompt-permissions:dry-run',\n    '',\n    '  This migration will:',\n    '  1. Grant owner permissions to prompt authors',\n    '  2. Set public view permissions for prompts in the global project',\n    '  3. Keep private prompts accessible only to their authors',\n    '',\n    border,\n    '',\n  ];\n\n  // Use console methods directly for visibility\n  console.log('\\n' + warning.join('\\n') + '\\n');\n\n  // Also log with logger for consistency\n  logger.warn('Prompt permissions migration required', {\n    totalToMigrate: result.totalToMigrate,\n    globalViewAccess: result.globalViewAccess,\n    privateGroups: result.privateGroups,\n  });\n}\n","import { EModelEndpoint, extractEnvVariable } from 'librechat-data-provider';\nimport type { TCustomEndpoints, TEndpoint, TConfig } from 'librechat-data-provider';\nimport type { TCustomEndpointsConfig } from '~/types/endpoints';\nimport { isUserProvided, normalizeEndpointName } from '~/utils';\n\n/**\n * Load config endpoints from the cached configuration object\n * @param customEndpointsConfig - The configuration object\n */\nexport function loadCustomEndpointsConfig(\n  customEndpoints?: TCustomEndpoints,\n): TCustomEndpointsConfig | undefined {\n  if (!customEndpoints) {\n    return;\n  }\n\n  const customEndpointsConfig: TCustomEndpointsConfig = {};\n\n  if (Array.isArray(customEndpoints)) {\n    const filteredEndpoints = customEndpoints.filter(\n      (endpoint) =>\n        endpoint.baseURL &&\n        endpoint.apiKey &&\n        endpoint.name &&\n        endpoint.models &&\n        (endpoint.models.fetch || endpoint.models.default),\n    );\n\n    for (let i = 0; i < filteredEndpoints.length; i++) {\n      const endpoint = filteredEndpoints[i] as TEndpoint;\n      const {\n        baseURL,\n        apiKey,\n        name: configName,\n        iconURL,\n        modelDisplayLabel,\n        customParams,\n      } = endpoint;\n      const name = normalizeEndpointName(configName);\n\n      const resolvedApiKey = extractEnvVariable(apiKey ?? '');\n      const resolvedBaseURL = extractEnvVariable(baseURL ?? '');\n\n      customEndpointsConfig[name] = {\n        type: EModelEndpoint.custom,\n        userProvide: isUserProvided(resolvedApiKey),\n        userProvideURL: isUserProvided(resolvedBaseURL),\n        customParams: customParams as TConfig['customParams'],\n        modelDisplayLabel,\n        iconURL,\n      };\n    }\n  }\n\n  return customEndpointsConfig;\n}\n","import { Providers } from '@librechat/agents';\nimport { googleSettings, AuthKeys, removeNullishValues } from 'librechat-data-provider';\nimport type { GoogleClientOptions, VertexAIClientOptions } from '@librechat/agents';\nimport type { GoogleAIToolType } from '@langchain/google-common';\nimport type * as t from '~/types';\nimport { isEnabled } from '~/utils';\n\nfunction getThresholdMapping(model: string) {\n  const gemini1Pattern = /gemini-(1\\.0|1\\.5|pro$|1\\.0-pro|1\\.5-pro|1\\.5-flash-001)/;\n  const restrictedPattern = /(gemini-(1\\.5-flash-8b|2\\.0|exp)|learnlm)/;\n\n  if (gemini1Pattern.test(model)) {\n    return (value: string) => {\n      if (value === 'OFF') {\n        return 'BLOCK_NONE';\n      }\n      return value;\n    };\n  }\n\n  if (restrictedPattern.test(model)) {\n    return (value: string) => {\n      if (value === 'OFF' || value === 'HARM_BLOCK_THRESHOLD_UNSPECIFIED') {\n        return 'BLOCK_NONE';\n      }\n      return value;\n    };\n  }\n\n  return (value: string) => value;\n}\n\nexport function getSafetySettings(\n  model?: string,\n): Array<{ category: string; threshold: string }> | undefined {\n  if (isEnabled(process.env.GOOGLE_EXCLUDE_SAFETY_SETTINGS)) {\n    return undefined;\n  }\n  const mapThreshold = getThresholdMapping(model ?? '');\n\n  return [\n    {\n      category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n      threshold: mapThreshold(\n        process.env.GOOGLE_SAFETY_SEXUALLY_EXPLICIT || 'HARM_BLOCK_THRESHOLD_UNSPECIFIED',\n      ),\n    },\n    {\n      category: 'HARM_CATEGORY_HATE_SPEECH',\n      threshold: mapThreshold(\n        process.env.GOOGLE_SAFETY_HATE_SPEECH || 'HARM_BLOCK_THRESHOLD_UNSPECIFIED',\n      ),\n    },\n    {\n      category: 'HARM_CATEGORY_HARASSMENT',\n      threshold: mapThreshold(\n        process.env.GOOGLE_SAFETY_HARASSMENT || 'HARM_BLOCK_THRESHOLD_UNSPECIFIED',\n      ),\n    },\n    {\n      category: 'HARM_CATEGORY_DANGEROUS_CONTENT',\n      threshold: mapThreshold(\n        process.env.GOOGLE_SAFETY_DANGEROUS_CONTENT || 'HARM_BLOCK_THRESHOLD_UNSPECIFIED',\n      ),\n    },\n    {\n      category: 'HARM_CATEGORY_CIVIC_INTEGRITY',\n      threshold: mapThreshold(process.env.GOOGLE_SAFETY_CIVIC_INTEGRITY || 'BLOCK_NONE'),\n    },\n  ];\n}\n\n/**\n * Replicates core logic from GoogleClient's constructor and setOptions, plus client determination.\n * Returns an object with the provider label and the final options that would be passed to createLLM.\n *\n * @param credentials - Either a JSON string or an object containing Google keys\n * @param options - The same shape as the \"GoogleClient\" constructor options\n */\n\nexport function getGoogleConfig(\n  credentials: string | t.GoogleCredentials | undefined,\n  options: t.GoogleConfigOptions = {},\n) {\n  let creds: t.GoogleCredentials = {};\n  if (typeof credentials === 'string') {\n    try {\n      creds = JSON.parse(credentials);\n    } catch (err: unknown) {\n      throw new Error(\n        `Error parsing string credentials: ${err instanceof Error ? err.message : 'Unknown error'}`,\n      );\n    }\n  } else if (credentials && typeof credentials === 'object') {\n    creds = credentials;\n  }\n\n  const serviceKeyRaw = creds[AuthKeys.GOOGLE_SERVICE_KEY] ?? {};\n  const serviceKey =\n    typeof serviceKeyRaw === 'string' ? JSON.parse(serviceKeyRaw) : (serviceKeyRaw ?? {});\n\n  const apiKey = creds[AuthKeys.GOOGLE_API_KEY] ?? null;\n  const project_id = !apiKey ? (serviceKey?.project_id ?? null) : null;\n\n  const reverseProxyUrl = options.reverseProxyUrl;\n  const authHeader = options.authHeader;\n\n  const {\n    web_search,\n    thinking = googleSettings.thinking.default,\n    thinkingBudget = googleSettings.thinkingBudget.default,\n    ...modelOptions\n  } = options.modelOptions || {};\n\n  const llmConfig: GoogleClientOptions | VertexAIClientOptions = removeNullishValues({\n    ...(modelOptions || {}),\n    model: modelOptions?.model ?? '',\n    maxRetries: 2,\n    topP: modelOptions?.topP ?? undefined,\n    topK: modelOptions?.topK ?? undefined,\n    temperature: modelOptions?.temperature ?? undefined,\n    maxOutputTokens: modelOptions?.maxOutputTokens ?? undefined,\n  });\n\n  /** Used only for Safety Settings */\n  llmConfig.safetySettings = getSafetySettings(llmConfig.model);\n\n  let provider;\n\n  if (project_id) {\n    provider = Providers.VERTEXAI;\n  } else {\n    provider = Providers.GOOGLE;\n  }\n\n  // If we have a GCP project => Vertex AI\n  if (provider === Providers.VERTEXAI) {\n    (llmConfig as VertexAIClientOptions).authOptions = {\n      credentials: { ...serviceKey },\n      projectId: project_id,\n    };\n    (llmConfig as VertexAIClientOptions).location = process.env.GOOGLE_LOC || 'us-central1';\n  } else if (apiKey && provider === Providers.GOOGLE) {\n    llmConfig.apiKey = apiKey;\n  } else {\n    throw new Error(\n      `Invalid credentials provided. Please provide either a valid API key or service account credentials for Google Cloud.`,\n    );\n  }\n\n  const shouldEnableThinking =\n    thinking && thinkingBudget != null && (thinkingBudget > 0 || thinkingBudget === -1);\n\n  if (shouldEnableThinking && provider === Providers.GOOGLE) {\n    (llmConfig as GoogleClientOptions).thinkingConfig = {\n      thinkingBudget: thinking ? thinkingBudget : googleSettings.thinkingBudget.default,\n      includeThoughts: Boolean(thinking),\n    };\n  } else if (shouldEnableThinking && provider === Providers.VERTEXAI) {\n    (llmConfig as VertexAIClientOptions).thinkingBudget = thinking\n      ? thinkingBudget\n      : googleSettings.thinkingBudget.default;\n    (llmConfig as VertexAIClientOptions).includeThoughts = Boolean(thinking);\n  }\n\n  /*\n  let legacyOptions = {};\n  // Filter out any \"examples\" that are empty\n  legacyOptions.examples = (legacyOptions.examples ?? [])\n    .filter(Boolean)\n    .filter((obj) => obj?.input?.content !== '' && obj?.output?.content !== '');\n\n  // If user has \"examples\" from legacyOptions, push them onto llmConfig\n  if (legacyOptions.examples?.length) {\n    llmConfig.examples = legacyOptions.examples.map((ex) => {\n      const { input, output } = ex;\n      if (!input?.content || !output?.content) {return undefined;}\n      return {\n        input: new HumanMessage(input.content),\n        output: new AIMessage(output.content),\n      };\n    }).filter(Boolean);\n  }\n  */\n\n  if (reverseProxyUrl) {\n    (llmConfig as GoogleClientOptions).baseUrl = reverseProxyUrl;\n  }\n\n  if (authHeader) {\n    (llmConfig as GoogleClientOptions).customHeaders = {\n      Authorization: `Bearer ${apiKey}`,\n    };\n  }\n\n  const tools: GoogleAIToolType[] = [];\n\n  if (web_search) {\n    tools.push({ googleSearch: {} });\n  }\n\n  // Return the final shape\n  return {\n    /** @type {GoogleAIToolType[]} */\n    tools,\n    /** @type {Providers.GOOGLE | Providers.VERTEXAI} */\n    provider,\n    /** @type {GoogleClientOptions | VertexAIClientOptions} */\n    llmConfig,\n  };\n}\n","import { removeNullishValues } from 'librechat-data-provider';\nimport type { BindToolsInput } from '@langchain/core/language_models/chat_models';\nimport type { AzureOpenAIInput } from '@langchain/openai';\nimport type { OpenAI } from 'openai';\nimport type * as t from '~/types';\nimport { sanitizeModelName, constructAzureURL } from '~/utils/azure';\nimport { isEnabled } from '~/utils/common';\n\nexport const knownOpenAIParams = new Set([\n  // Constructor/Instance Parameters\n  'model',\n  'modelName',\n  'temperature',\n  'topP',\n  'frequencyPenalty',\n  'presencePenalty',\n  'n',\n  'logitBias',\n  'stop',\n  'stopSequences',\n  'user',\n  'timeout',\n  'stream',\n  'maxTokens',\n  'maxCompletionTokens',\n  'logprobs',\n  'topLogprobs',\n  'apiKey',\n  'organization',\n  'audio',\n  'modalities',\n  'reasoning',\n  'zdrEnabled',\n  'service_tier',\n  'supportsStrictToolCalling',\n  'useResponsesApi',\n  'configuration',\n  // Call-time Options\n  'tools',\n  'tool_choice',\n  'functions',\n  'function_call',\n  'response_format',\n  'seed',\n  'stream_options',\n  'parallel_tool_calls',\n  'strict',\n  'prediction',\n  'promptIndex',\n  // Responses API specific\n  'text',\n  'truncation',\n  'include',\n  'previous_response_id',\n  // LangChain specific\n  '__includeRawResponse',\n  'maxConcurrency',\n  'maxRetries',\n  'verbose',\n  'streaming',\n  'streamUsage',\n  'disableStreaming',\n]);\n\nfunction hasReasoningParams({\n  reasoning_effort,\n  reasoning_summary,\n}: {\n  reasoning_effort?: string | null;\n  reasoning_summary?: string | null;\n}): boolean {\n  return (\n    (reasoning_effort != null && reasoning_effort !== '') ||\n    (reasoning_summary != null && reasoning_summary !== '')\n  );\n}\n\nexport function getOpenAILLMConfig({\n  azure,\n  apiKey,\n  baseURL,\n  streaming,\n  addParams,\n  dropParams,\n  useOpenRouter,\n  modelOptions: _modelOptions,\n}: {\n  apiKey: string;\n  streaming: boolean;\n  baseURL?: string | null;\n  modelOptions: Partial<t.OpenAIParameters>;\n  addParams?: Record<string, unknown>;\n  dropParams?: string[];\n  useOpenRouter?: boolean;\n  azure?: false | t.AzureOptions;\n}): Pick<t.LLMConfigResult, 'llmConfig' | 'tools'> & {\n  azure?: t.AzureOptions;\n} {\n  const {\n    reasoning_effort,\n    reasoning_summary,\n    verbosity,\n    web_search,\n    frequency_penalty,\n    presence_penalty,\n    ...modelOptions\n  } = _modelOptions;\n\n  const llmConfig = Object.assign(\n    {\n      streaming,\n      model: modelOptions.model ?? '',\n    },\n    modelOptions,\n  ) as Partial<t.OAIClientOptions> & Partial<t.OpenAIParameters> & Partial<AzureOpenAIInput>;\n\n  if (frequency_penalty != null) {\n    llmConfig.frequencyPenalty = frequency_penalty;\n  }\n  if (presence_penalty != null) {\n    llmConfig.presencePenalty = presence_penalty;\n  }\n\n  const modelKwargs: Record<string, unknown> = {};\n  let hasModelKwargs = false;\n\n  if (verbosity != null && verbosity !== '') {\n    modelKwargs.verbosity = verbosity;\n    hasModelKwargs = true;\n  }\n\n  if (addParams && typeof addParams === 'object') {\n    for (const [key, value] of Object.entries(addParams)) {\n      if (knownOpenAIParams.has(key)) {\n        (llmConfig as Record<string, unknown>)[key] = value;\n      } else {\n        hasModelKwargs = true;\n        modelKwargs[key] = value;\n      }\n    }\n  }\n\n  if (useOpenRouter) {\n    llmConfig.include_reasoning = true;\n  }\n\n  if (\n    hasReasoningParams({ reasoning_effort, reasoning_summary }) &&\n    (llmConfig.useResponsesApi === true || useOpenRouter)\n  ) {\n    llmConfig.reasoning = removeNullishValues(\n      {\n        effort: reasoning_effort,\n        summary: reasoning_summary,\n      },\n      true,\n    ) as OpenAI.Reasoning;\n  } else if (hasReasoningParams({ reasoning_effort })) {\n    llmConfig.reasoning_effort = reasoning_effort;\n  }\n\n  if (llmConfig.max_tokens != null) {\n    llmConfig.maxTokens = llmConfig.max_tokens;\n    delete llmConfig.max_tokens;\n  }\n\n  const tools: BindToolsInput[] = [];\n\n  if (web_search) {\n    llmConfig.useResponsesApi = true;\n    tools.push({ type: 'web_search_preview' });\n  }\n\n  /**\n   * Note: OpenAI Web Search models do not support any known parameters besides `max_tokens`\n   */\n  if (modelOptions.model && /gpt-4o.*search/.test(modelOptions.model as string)) {\n    const searchExcludeParams = [\n      'frequency_penalty',\n      'presence_penalty',\n      'reasoning',\n      'reasoning_effort',\n      'temperature',\n      'top_p',\n      'top_k',\n      'stop',\n      'logit_bias',\n      'seed',\n      'response_format',\n      'n',\n      'logprobs',\n      'user',\n    ];\n\n    const updatedDropParams = dropParams || [];\n    const combinedDropParams = [...new Set([...updatedDropParams, ...searchExcludeParams])];\n\n    combinedDropParams.forEach((param) => {\n      if (param in llmConfig) {\n        delete llmConfig[param as keyof t.OAIClientOptions];\n      }\n    });\n  } else if (dropParams && Array.isArray(dropParams)) {\n    dropParams.forEach((param) => {\n      if (param in llmConfig) {\n        delete llmConfig[param as keyof t.OAIClientOptions];\n      }\n    });\n  }\n\n  if (modelKwargs.verbosity && llmConfig.useResponsesApi === true) {\n    modelKwargs.text = { verbosity: modelKwargs.verbosity };\n    delete modelKwargs.verbosity;\n  }\n\n  if (llmConfig.model && /\\bgpt-[5-9]\\b/i.test(llmConfig.model) && llmConfig.maxTokens != null) {\n    const paramName =\n      llmConfig.useResponsesApi === true ? 'max_output_tokens' : 'max_completion_tokens';\n    modelKwargs[paramName] = llmConfig.maxTokens;\n    delete llmConfig.maxTokens;\n    hasModelKwargs = true;\n  }\n\n  if (hasModelKwargs) {\n    llmConfig.modelKwargs = modelKwargs;\n  }\n\n  if (!azure) {\n    llmConfig.apiKey = apiKey;\n    return { llmConfig, tools };\n  }\n\n  const useModelName = isEnabled(process.env.AZURE_USE_MODEL_AS_DEPLOYMENT_NAME);\n  const updatedAzure = { ...azure };\n  updatedAzure.azureOpenAIApiDeploymentName = useModelName\n    ? sanitizeModelName(llmConfig.model || '')\n    : azure.azureOpenAIApiDeploymentName;\n\n  if (process.env.AZURE_OPENAI_DEFAULT_MODEL) {\n    llmConfig.model = process.env.AZURE_OPENAI_DEFAULT_MODEL;\n  }\n\n  const constructAzureOpenAIBasePath = () => {\n    if (!baseURL) {\n      return;\n    }\n    const azureURL = constructAzureURL({\n      baseURL,\n      azureOptions: updatedAzure,\n    });\n    updatedAzure.azureOpenAIBasePath = azureURL.split(\n      `/${updatedAzure.azureOpenAIApiDeploymentName}`,\n    )[0];\n  };\n\n  constructAzureOpenAIBasePath();\n  Object.assign(llmConfig, updatedAzure);\n\n  const constructAzureResponsesApi = () => {\n    if (!llmConfig.useResponsesApi) {\n      return;\n    }\n\n    delete llmConfig.azureOpenAIApiDeploymentName;\n    delete llmConfig.azureOpenAIApiInstanceName;\n    delete llmConfig.azureOpenAIApiVersion;\n    delete llmConfig.azureOpenAIBasePath;\n    delete llmConfig.azureOpenAIApiKey;\n    llmConfig.apiKey = apiKey;\n  };\n\n  constructAzureResponsesApi();\n\n  llmConfig.model = updatedAzure.azureOpenAIApiDeploymentName;\n  return { llmConfig, tools, azure: updatedAzure };\n}\n","import { logger } from '@librechat/data-schemas';\nimport { AnthropicClientOptions } from '@librechat/agents';\nimport { EModelEndpoint, anthropicSettings } from 'librechat-data-provider';\nimport { matchModelName } from '~/utils/tokens';\n\n/**\n * @param {string} modelName\n * @returns {boolean}\n */\nfunction checkPromptCacheSupport(modelName: string): boolean {\n  const modelMatch = matchModelName(modelName, EModelEndpoint.anthropic) ?? '';\n  if (\n    modelMatch.includes('claude-3-5-sonnet-latest') ||\n    modelMatch.includes('claude-3.5-sonnet-latest')\n  ) {\n    return false;\n  }\n\n  return (\n    /claude-3[-.]7/.test(modelMatch) ||\n    /claude-3[-.]5-(?:sonnet|haiku)/.test(modelMatch) ||\n    /claude-3-(?:sonnet|haiku|opus)?/.test(modelMatch) ||\n    /claude-(?:sonnet|opus|haiku)-[4-9]/.test(modelMatch) ||\n    /claude-[4-9]-(?:sonnet|opus|haiku)?/.test(modelMatch) ||\n    /claude-4(?:-(?:sonnet|opus|haiku))?/.test(modelMatch)\n  );\n}\n\n/**\n * Gets the appropriate headers for Claude models with cache control\n * @param {string} model The model name\n * @param {boolean} supportsCacheControl Whether the model supports cache control\n * @returns {AnthropicClientOptions['extendedOptions']['defaultHeaders']|undefined} The headers object or undefined if not applicable\n */\nfunction getClaudeHeaders(\n  model: string,\n  supportsCacheControl: boolean,\n): Record<string, string> | undefined {\n  if (!supportsCacheControl) {\n    return undefined;\n  }\n\n  if (/claude-3[-.]5-sonnet/.test(model)) {\n    return {\n      'anthropic-beta': 'max-tokens-3-5-sonnet-2024-07-15,prompt-caching-2024-07-31',\n    };\n  } else if (/claude-3[-.]7/.test(model)) {\n    return {\n      'anthropic-beta':\n        'token-efficient-tools-2025-02-19,output-128k-2025-02-19,prompt-caching-2024-07-31',\n    };\n  } else if (/claude-sonnet-4/.test(model)) {\n    return {\n      'anthropic-beta': 'prompt-caching-2024-07-31,context-1m-2025-08-07',\n    };\n  } else if (\n    /claude-(?:sonnet|opus|haiku)-[4-9]/.test(model) ||\n    /claude-[4-9]-(?:sonnet|opus|haiku)?/.test(model) ||\n    /claude-4(?:-(?:sonnet|opus|haiku))?/.test(model)\n  ) {\n    return {\n      'anthropic-beta': 'prompt-caching-2024-07-31',\n    };\n  } else {\n    return {\n      'anthropic-beta': 'prompt-caching-2024-07-31',\n    };\n  }\n}\n\n/**\n * Configures reasoning-related options for Claude models\n * @param {AnthropicClientOptions & { max_tokens?: number }} anthropicInput The request options object\n * @param {Object} extendedOptions Additional client configuration options\n * @param {boolean} extendedOptions.thinking Whether thinking is enabled in client config\n * @param {number|null} extendedOptions.thinkingBudget The token budget for thinking\n * @returns {Object} Updated request options\n */\nfunction configureReasoning(\n  anthropicInput: AnthropicClientOptions & { max_tokens?: number },\n  extendedOptions: { thinking?: boolean; thinkingBudget?: number | null } = {},\n): AnthropicClientOptions & { max_tokens?: number } {\n  const updatedOptions = { ...anthropicInput };\n  const currentMaxTokens = updatedOptions.max_tokens ?? updatedOptions.maxTokens;\n\n  if (\n    extendedOptions.thinking &&\n    updatedOptions?.model &&\n    (/claude-3[-.]7/.test(updatedOptions.model) ||\n      /claude-(?:sonnet|opus|haiku)-[4-9]/.test(updatedOptions.model))\n  ) {\n    updatedOptions.thinking = {\n      ...updatedOptions.thinking,\n      type: 'enabled',\n    } as { type: 'enabled'; budget_tokens: number };\n  }\n\n  if (\n    updatedOptions.thinking != null &&\n    extendedOptions.thinkingBudget != null &&\n    updatedOptions.thinking.type === 'enabled'\n  ) {\n    updatedOptions.thinking = {\n      ...updatedOptions.thinking,\n      budget_tokens: extendedOptions.thinkingBudget,\n    };\n  }\n\n  if (\n    updatedOptions.thinking != null &&\n    updatedOptions.thinking.type === 'enabled' &&\n    (currentMaxTokens == null || updatedOptions.thinking.budget_tokens > currentMaxTokens)\n  ) {\n    const maxTokens = anthropicSettings.maxOutputTokens.reset(updatedOptions.model ?? '');\n    updatedOptions.max_tokens = currentMaxTokens ?? maxTokens;\n\n    logger.warn(\n      updatedOptions.max_tokens === maxTokens\n        ? '[AnthropicClient] max_tokens is not defined while thinking is enabled. Setting max_tokens to model default.'\n        : `[AnthropicClient] thinking budget_tokens (${updatedOptions.thinking.budget_tokens}) exceeds max_tokens (${updatedOptions.max_tokens}). Adjusting budget_tokens.`,\n    );\n\n    updatedOptions.thinking.budget_tokens = Math.min(\n      updatedOptions.thinking.budget_tokens,\n      Math.floor(updatedOptions.max_tokens * 0.9),\n    );\n  }\n\n  return updatedOptions;\n}\n\nexport { checkPromptCacheSupport, getClaudeHeaders, configureReasoning };\n","import { Dispatcher, ProxyAgent } from 'undici';\nimport { AnthropicClientOptions } from '@librechat/agents';\nimport { anthropicSettings, removeNullishValues } from 'librechat-data-provider';\nimport type { AnthropicLLMConfigResult, AnthropicConfigOptions } from '~/types/anthropic';\nimport { checkPromptCacheSupport, getClaudeHeaders, configureReasoning } from './helpers';\n\n/**\n * Generates configuration options for creating an Anthropic language model (LLM) instance.\n * @param apiKey - The API key for authentication with Anthropic.\n * @param options={} - Additional options for configuring the LLM.\n * @returns Configuration options for creating an Anthropic LLM instance, with null and undefined values removed.\n */\nfunction getLLMConfig(\n  apiKey?: string,\n  options: AnthropicConfigOptions = {} as AnthropicConfigOptions,\n): AnthropicLLMConfigResult {\n  const systemOptions = {\n    thinking: options.modelOptions?.thinking ?? anthropicSettings.thinking.default,\n    promptCache: options.modelOptions?.promptCache ?? anthropicSettings.promptCache.default,\n    thinkingBudget:\n      options.modelOptions?.thinkingBudget ?? anthropicSettings.thinkingBudget.default,\n  };\n\n  /** Couldn't figure out a way to still loop through the object while deleting the overlapping keys when porting this\n   * over from javascript, so for now they are being deleted manually until a better way presents itself.\n   */\n  if (options.modelOptions) {\n    delete options.modelOptions.thinking;\n    delete options.modelOptions.promptCache;\n    delete options.modelOptions.thinkingBudget;\n  } else {\n    throw new Error('No modelOptions provided');\n  }\n\n  const defaultOptions = {\n    model: anthropicSettings.model.default,\n    maxOutputTokens: anthropicSettings.maxOutputTokens.default,\n    stream: true,\n  };\n\n  const mergedOptions = Object.assign(defaultOptions, options.modelOptions);\n\n  let requestOptions: AnthropicClientOptions & { stream?: boolean } = {\n    apiKey,\n    model: mergedOptions.model,\n    stream: mergedOptions.stream,\n    temperature: mergedOptions.temperature,\n    stopSequences: mergedOptions.stop,\n    maxTokens:\n      mergedOptions.maxOutputTokens || anthropicSettings.maxOutputTokens.reset(mergedOptions.model),\n    clientOptions: {},\n    invocationKwargs: {\n      metadata: {\n        user_id: mergedOptions.user,\n      },\n    },\n  };\n\n  requestOptions = configureReasoning(requestOptions, systemOptions);\n\n  if (!/claude-3[-.]7/.test(mergedOptions.model)) {\n    requestOptions.topP = mergedOptions.topP;\n    requestOptions.topK = mergedOptions.topK;\n  } else if (requestOptions.thinking == null) {\n    requestOptions.topP = mergedOptions.topP;\n    requestOptions.topK = mergedOptions.topK;\n  }\n\n  const supportsCacheControl =\n    systemOptions.promptCache === true && checkPromptCacheSupport(requestOptions.model ?? '');\n  const headers = getClaudeHeaders(requestOptions.model ?? '', supportsCacheControl);\n  if (headers && requestOptions.clientOptions) {\n    requestOptions.clientOptions.defaultHeaders = headers;\n  }\n\n  if (options.proxy && requestOptions.clientOptions) {\n    const proxyAgent = new ProxyAgent(options.proxy);\n    requestOptions.clientOptions.fetchOptions = {\n      dispatcher: proxyAgent,\n    };\n  }\n\n  if (options.reverseProxyUrl && requestOptions.clientOptions) {\n    requestOptions.clientOptions.baseURL = options.reverseProxyUrl;\n    requestOptions.anthropicApiUrl = options.reverseProxyUrl;\n  }\n\n  const tools = [];\n\n  if (mergedOptions.web_search) {\n    tools.push({\n      type: 'web_search_20250305',\n      name: 'web_search',\n    });\n  }\n\n  return {\n    tools,\n    llmConfig: removeNullishValues(\n      requestOptions as Record<string, unknown>,\n    ) as AnthropicClientOptions & { clientOptions?: { fetchOptions?: { dispatcher: Dispatcher } } },\n  };\n}\n\nexport { getLLMConfig };\n","import { EModelEndpoint } from 'librechat-data-provider';\nimport type { ClientOptions } from '@librechat/agents';\nimport type * as t from '~/types';\nimport { knownOpenAIParams } from './llm';\n\nconst anthropicExcludeParams = new Set(['anthropicApiUrl']);\n\n/**\n * Transforms a Non-OpenAI LLM config to an OpenAI-conformant config.\n * Non-OpenAI parameters are moved to modelKwargs.\n * Also extracts configuration options that belong in configOptions.\n * Handles addParams and dropParams for parameter customization.\n */\nexport function transformToOpenAIConfig({\n  addParams,\n  dropParams,\n  llmConfig,\n  fromEndpoint,\n}: {\n  addParams?: Record<string, unknown>;\n  dropParams?: string[];\n  llmConfig: ClientOptions;\n  fromEndpoint: string;\n}): {\n  llmConfig: t.OAIClientOptions;\n  configOptions: Partial<t.OpenAIConfiguration>;\n} {\n  const openAIConfig: Partial<t.OAIClientOptions> = {};\n  let configOptions: Partial<t.OpenAIConfiguration> = {};\n  let modelKwargs: Record<string, unknown> = {};\n  let hasModelKwargs = false;\n\n  const isAnthropic = fromEndpoint === EModelEndpoint.anthropic;\n  const excludeParams = isAnthropic ? anthropicExcludeParams : new Set();\n\n  for (const [key, value] of Object.entries(llmConfig)) {\n    if (value === undefined || value === null) {\n      continue;\n    }\n\n    if (excludeParams.has(key)) {\n      continue;\n    }\n\n    if (isAnthropic && key === 'clientOptions') {\n      configOptions = Object.assign({}, configOptions, value as Partial<t.OpenAIConfiguration>);\n      continue;\n    } else if (isAnthropic && key === 'invocationKwargs') {\n      modelKwargs = Object.assign({}, modelKwargs, value as Record<string, unknown>);\n      hasModelKwargs = true;\n      continue;\n    }\n\n    if (knownOpenAIParams.has(key)) {\n      (openAIConfig as Record<string, unknown>)[key] = value;\n    } else {\n      modelKwargs[key] = value;\n      hasModelKwargs = true;\n    }\n  }\n\n  if (addParams && typeof addParams === 'object') {\n    for (const [key, value] of Object.entries(addParams)) {\n      if (knownOpenAIParams.has(key)) {\n        (openAIConfig as Record<string, unknown>)[key] = value;\n      } else {\n        modelKwargs[key] = value;\n        hasModelKwargs = true;\n      }\n    }\n  }\n\n  if (hasModelKwargs) {\n    openAIConfig.modelKwargs = modelKwargs;\n  }\n\n  if (dropParams && Array.isArray(dropParams)) {\n    dropParams.forEach((param) => {\n      if (param in openAIConfig) {\n        delete openAIConfig[param as keyof t.OAIClientOptions];\n      }\n      if (openAIConfig.modelKwargs && param in openAIConfig.modelKwargs) {\n        delete openAIConfig.modelKwargs[param];\n        if (Object.keys(openAIConfig.modelKwargs).length === 0) {\n          delete openAIConfig.modelKwargs;\n        }\n      }\n    });\n  }\n\n  return {\n    llmConfig: openAIConfig as t.OAIClientOptions,\n    configOptions,\n  };\n}\n","import { ProxyAgent } from 'undici';\nimport { Providers } from '@librechat/agents';\nimport { KnownEndpoints, EModelEndpoint } from 'librechat-data-provider';\nimport type * as t from '~/types';\nimport { getLLMConfig as getAnthropicLLMConfig } from '~/endpoints/anthropic/llm';\nimport { transformToOpenAIConfig } from './transform';\nimport { constructAzureURL } from '~/utils/azure';\nimport { createFetch } from '~/utils/generators';\nimport { getOpenAILLMConfig } from './llm';\n\ntype Fetch = (input: string | URL | Request, init?: RequestInit) => Promise<Response>;\n\n/**\n * Generates configuration options for creating a language model (LLM) instance.\n * @param apiKey - The API key for authentication.\n * @param options - Additional options for configuring the LLM.\n * @param endpoint - The endpoint name\n * @returns Configuration options for creating an LLM instance.\n */\nexport function getOpenAIConfig(\n  apiKey: string,\n  options: t.OpenAIConfigOptions = {},\n  endpoint?: string | null,\n): t.OpenAIConfigResult {\n  const {\n    proxy,\n    addParams,\n    dropParams,\n    defaultQuery,\n    directEndpoint,\n    streaming = true,\n    modelOptions = {},\n    reverseProxyUrl: baseURL,\n  } = options;\n\n  let llmConfig: t.OAIClientOptions;\n  let tools: t.LLMConfigResult['tools'];\n  const isAnthropic = options.customParams?.defaultParamsEndpoint === EModelEndpoint.anthropic;\n\n  const useOpenRouter =\n    !isAnthropic &&\n    ((baseURL && baseURL.includes(KnownEndpoints.openrouter)) ||\n      (endpoint != null && endpoint.toLowerCase().includes(KnownEndpoints.openrouter)));\n\n  let azure = options.azure;\n  let headers = options.headers;\n  if (isAnthropic) {\n    const anthropicResult = getAnthropicLLMConfig(apiKey, {\n      modelOptions,\n      proxy: options.proxy,\n    });\n    const transformed = transformToOpenAIConfig({\n      addParams,\n      dropParams,\n      llmConfig: anthropicResult.llmConfig,\n      fromEndpoint: EModelEndpoint.anthropic,\n    });\n    llmConfig = transformed.llmConfig;\n    tools = anthropicResult.tools;\n    if (transformed.configOptions?.defaultHeaders) {\n      headers = Object.assign(headers ?? {}, transformed.configOptions?.defaultHeaders);\n    }\n  } else {\n    const openaiResult = getOpenAILLMConfig({\n      azure,\n      apiKey,\n      baseURL,\n      streaming,\n      addParams,\n      dropParams,\n      modelOptions,\n      useOpenRouter,\n    });\n    llmConfig = openaiResult.llmConfig;\n    azure = openaiResult.azure;\n    tools = openaiResult.tools;\n  }\n\n  const configOptions: t.OpenAIConfiguration = {};\n  if (baseURL) {\n    configOptions.baseURL = baseURL;\n  }\n  if (useOpenRouter) {\n    configOptions.defaultHeaders = Object.assign(\n      {\n        'HTTP-Referer': 'https://librechat.ai',\n        'X-Title': 'LibreChat',\n      },\n      headers,\n    );\n  } else if (headers) {\n    configOptions.defaultHeaders = headers;\n  }\n\n  if (defaultQuery) {\n    configOptions.defaultQuery = defaultQuery;\n  }\n\n  if (proxy) {\n    const proxyAgent = new ProxyAgent(proxy);\n    configOptions.fetchOptions = {\n      dispatcher: proxyAgent,\n    };\n  }\n\n  if (azure && !isAnthropic) {\n    const constructAzureResponsesApi = () => {\n      if (!llmConfig.useResponsesApi || !azure) {\n        return;\n      }\n\n      configOptions.baseURL = constructAzureURL({\n        baseURL: configOptions.baseURL || 'https://${INSTANCE_NAME}.openai.azure.com/openai/v1',\n        azureOptions: azure,\n      });\n\n      configOptions.defaultHeaders = {\n        ...configOptions.defaultHeaders,\n        'api-key': apiKey,\n      };\n      configOptions.defaultQuery = {\n        ...configOptions.defaultQuery,\n        'api-version': configOptions.defaultQuery?.['api-version'] ?? 'preview',\n      };\n    };\n\n    constructAzureResponsesApi();\n  }\n\n  if (process.env.OPENAI_ORGANIZATION && !isAnthropic) {\n    configOptions.organization = process.env.OPENAI_ORGANIZATION;\n  }\n\n  if (directEndpoint === true && configOptions?.baseURL != null) {\n    configOptions.fetch = createFetch({\n      directEndpoint: directEndpoint,\n      reverseProxyUrl: configOptions?.baseURL,\n    }) as unknown as Fetch;\n  }\n\n  const result: t.OpenAIConfigResult = {\n    llmConfig,\n    configOptions,\n    tools,\n  };\n  if (useOpenRouter) {\n    result.provider = Providers.OPENROUTER;\n  }\n  return result;\n}\n","import { ErrorTypes, EModelEndpoint, mapModelToAzureConfig } from 'librechat-data-provider';\nimport type {\n  InitializeOpenAIOptionsParams,\n  OpenAIOptionsResult,\n  OpenAIConfigOptions,\n  UserKeyValues,\n} from '~/types';\nimport { createHandleLLMNewToken } from '~/utils/generators';\nimport { getAzureCredentials } from '~/utils/azure';\nimport { isUserProvided } from '~/utils/common';\nimport { resolveHeaders } from '~/utils/env';\nimport { getOpenAIConfig } from './config';\n\n/**\n * Initializes OpenAI options for agent usage. This function always returns configuration\n * options and never creates a client instance (equivalent to optionsOnly=true behavior).\n *\n * @param params - Configuration parameters\n * @returns Promise resolving to OpenAI configuration options\n * @throws Error if API key is missing or user key has expired\n */\nexport const initializeOpenAI = async ({\n  req,\n  appConfig,\n  overrideModel,\n  endpointOption,\n  overrideEndpoint,\n  getUserKeyValues,\n  checkUserKeyExpiry,\n}: InitializeOpenAIOptionsParams): Promise<OpenAIOptionsResult> => {\n  const { PROXY, OPENAI_API_KEY, AZURE_API_KEY, OPENAI_REVERSE_PROXY, AZURE_OPENAI_BASEURL } =\n    process.env;\n\n  const { key: expiresAt } = req.body;\n  const modelName = overrideModel ?? req.body.model;\n  const endpoint = overrideEndpoint ?? req.body.endpoint;\n\n  if (!endpoint) {\n    throw new Error('Endpoint is required');\n  }\n\n  const credentials = {\n    [EModelEndpoint.openAI]: OPENAI_API_KEY,\n    [EModelEndpoint.azureOpenAI]: AZURE_API_KEY,\n  };\n\n  const baseURLOptions = {\n    [EModelEndpoint.openAI]: OPENAI_REVERSE_PROXY,\n    [EModelEndpoint.azureOpenAI]: AZURE_OPENAI_BASEURL,\n  };\n\n  const userProvidesKey = isUserProvided(credentials[endpoint as keyof typeof credentials]);\n  const userProvidesURL = isUserProvided(baseURLOptions[endpoint as keyof typeof baseURLOptions]);\n\n  let userValues: UserKeyValues | null = null;\n  if (expiresAt && (userProvidesKey || userProvidesURL)) {\n    checkUserKeyExpiry(expiresAt, endpoint);\n    userValues = await getUserKeyValues({ userId: req.user.id, name: endpoint });\n  }\n\n  let apiKey = userProvidesKey\n    ? userValues?.apiKey\n    : credentials[endpoint as keyof typeof credentials];\n  const baseURL = userProvidesURL\n    ? userValues?.baseURL\n    : baseURLOptions[endpoint as keyof typeof baseURLOptions];\n\n  const clientOptions: OpenAIConfigOptions = {\n    proxy: PROXY ?? undefined,\n    reverseProxyUrl: baseURL || undefined,\n    streaming: true,\n  };\n\n  const isAzureOpenAI = endpoint === EModelEndpoint.azureOpenAI;\n  const azureConfig = isAzureOpenAI && appConfig.endpoints?.[EModelEndpoint.azureOpenAI];\n\n  if (isAzureOpenAI && azureConfig) {\n    const { modelGroupMap, groupMap } = azureConfig;\n    const {\n      azureOptions,\n      baseURL: configBaseURL,\n      headers = {},\n      serverless,\n    } = mapModelToAzureConfig({\n      modelName: modelName || '',\n      modelGroupMap,\n      groupMap,\n    });\n\n    clientOptions.reverseProxyUrl = configBaseURL ?? clientOptions.reverseProxyUrl;\n    clientOptions.headers = resolveHeaders({\n      headers: { ...headers, ...(clientOptions.headers ?? {}) },\n      user: req.user,\n    });\n\n    const groupName = modelGroupMap[modelName || '']?.group;\n    if (groupName && groupMap[groupName]) {\n      clientOptions.addParams = groupMap[groupName]?.addParams;\n      clientOptions.dropParams = groupMap[groupName]?.dropParams;\n    }\n\n    apiKey = azureOptions.azureOpenAIApiKey;\n    clientOptions.azure = !serverless ? azureOptions : undefined;\n\n    if (serverless === true) {\n      clientOptions.defaultQuery = azureOptions.azureOpenAIApiVersion\n        ? { 'api-version': azureOptions.azureOpenAIApiVersion }\n        : undefined;\n\n      if (!clientOptions.headers) {\n        clientOptions.headers = {};\n      }\n      clientOptions.headers['api-key'] = apiKey;\n    }\n  } else if (isAzureOpenAI) {\n    clientOptions.azure =\n      userProvidesKey && userValues?.apiKey ? JSON.parse(userValues.apiKey) : getAzureCredentials();\n    apiKey = clientOptions.azure ? clientOptions.azure.azureOpenAIApiKey : undefined;\n  }\n\n  if (userProvidesKey && !apiKey) {\n    throw new Error(\n      JSON.stringify({\n        type: ErrorTypes.NO_USER_KEY,\n      }),\n    );\n  }\n\n  if (!apiKey) {\n    throw new Error(`${endpoint} API Key not provided.`);\n  }\n\n  const modelOptions = {\n    ...endpointOption.model_parameters,\n    model: modelName,\n    user: req.user.id,\n  };\n\n  const finalClientOptions: OpenAIConfigOptions = {\n    ...clientOptions,\n    modelOptions,\n  };\n\n  const options = getOpenAIConfig(apiKey, finalClientOptions, endpoint);\n\n  const openAIConfig = appConfig.endpoints?.[EModelEndpoint.openAI];\n  const allConfig = appConfig.endpoints?.all;\n  const azureRate = modelName?.includes('gpt-4') ? 30 : 17;\n\n  let streamRate: number | undefined;\n\n  if (isAzureOpenAI && azureConfig) {\n    streamRate = azureConfig.streamRate ?? azureRate;\n  } else if (!isAzureOpenAI && openAIConfig) {\n    streamRate = openAIConfig.streamRate;\n  }\n\n  if (allConfig?.streamRate) {\n    streamRate = allConfig.streamRate;\n  }\n\n  if (streamRate) {\n    options.llmConfig.callbacks = [\n      {\n        handleLLMNewToken: createHandleLLMNewToken(streamRate),\n      },\n    ];\n  }\n\n  const result: OpenAIOptionsResult = {\n    ...options,\n    streamRate,\n  };\n\n  return result;\n};\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport FormData from 'form-data';\nimport { logger } from '@librechat/data-schemas';\nimport {\n  FileSources,\n  envVarRegex,\n  extractEnvVariable,\n  extractVariableName,\n} from 'librechat-data-provider';\nimport type { TCustomConfig } from 'librechat-data-provider';\nimport type { AxiosError } from 'axios';\nimport type {\n  MistralFileUploadResponse,\n  MistralSignedUrlResponse,\n  MistralOCRUploadResult,\n  MistralOCRError,\n  OCRResultPage,\n  ServerRequest,\n  OCRResult,\n  OCRImage,\n} from '~/types';\nimport { logAxiosError, createAxiosInstance } from '~/utils/axios';\nimport { loadServiceKey } from '~/utils/key';\n\nconst axios = createAxiosInstance();\nconst DEFAULT_MISTRAL_BASE_URL = 'https://api.mistral.ai/v1';\nconst DEFAULT_MISTRAL_MODEL = 'mistral-ocr-latest';\n\n/** Helper type for auth configuration */\ninterface AuthConfig {\n  apiKey: string;\n  baseURL: string;\n}\n\n/** Helper type for Google service account */\ninterface GoogleServiceAccount {\n  client_email?: string;\n  private_key?: string;\n  project_id?: string;\n}\n\n/** Helper type for OCR request context */\ninterface OCRContext {\n  req: ServerRequest;\n  file: Express.Multer.File;\n  loadAuthValues: (params: {\n    userId: string;\n    authFields: string[];\n    optional?: Set<string>;\n  }) => Promise<Record<string, string | undefined>>;\n}\n\n/**\n * Uploads a document to Mistral API using file streaming to avoid loading the entire file into memory\n * @param params Upload parameters\n * @param params.filePath The path to the file on disk\n * @param params.fileName Optional filename to use (defaults to the name from filePath)\n * @param params.apiKey Mistral API key\n * @param params.baseURL Mistral API base URL\n * @returns The response from Mistral API\n */\nexport async function uploadDocumentToMistral({\n  apiKey,\n  filePath,\n  baseURL = DEFAULT_MISTRAL_BASE_URL,\n  fileName = '',\n}: {\n  apiKey: string;\n  filePath: string;\n  baseURL?: string;\n  fileName?: string;\n}): Promise<MistralFileUploadResponse> {\n  const form = new FormData();\n  form.append('purpose', 'ocr');\n  const actualFileName = fileName || path.basename(filePath);\n  const fileStream = fs.createReadStream(filePath);\n  form.append('file', fileStream, { filename: actualFileName });\n\n  return axios\n    .post(`${baseURL}/files`, form, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n        ...form.getHeaders(),\n      },\n      maxBodyLength: Infinity,\n      maxContentLength: Infinity,\n    })\n    .then((res) => res.data)\n    .catch((error) => {\n      throw error;\n    });\n}\n\nexport async function getSignedUrl({\n  apiKey,\n  fileId,\n  expiry = 24,\n  baseURL = DEFAULT_MISTRAL_BASE_URL,\n}: {\n  apiKey: string;\n  fileId: string;\n  expiry?: number;\n  baseURL?: string;\n}): Promise<MistralSignedUrlResponse> {\n  return axios\n    .get(`${baseURL}/files/${fileId}/url?expiry=${expiry}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    })\n    .then((res) => res.data)\n    .catch((error) => {\n      logger.error('Error fetching signed URL:', error.message);\n      throw error;\n    });\n}\n\n/**\n * @param {Object} params\n * @param {string} params.apiKey\n * @param {string} params.url - The document or image URL\n * @param {string} [params.documentType='document_url'] - 'document_url' or 'image_url'\n * @param {string} [params.model]\n * @param {string} [params.baseURL]\n * @returns {Promise<OCRResult>}\n */\nexport async function performOCR({\n  url,\n  apiKey,\n  model = DEFAULT_MISTRAL_MODEL,\n  baseURL = DEFAULT_MISTRAL_BASE_URL,\n  documentType = 'document_url',\n}: {\n  url: string;\n  apiKey: string;\n  model?: string;\n  baseURL?: string;\n  documentType?: 'document_url' | 'image_url';\n}): Promise<OCRResult> {\n  const documentKey = documentType === 'image_url' ? 'image_url' : 'document_url';\n  return axios\n    .post(\n      `${baseURL}/ocr`,\n      {\n        model,\n        image_limit: 0,\n        include_image_base64: false,\n        document: {\n          type: documentType,\n          [documentKey]: url,\n        },\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`,\n        },\n      },\n    )\n    .then((res) => res.data)\n    .catch((error) => {\n      logger.error('Error performing OCR:', error.message);\n      throw error;\n    });\n}\n\n/**\n * Deletes a file from Mistral API\n * @param params Delete parameters\n * @param params.fileId The file ID to delete\n * @param params.apiKey Mistral API key\n * @param params.baseURL Mistral API base URL\n * @returns Promise that resolves when the file is deleted\n */\nexport async function deleteMistralFile({\n  fileId,\n  apiKey,\n  baseURL = DEFAULT_MISTRAL_BASE_URL,\n}: {\n  fileId: string;\n  apiKey: string;\n  baseURL?: string;\n}): Promise<void> {\n  try {\n    const result = await axios.delete(`${baseURL}/files/${fileId}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    });\n    logger.debug(`Mistral file ${fileId} deleted successfully:`, result.data);\n  } catch (error) {\n    logger.error(`Error deleting Mistral file ${fileId}:`, error);\n  }\n}\n\n/**\n * Determines if a value needs to be loaded from environment\n */\nfunction needsEnvLoad(value: string): boolean {\n  return envVarRegex.test(value) || !value.trim();\n}\n\n/**\n * Gets the environment variable name for a config value\n */\nfunction getEnvVarName(configValue: string, defaultName: string): string {\n  if (!envVarRegex.test(configValue)) {\n    return defaultName;\n  }\n  return extractVariableName(configValue) || defaultName;\n}\n\n/**\n * Resolves a configuration value from either hardcoded or environment\n */\nasync function resolveConfigValue(\n  configValue: string,\n  defaultEnvName: string,\n  authValues: Record<string, string | undefined>,\n  defaultValue?: string,\n): Promise<string> {\n  // If it's a hardcoded value (not env var and not empty), use it directly\n  if (!needsEnvLoad(configValue)) {\n    return configValue;\n  }\n\n  // Otherwise, get from auth values\n  const envVarName = getEnvVarName(configValue, defaultEnvName);\n  return authValues[envVarName] || defaultValue || '';\n}\n\n/**\n * Loads authentication configuration from OCR config\n */\nasync function loadAuthConfig(context: OCRContext): Promise<AuthConfig> {\n  const appConfig = context.req.config;\n  const ocrConfig = appConfig?.ocr;\n  const apiKeyConfig = ocrConfig?.apiKey || '';\n  const baseURLConfig = ocrConfig?.baseURL || '';\n\n  if (!needsEnvLoad(apiKeyConfig) && !needsEnvLoad(baseURLConfig)) {\n    return {\n      apiKey: apiKeyConfig,\n      baseURL: baseURLConfig,\n    };\n  }\n\n  const authFields: string[] = [];\n\n  if (needsEnvLoad(baseURLConfig)) {\n    authFields.push(getEnvVarName(baseURLConfig, 'OCR_BASEURL'));\n  }\n\n  if (needsEnvLoad(apiKeyConfig)) {\n    authFields.push(getEnvVarName(apiKeyConfig, 'OCR_API_KEY'));\n  }\n\n  const authValues = await context.loadAuthValues({\n    userId: context.req.user?.id || '',\n    authFields,\n    optional: new Set(['OCR_BASEURL']),\n  });\n\n  const apiKey = await resolveConfigValue(apiKeyConfig, 'OCR_API_KEY', authValues);\n  const baseURL = await resolveConfigValue(\n    baseURLConfig,\n    'OCR_BASEURL',\n    authValues,\n    DEFAULT_MISTRAL_BASE_URL,\n  );\n\n  return { apiKey, baseURL };\n}\n\n/**\n * Gets the model configuration\n */\nfunction getModelConfig(ocrConfig: TCustomConfig['ocr']): string {\n  const modelConfig = ocrConfig?.mistralModel || '';\n\n  if (!modelConfig.trim()) {\n    return DEFAULT_MISTRAL_MODEL;\n  }\n\n  if (envVarRegex.test(modelConfig)) {\n    return extractEnvVariable(modelConfig) || DEFAULT_MISTRAL_MODEL;\n  }\n\n  return modelConfig.trim();\n}\n\n/**\n * Determines document type based on file\n */\nfunction getDocumentType(file: Express.Multer.File): 'image_url' | 'document_url' {\n  const mimetype = (file.mimetype || '').toLowerCase();\n  const originalname = file.originalname || '';\n  const isImage =\n    mimetype.startsWith('image') || /\\.(png|jpe?g|gif|bmp|webp|tiff?)$/i.test(originalname);\n\n  return isImage ? 'image_url' : 'document_url';\n}\n\n/**\n * Processes OCR result pages into aggregated text and images\n */\nfunction processOCRResult(ocrResult: OCRResult): { text: string; images: string[] } {\n  let aggregatedText = '';\n  const images: string[] = [];\n\n  ocrResult.pages.forEach((page: OCRResultPage, index: number) => {\n    if (ocrResult.pages.length > 1) {\n      aggregatedText += `# PAGE ${index + 1}\\n`;\n    }\n\n    aggregatedText += page.markdown + '\\n\\n';\n\n    if (!page.images || page.images.length === 0) {\n      return;\n    }\n\n    page.images.forEach((image: OCRImage) => {\n      if (image.image_base64) {\n        images.push(image.image_base64);\n      }\n    });\n  });\n\n  return { text: aggregatedText, images };\n}\n\n/**\n * Creates an error message for OCR operations\n */\nfunction createOCRError(error: unknown, baseMessage: string): Error {\n  const axiosError = error as AxiosError<MistralOCRError>;\n  const detail = axiosError?.response?.data?.detail;\n  const message = detail || baseMessage;\n\n  const responseMessage = axiosError?.response?.data?.message;\n  const errorLog = logAxiosError({ error: axiosError, message });\n  const fullMessage = responseMessage ? `${errorLog} - ${responseMessage}` : errorLog;\n\n  return new Error(fullMessage);\n}\n\n/**\n * Uploads a file to the Mistral OCR API and processes the OCR result.\n *\n * @param params - The params object.\n * @param params.req - The request object from Express. It should have a `user` property with an `id`\n *                       representing the user\n * @param params.file - The file object, which is part of the request. The file object should\n *                                     have a `mimetype` property that tells us the file type\n * @param params.loadAuthValues - Function to load authentication values\n * @returns - The result object containing the processed `text` and `images` (not currently used),\n *                       along with the `filename` and `bytes` properties.\n */\nexport const uploadMistralOCR = async (context: OCRContext): Promise<MistralOCRUploadResult> => {\n  let mistralFileId: string | undefined;\n  let apiKey: string | undefined;\n  let baseURL: string | undefined;\n\n  try {\n    const authConfig = await loadAuthConfig(context);\n    apiKey = authConfig.apiKey;\n    baseURL = authConfig.baseURL;\n    const model = getModelConfig(context.req.config?.ocr);\n\n    const mistralFile = await uploadDocumentToMistral({\n      filePath: context.file.path,\n      fileName: context.file.originalname,\n      apiKey,\n      baseURL,\n    });\n\n    mistralFileId = mistralFile.id;\n\n    const signedUrlResponse = await getSignedUrl({\n      apiKey,\n      baseURL,\n      fileId: mistralFile.id,\n    });\n\n    const documentType = getDocumentType(context.file);\n    const ocrResult = await performOCR({\n      url: signedUrlResponse.url,\n      documentType,\n      baseURL,\n      apiKey,\n      model,\n    });\n\n    if (!ocrResult || !ocrResult.pages || ocrResult.pages.length === 0) {\n      throw new Error(\n        'No OCR result returned from service, may be down or the file is not supported.',\n      );\n    }\n    const { text, images } = processOCRResult(ocrResult);\n\n    if (mistralFileId && apiKey && baseURL) {\n      await deleteMistralFile({ fileId: mistralFileId, apiKey, baseURL });\n    }\n\n    return {\n      filename: context.file.originalname,\n      bytes: text.length * 4,\n      filepath: FileSources.mistral_ocr,\n      text,\n      images,\n    };\n  } catch (error) {\n    if (mistralFileId && apiKey && baseURL) {\n      await deleteMistralFile({ fileId: mistralFileId, apiKey, baseURL });\n    }\n    throw createOCRError(error, 'Error uploading document to Mistral OCR API:');\n  }\n};\n\n/**\n * Use Azure Mistral OCR API to processe the OCR result.\n *\n * @param params - The params object.\n * @param params.req - The request object from Express. It should have a `user` property with an `id`\n *                       representing the user\n * @param params.appConfig - Application configuration object\n * @param params.file - The file object, which is part of the request. The file object should\n *                                     have a `mimetype` property that tells us the file type\n * @param params.loadAuthValues - Function to load authentication values\n * @returns - The result object containing the processed `text` and `images` (not currently used),\n *                       along with the `filename` and `bytes` properties.\n */\nexport const uploadAzureMistralOCR = async (\n  context: OCRContext,\n): Promise<MistralOCRUploadResult> => {\n  try {\n    const { apiKey, baseURL } = await loadAuthConfig(context);\n    const model = getModelConfig(context.req.config?.ocr);\n\n    const buffer = fs.readFileSync(context.file.path);\n    const base64 = buffer.toString('base64');\n    /** Uses actual mimetype of the file, 'image/jpeg' as fallback since it seems to be accepted regardless of mismatch */\n    const base64Prefix = `data:${context.file.mimetype || 'image/jpeg'};base64,`;\n\n    const documentType = getDocumentType(context.file);\n    const ocrResult = await performOCR({\n      apiKey,\n      baseURL,\n      model,\n      url: `${base64Prefix}${base64}`,\n      documentType,\n    });\n\n    if (!ocrResult || !ocrResult.pages || ocrResult.pages.length === 0) {\n      throw new Error(\n        'No OCR result returned from service, may be down or the file is not supported.',\n      );\n    }\n\n    const { text, images } = processOCRResult(ocrResult);\n\n    return {\n      filename: context.file.originalname,\n      bytes: text.length * 4,\n      filepath: FileSources.azure_mistral_ocr,\n      text,\n      images,\n    };\n  } catch (error) {\n    throw createOCRError(error, 'Error uploading document to Azure Mistral OCR API:');\n  }\n};\n\n/**\n * Loads Google service account configuration\n */\nasync function loadGoogleAuthConfig(): Promise<{\n  serviceAccount: GoogleServiceAccount;\n  accessToken: string;\n}> {\n  /** Path from environment variable or default location */\n  const serviceKeyPath =\n    process.env.GOOGLE_SERVICE_KEY_FILE ||\n    path.join(__dirname, '..', '..', '..', 'api', 'data', 'auth.json');\n\n  const serviceKey = await loadServiceKey(serviceKeyPath);\n\n  if (!serviceKey) {\n    throw new Error(\n      `Google service account not found or could not be loaded from ${serviceKeyPath}`,\n    );\n  }\n\n  if (!serviceKey.client_email || !serviceKey.private_key || !serviceKey.project_id) {\n    throw new Error('Invalid Google service account configuration');\n  }\n\n  const jwt = await createJWT(serviceKey as GoogleServiceAccount);\n  const accessToken = await exchangeJWTForAccessToken(jwt);\n\n  return {\n    serviceAccount: serviceKey as GoogleServiceAccount,\n    accessToken,\n  };\n}\n\n/**\n * Creates a JWT token manually\n */\nasync function createJWT(serviceKey: GoogleServiceAccount): Promise<string> {\n  const crypto = await import('crypto');\n\n  const header = {\n    alg: 'RS256',\n    typ: 'JWT',\n  };\n\n  const now = Math.floor(Date.now() / 1000);\n  const payload = {\n    iss: serviceKey.client_email,\n    scope: 'https://www.googleapis.com/auth/cloud-platform',\n    aud: 'https://oauth2.googleapis.com/token',\n    exp: now + 3600,\n    iat: now,\n  };\n\n  const encodedHeader = Buffer.from(JSON.stringify(header)).toString('base64url');\n  const encodedPayload = Buffer.from(JSON.stringify(payload)).toString('base64url');\n\n  const signatureInput = `${encodedHeader}.${encodedPayload}`;\n\n  const sign = crypto.createSign('RSA-SHA256');\n  sign.update(signatureInput);\n  sign.end();\n\n  const signature = sign.sign(serviceKey.private_key!, 'base64url');\n\n  return `${signatureInput}.${signature}`;\n}\n\n/**\n * Exchanges JWT for access token\n */\nasync function exchangeJWTForAccessToken(jwt: string): Promise<string> {\n  const response = await axios.post(\n    'https://oauth2.googleapis.com/token',\n    new URLSearchParams({\n      grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n      assertion: jwt,\n    }),\n    {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    },\n  );\n\n  if (!response.data?.access_token) {\n    throw new Error('No access token in response');\n  }\n\n  return response.data.access_token;\n}\n\n/**\n * Performs OCR using Google Vertex AI\n */\nasync function performGoogleVertexOCR({\n  url,\n  accessToken,\n  projectId,\n  model,\n  documentType = 'document_url',\n}: {\n  url: string;\n  accessToken: string;\n  projectId: string;\n  model: string;\n  documentType?: 'document_url' | 'image_url';\n}): Promise<OCRResult> {\n  const location = process.env.GOOGLE_LOC || 'us-central1';\n  const modelId = model || 'mistral-ocr-2505';\n\n  let baseURL: string;\n  if (location === 'global') {\n    baseURL = `https://aiplatform.googleapis.com/v1/projects/${projectId}/locations/global/publishers/mistralai/models/${modelId}:rawPredict`;\n  } else {\n    baseURL = `https://${location}-aiplatform.googleapis.com/v1/projects/${projectId}/locations/${location}/publishers/mistralai/models/${modelId}:rawPredict`;\n  }\n\n  const documentKey = documentType === 'image_url' ? 'image_url' : 'document_url';\n\n  const requestBody = {\n    model: modelId,\n    document: {\n      type: documentType,\n      [documentKey]: url,\n    },\n    include_image_base64: true,\n  };\n\n  logger.debug('Sending request to Google Vertex AI:', {\n    url: baseURL,\n    body: {\n      ...requestBody,\n      document: { ...requestBody.document, [documentKey]: 'base64_data_hidden' },\n    },\n  });\n\n  return axios\n    .post(baseURL, requestBody, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n        Accept: 'application/json',\n      },\n    })\n    .then((res) => {\n      logger.debug('Google Vertex AI response received');\n      return res.data;\n    })\n    .catch((error) => {\n      if (error.response?.data) {\n        logger.error('Vertex AI error response: ' + JSON.stringify(error.response.data, null, 2));\n      }\n      throw new Error(\n        logAxiosError({\n          error: error as AxiosError,\n          message: 'Error calling Google Vertex AI Mistral OCR',\n        }),\n      );\n    });\n}\n\n/**\n * Use Google Vertex AI Mistral OCR API to process the OCR result.\n *\n * @param params - The params object.\n * @param params.req - The request object from Express. It should have a `user` property with an `id`\n *                       representing the user\n * @param params.appConfig - Application configuration object\n * @param params.file - The file object, which is part of the request. The file object should\n *                                     have a `mimetype` property that tells us the file type\n * @param params.loadAuthValues - Function to load authentication values\n * @returns - The result object containing the processed `text` and `images` (not currently used),\n *                       along with the `filename` and `bytes` properties.\n */\nexport const uploadGoogleVertexMistralOCR = async (\n  context: OCRContext,\n): Promise<MistralOCRUploadResult> => {\n  try {\n    const { serviceAccount, accessToken } = await loadGoogleAuthConfig();\n    const model = getModelConfig(context.req.config?.ocr);\n\n    const buffer = fs.readFileSync(context.file.path);\n    const base64 = buffer.toString('base64');\n    const base64Prefix = `data:${context.file.mimetype || 'application/pdf'};base64,`;\n\n    const documentType = getDocumentType(context.file);\n    const ocrResult = await performGoogleVertexOCR({\n      url: `${base64Prefix}${base64}`,\n      accessToken,\n      projectId: serviceAccount.project_id!,\n      model,\n      documentType,\n    });\n\n    if (!ocrResult || !ocrResult.pages || ocrResult.pages.length === 0) {\n      throw new Error(\n        'No OCR result returned from service, may be down or the file is not supported.',\n      );\n    }\n\n    const { text, images } = processOCRResult(ocrResult);\n\n    return {\n      filename: context.file.originalname,\n      bytes: text.length * 4,\n      filepath: FileSources.vertexai_mistral_ocr as string,\n      text,\n      images,\n    };\n  } catch (error) {\n    throw createOCRError(error, 'Error uploading document to Google Vertex AI Mistral OCR:');\n  }\n};\n","import fs from 'fs';\nimport { logger } from '@librechat/data-schemas';\nimport type {\n  AudioProcessingResult,\n  ServerRequest,\n  AudioFileInfo,\n  STTService,\n  FileObject,\n} from '~/types';\n\n/**\n * Processes audio files using Speech-to-Text (STT) service.\n * @returns A promise that resolves to an object containing text and bytes.\n */\nexport async function processAudioFile({\n  req,\n  file,\n  sttService,\n}: {\n  req: ServerRequest;\n  file: FileObject;\n  sttService: STTService;\n}): Promise<AudioProcessingResult> {\n  try {\n    const audioBuffer = await fs.promises.readFile(file.path);\n    const audioFile: AudioFileInfo = {\n      originalname: file.originalname,\n      mimetype: file.mimetype,\n      size: file.size,\n    };\n\n    const [provider, sttSchema] = await sttService.getProviderSchema(req);\n    const text = await sttService.sttRequest(provider, sttSchema, { audioBuffer, audioFile });\n\n    return {\n      text,\n      bytes: Buffer.byteLength(text, 'utf8'),\n    };\n  } catch (error) {\n    logger.error('Error processing audio file with STT:', error);\n    throw new Error(`Failed to process audio file: ${(error as Error).message}`);\n  }\n}\n","import fs from 'fs';\nimport axios from 'axios';\nimport FormData from 'form-data';\nimport { logger } from '@librechat/data-schemas';\nimport { FileSources } from 'librechat-data-provider';\nimport type { Request as ServerRequest } from 'express';\nimport { generateShortLivedToken } from '~/crypto/jwt';\n\n/**\n * Attempts to parse text using RAG API, falls back to native text parsing\n * @param {Object} params - The parameters object\n * @param {Express.Request} params.req - The Express request object\n * @param {Express.Multer.File} params.file - The uploaded file\n * @param {string} params.file_id - The file ID\n * @returns {Promise<{text: string, bytes: number, source: string}>}\n */\nexport async function parseText({\n  req,\n  file,\n  file_id,\n}: {\n  req: Pick<ServerRequest, 'user'> & {\n    user?: { id: string };\n  };\n  file: Express.Multer.File;\n  file_id: string;\n}): Promise<{ text: string; bytes: number; source: string }> {\n  if (!process.env.RAG_API_URL) {\n    logger.debug('[parseText] RAG_API_URL not defined, falling back to native text parsing');\n    return parseTextNative(file);\n  }\n\n  if (!req.user?.id) {\n    logger.debug('[parseText] No user ID provided, falling back to native text parsing');\n    return parseTextNative(file);\n  }\n\n  try {\n    const healthResponse = await axios.get(`${process.env.RAG_API_URL}/health`, {\n      timeout: 5000,\n    });\n    if (healthResponse?.statusText !== 'OK' && healthResponse?.status !== 200) {\n      logger.debug('[parseText] RAG API health check failed, falling back to native parsing');\n      return parseTextNative(file);\n    }\n  } catch (healthError) {\n    logger.debug(\n      '[parseText] RAG API health check failed, falling back to native parsing',\n      healthError,\n    );\n    return parseTextNative(file);\n  }\n\n  try {\n    const jwtToken = generateShortLivedToken(req.user.id);\n    const formData = new FormData();\n    formData.append('file_id', file_id);\n    formData.append('file', fs.createReadStream(file.path));\n\n    const formHeaders = formData.getHeaders();\n\n    const response = await axios.post(`${process.env.RAG_API_URL}/text`, formData, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n        accept: 'application/json',\n        ...formHeaders,\n      },\n      timeout: 30000,\n    });\n\n    const responseData = response.data;\n    logger.debug('[parseText] Response from RAG API', responseData);\n\n    if (!('text' in responseData)) {\n      throw new Error('RAG API did not return parsed text');\n    }\n\n    return {\n      text: responseData.text,\n      bytes: Buffer.byteLength(responseData.text, 'utf8'),\n      source: FileSources.text,\n    };\n  } catch (error) {\n    logger.warn('[parseText] RAG API text parsing failed, falling back to native parsing', error);\n    return parseTextNative(file);\n  }\n}\n\n/**\n * Native JavaScript text parsing fallback\n * Simple text file reading - complex formats handled by RAG API\n * @param {Express.Multer.File} file - The uploaded file\n * @returns {{text: string, bytes: number, source: string}}\n */\nexport function parseTextNative(file: Express.Multer.File): {\n  text: string;\n  bytes: number;\n  source: string;\n} {\n  try {\n    const text = fs.readFileSync(file.path, 'utf8');\n    const bytes = Buffer.byteLength(text, 'utf8');\n\n    return {\n      text,\n      bytes,\n      source: FileSources.text,\n    };\n  } catch (error) {\n    console.error('[parseTextNative] Failed to parse file:', error);\n    throw new Error(`Failed to read file as text: ${error}`);\n  }\n}\n","import path from 'path';\nimport { URL } from 'url';\n\nconst imageExtensionRegex = /\\.(jpg|jpeg|png|gif|bmp|tiff|svg|webp)$/i;\n\n/**\n * Extracts the image basename from a given URL.\n *\n * @param urlString - The URL string from which the image basename is to be extracted.\n * @returns The basename of the image file from the URL.\n * Returns an empty string if the URL does not contain a valid image basename.\n */\nexport function getImageBasename(urlString: string) {\n  try {\n    const url = new URL(urlString);\n    const basename = path.basename(url.pathname);\n\n    return imageExtensionRegex.test(basename) ? basename : '';\n  } catch {\n    // If URL parsing fails, return an empty string\n    return '';\n  }\n}\n\n/**\n * Extracts the basename of a file from a given URL.\n *\n * @param urlString - The URL string from which the file basename is to be extracted.\n * @returns The basename of the file from the URL.\n * Returns an empty string if the URL parsing fails.\n */\nexport function getFileBasename(urlString: string) {\n  try {\n    const url = new URL(urlString);\n    return path.basename(url.pathname);\n  } catch {\n    // If URL parsing fails, return an empty string\n    return '';\n  }\n}\n","import { AuthType, Constants, EToolResources } from 'librechat-data-provider';\nimport type { TPlugin } from 'librechat-data-provider';\nimport type { MCPManager } from '~/mcp/MCPManager';\nimport { LCAvailableTools, LCFunctionTool } from '~/mcp/types';\n\n/**\n * Filters out duplicate plugins from the list of plugins.\n *\n * @param plugins The list of plugins to filter.\n * @returns The list of plugins with duplicates removed.\n */\nexport const filterUniquePlugins = (plugins?: TPlugin[]): TPlugin[] => {\n  const seen = new Set();\n  return (\n    plugins?.filter((plugin) => {\n      const duplicate = seen.has(plugin.pluginKey);\n      seen.add(plugin.pluginKey);\n      return !duplicate;\n    }) || []\n  );\n};\n\n/**\n * Determines if a plugin is authenticated by checking if all required authentication fields have non-empty values.\n * Supports alternate authentication fields, allowing validation against multiple possible environment variables.\n *\n * @param plugin The plugin object containing the authentication configuration.\n * @returns True if the plugin is authenticated for all required fields, false otherwise.\n */\nexport const checkPluginAuth = (plugin?: TPlugin): boolean => {\n  if (!plugin?.authConfig || plugin.authConfig.length === 0) {\n    return false;\n  }\n\n  return plugin.authConfig.every((authFieldObj) => {\n    const authFieldOptions = authFieldObj.authField.split('||');\n    let isFieldAuthenticated = false;\n\n    for (const fieldOption of authFieldOptions) {\n      const envValue = process.env[fieldOption];\n      if (envValue && envValue.trim() !== '' && envValue !== AuthType.USER_PROVIDED) {\n        isFieldAuthenticated = true;\n        break;\n      }\n    }\n\n    return isFieldAuthenticated;\n  });\n};\n\n/**\n * Converts MCP function format tool to plugin format\n * @param params\n * @param params.toolKey\n * @param params.toolData\n * @param params.customConfig\n * @returns\n */\nexport function convertMCPToolToPlugin({\n  toolKey,\n  toolData,\n  mcpManager,\n}: {\n  toolKey: string;\n  toolData: LCFunctionTool;\n  mcpManager?: MCPManager;\n}): TPlugin | undefined {\n  if (!toolData.function || !toolKey.includes(Constants.mcp_delimiter)) {\n    return;\n  }\n\n  const functionData = toolData.function;\n  const parts = toolKey.split(Constants.mcp_delimiter);\n  const serverName = parts[parts.length - 1];\n\n  const serverConfig = mcpManager?.getRawConfig(serverName);\n\n  const plugin: TPlugin = {\n    /** Tool name without server suffix */\n    name: parts[0],\n    pluginKey: toolKey,\n    description: functionData.description || '',\n    authenticated: true,\n    icon: serverConfig?.iconPath,\n  };\n\n  if (!serverConfig?.customUserVars) {\n    /** `authConfig` for MCP tools */\n    plugin.authConfig = [];\n    return plugin;\n  }\n\n  const customVarKeys = Object.keys(serverConfig.customUserVars);\n  if (customVarKeys.length === 0) {\n    plugin.authConfig = [];\n  } else {\n    plugin.authConfig = Object.entries(serverConfig.customUserVars).map(([key, value]) => ({\n      authField: key,\n      label: value.title || key,\n      description: value.description || '',\n    }));\n  }\n\n  return plugin;\n}\n\n/**\n * Converts MCP function format tools to plugin format\n * @param functionTools - Object with function format tools\n * @param customConfig - Custom configuration for MCP servers\n * @returns Array of plugin objects\n */\nexport function convertMCPToolsToPlugins({\n  functionTools,\n  mcpManager,\n}: {\n  functionTools?: LCAvailableTools;\n  mcpManager?: MCPManager;\n}): TPlugin[] | undefined {\n  if (!functionTools || typeof functionTools !== 'object') {\n    return;\n  }\n\n  const plugins: TPlugin[] = [];\n  for (const [toolKey, toolData] of Object.entries(functionTools)) {\n    const plugin = convertMCPToolToPlugin({ toolKey, toolData, mcpManager });\n    if (plugin) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\n/**\n * @param toolkits\n * @param toolName\n * @returns toolKey\n */\nexport function getToolkitKey({\n  toolkits,\n  toolName,\n}: {\n  toolkits: TPlugin[];\n  toolName?: string;\n}): string | undefined {\n  let toolkitKey: string | undefined;\n  if (!toolName) {\n    return toolkitKey;\n  }\n  for (const toolkit of toolkits) {\n    if (toolName.startsWith(EToolResources.image_edit)) {\n      const splitMatches = toolkit.pluginKey.split('_');\n      const suffix = splitMatches[splitMatches.length - 1];\n      if (toolName.endsWith(suffix)) {\n        toolkitKey = toolkit.pluginKey;\n        break;\n      }\n    }\n    if (toolName.startsWith(toolkit.pluginKey)) {\n      toolkitKey = toolkit.pluginKey;\n      break;\n    }\n  }\n  return toolkitKey;\n}\n","import { z } from 'zod';\n\n/** Default descriptions for image generation tool  */\nconst DEFAULT_IMAGE_GEN_DESCRIPTION =\n  `Generates high-quality, original images based solely on text, not using any uploaded reference images.\n\nWhen to use \\`image_gen_oai\\`:\n- To create entirely new images from detailed text descriptions that do NOT reference any image files.\n\nWhen NOT to use \\`image_gen_oai\\`:\n- If the user has uploaded any images and requests modifications, enhancements, or remixing based on those uploads → use \\`image_edit_oai\\` instead.\n\nGenerated image IDs will be returned in the response, so you can refer to them in future requests made to \\`image_edit_oai\\`.` as const;\n\nconst getImageGenDescription = () => {\n  return process.env.IMAGE_GEN_OAI_DESCRIPTION || DEFAULT_IMAGE_GEN_DESCRIPTION;\n};\n\n/** Default prompt descriptions  */\nconst DEFAULT_IMAGE_GEN_PROMPT_DESCRIPTION = `Describe the image you want in detail. \n      Be highly specific—break your idea into layers: \n      (1) main concept and subject,\n      (2) composition and position,\n      (3) lighting and mood,\n      (4) style, medium, or camera details,\n      (5) important features (age, expression, clothing, etc.),\n      (6) background.\n      Use positive, descriptive language and specify what should be included, not what to avoid. \n      List number and characteristics of people/objects, and mention style/technical requirements (e.g., \"DSLR photo, 85mm lens, golden hour\").\n      Do not reference any uploaded images—use for new image creation from text only.` as const;\n\nconst getImageGenPromptDescription = () => {\n  return process.env.IMAGE_GEN_OAI_PROMPT_DESCRIPTION || DEFAULT_IMAGE_GEN_PROMPT_DESCRIPTION;\n};\n\n/** Default description for image editing tool  */\nconst DEFAULT_IMAGE_EDIT_DESCRIPTION =\n  `Generates high-quality, original images based on text and one or more uploaded/referenced images.\n\nWhen to use \\`image_edit_oai\\`:\n- The user wants to modify, extend, or remix one **or more** uploaded images, either:\n- Previously generated, or in the current request (both to be included in the \\`image_ids\\` array).\n- Always when the user refers to uploaded images for editing, enhancement, remixing, style transfer, or combining elements.\n- Any current or existing images are to be used as visual guides.\n- If there are any files in the current request, they are more likely than not expected as references for image edit requests.\n\nWhen NOT to use \\`image_edit_oai\\`:\n- Brand-new generations that do not rely on an existing image → use \\`image_gen_oai\\` instead.\n\nBoth generated and referenced image IDs will be returned in the response, so you can refer to them in future requests made to \\`image_edit_oai\\`.\n`.trim();\n\nconst getImageEditDescription = () => {\n  return process.env.IMAGE_EDIT_OAI_DESCRIPTION || DEFAULT_IMAGE_EDIT_DESCRIPTION;\n};\n\nconst DEFAULT_IMAGE_EDIT_PROMPT_DESCRIPTION = `Describe the changes, enhancements, or new ideas to apply to the uploaded image(s).\n      Be highly specific—break your request into layers: \n      (1) main concept or transformation,\n      (2) specific edits/replacements or composition guidance,\n      (3) desired style, mood, or technique,\n      (4) features/items to keep, change, or add (such as objects, people, clothing, lighting, etc.).\n      Use positive, descriptive language and clarify what should be included or changed, not what to avoid.\n      Always base this prompt on the most recently uploaded reference images.`;\n\nconst getImageEditPromptDescription = () => {\n  return process.env.IMAGE_EDIT_OAI_PROMPT_DESCRIPTION || DEFAULT_IMAGE_EDIT_PROMPT_DESCRIPTION;\n};\n\nexport const oaiToolkit = {\n  image_gen_oai: {\n    name: 'image_gen_oai' as const,\n    description: getImageGenDescription(),\n    schema: z.object({\n      prompt: z.string().max(32000).describe(getImageGenPromptDescription()),\n      background: z\n        .enum(['transparent', 'opaque', 'auto'])\n        .optional()\n        .describe(\n          'Sets transparency for the background. Must be one of transparent, opaque or auto (default). When transparent, the output format should be png or webp.',\n        ),\n      /*\n        n: z\n          .number()\n          .int()\n          .min(1)\n          .max(10)\n          .optional()\n          .describe('The number of images to generate. Must be between 1 and 10.'),\n        output_compression: z\n          .number()\n          .int()\n          .min(0)\n          .max(100)\n          .optional()\n          .describe('The compression level (0-100%) for webp or jpeg formats. Defaults to 100.'),\n           */\n      quality: z\n        .enum(['auto', 'high', 'medium', 'low'])\n        .optional()\n        .describe('The quality of the image. One of auto (default), high, medium, or low.'),\n      size: z\n        .enum(['auto', '1024x1024', '1536x1024', '1024x1536'])\n        .optional()\n        .describe(\n          'The size of the generated image. One of 1024x1024, 1536x1024 (landscape), 1024x1536 (portrait), or auto (default).',\n        ),\n    }),\n    responseFormat: 'content_and_artifact' as const,\n  } as const,\n  image_edit_oai: {\n    name: 'image_edit_oai' as const,\n    description: getImageEditDescription(),\n    schema: z.object({\n      image_ids: z\n        .array(z.string())\n        .min(1)\n        .describe(\n          `\nIDs (image ID strings) of previously generated or uploaded images that should guide the edit.\n\nGuidelines:\n- If the user's request depends on any prior image(s), copy their image IDs into the \\`image_ids\\` array (in the same order the user refers to them).  \n- Never invent or hallucinate IDs; only use IDs that are still visible in the conversation context.\n- If no earlier image is relevant, omit the field entirely.\n`.trim(),\n        ),\n      prompt: z.string().max(32000).describe(getImageEditPromptDescription()),\n      /*\n        n: z\n          .number()\n          .int()\n          .min(1)\n          .max(10)\n          .optional()\n          .describe('The number of images to generate. Must be between 1 and 10. Defaults to 1.'),\n        */\n      quality: z\n        .enum(['auto', 'high', 'medium', 'low'])\n        .optional()\n        .describe(\n          'The quality of the image. One of auto (default), high, medium, or low. High/medium/low only supported for gpt-image-1.',\n        ),\n      size: z\n        .enum(['auto', '1024x1024', '1536x1024', '1024x1536', '256x256', '512x512'])\n        .optional()\n        .describe(\n          'The size of the generated images. For gpt-image-1: auto (default), 1024x1024, 1536x1024, 1024x1536. For dall-e-2: 256x256, 512x512, 1024x1024.',\n        ),\n    }),\n    responseFormat: 'content_and_artifact' as const,\n  },\n} as const;\n","import { z } from 'zod';\nexport const ytToolkit = {\n  youtube_search: {\n    name: 'youtube_search' as const,\n    description: `Search for YouTube videos by keyword or phrase.\n- Required: query (search terms to find videos)\n- Optional: maxResults (number of videos to return, 1-50, default: 5)\n- Returns: List of videos with titles, descriptions, and URLs\n- Use for: Finding specific videos, exploring content, research\nExample: query=\"cooking pasta tutorials\" maxResults=3` as const,\n    schema: z.object({\n      query: z.string().describe('Search query terms'),\n      maxResults: z.number().int().min(1).max(50).optional().describe('Number of results (1-50)'),\n    }),\n  },\n  youtube_info: {\n    name: 'youtube_info' as const,\n    description: `Get detailed metadata and statistics for a specific YouTube video.\n- Required: url (full YouTube URL or video ID)\n- Returns: Video title, description, view count, like count, comment count\n- Use for: Getting video metrics and basic metadata\n- DO NOT USE FOR VIDEO SUMMARIES, USE TRANSCRIPTS FOR COMPREHENSIVE ANALYSIS\n- Accepts both full URLs and video IDs\nExample: url=\"https://youtube.com/watch?v=abc123\" or url=\"abc123\"` as const,\n    schema: z.object({\n      url: z.string().describe('YouTube video URL or ID'),\n    }),\n  } as const,\n  youtube_comments: {\n    name: 'youtube_comments',\n    description: `Retrieve top-level comments from a YouTube video.\n- Required: url (full YouTube URL or video ID)\n- Optional: maxResults (number of comments, 1-50, default: 10)\n- Returns: Comment text, author names, like counts\n- Use for: Sentiment analysis, audience feedback, engagement review\nExample: url=\"abc123\" maxResults=20`,\n    schema: z.object({\n      url: z.string().describe('YouTube video URL or ID'),\n      maxResults: z\n        .number()\n        .int()\n        .min(1)\n        .max(50)\n        .optional()\n        .describe('Number of comments to retrieve'),\n    }),\n  } as const,\n  youtube_transcript: {\n    name: 'youtube_transcript',\n    description: `Fetch and parse the transcript/captions of a YouTube video.\n- Required: url (full YouTube URL or video ID)\n- Returns: Full video transcript as plain text\n- Use for: Content analysis, summarization, translation reference\n- This is the \"Go-to\" tool for analyzing actual video content\n- Attempts to fetch English first, then German, then any available language\nExample: url=\"https://youtube.com/watch?v=abc123\"`,\n    schema: z.object({\n      url: z.string().describe('YouTube video URL or ID'),\n    }),\n  } as const,\n} as const;\n","import type {\n  ScraperTypes,\n  RerankerTypes,\n  TCustomConfig,\n  SearchProviders,\n  TWebSearchConfig,\n} from 'librechat-data-provider';\nimport {\n  SearchCategories,\n  SafeSearchTypes,\n  extractVariableName,\n  AuthType,\n} from 'librechat-data-provider';\n\nexport function loadWebSearchConfig(\n  config: TCustomConfig['webSearch'],\n): TCustomConfig['webSearch'] {\n  const serperApiKey = config?.serperApiKey ?? '${SERPER_API_KEY}';\n  const searxngInstanceUrl = config?.searxngInstanceUrl ?? '${SEARXNG_INSTANCE_URL}';\n  const searxngApiKey = config?.searxngApiKey ?? '${SEARXNG_API_KEY}';\n  const firecrawlApiKey = config?.firecrawlApiKey ?? '${FIRECRAWL_API_KEY}';\n  const firecrawlApiUrl = config?.firecrawlApiUrl ?? '${FIRECRAWL_API_URL}';\n  const jinaApiKey = config?.jinaApiKey ?? '${JINA_API_KEY}';\n  const jinaApiUrl = config?.jinaApiUrl ?? '${JINA_API_URL}';\n  const cohereApiKey = config?.cohereApiKey ?? '${COHERE_API_KEY}';\n  const safeSearch = config?.safeSearch ?? SafeSearchTypes.MODERATE;\n\n  return {\n    ...config,\n    safeSearch,\n    jinaApiKey,\n    jinaApiUrl,\n    cohereApiKey,\n    serperApiKey,\n    searxngInstanceUrl,\n    searxngApiKey,\n    firecrawlApiKey,\n    firecrawlApiUrl,\n  };\n}\n\nexport type TWebSearchKeys =\n  | 'serperApiKey'\n  | 'searxngInstanceUrl'\n  | 'searxngApiKey'\n  | 'firecrawlApiKey'\n  | 'firecrawlApiUrl'\n  | 'jinaApiKey'\n  | 'jinaApiUrl'\n  | 'cohereApiKey';\n\nexport type TWebSearchCategories =\n  | SearchCategories.PROVIDERS\n  | SearchCategories.SCRAPERS\n  | SearchCategories.RERANKERS;\n\nexport const webSearchAuth = {\n  providers: {\n    serper: {\n      serperApiKey: 1 as const,\n    },\n    searxng: {\n      searxngInstanceUrl: 1 as const,\n      /** Optional (0) */\n      searxngApiKey: 0 as const,\n    },\n  },\n  scrapers: {\n    firecrawl: {\n      firecrawlApiKey: 1 as const,\n      /** Optional (0) */\n      firecrawlApiUrl: 0 as const,\n    },\n  },\n  rerankers: {\n    jina: {\n      jinaApiKey: 1 as const,\n      /** Optional (0) */\n      jinaApiUrl: 0 as const,\n    },\n    cohere: { cohereApiKey: 1 as const },\n  },\n};\n\n/**\n * Extracts all API keys from the webSearchAuth configuration object\n */\nexport function getWebSearchKeys(): TWebSearchKeys[] {\n  const keys: TWebSearchKeys[] = [];\n\n  // Iterate through each category (providers, scrapers, rerankers)\n  for (const category of Object.keys(webSearchAuth)) {\n    const categoryObj = webSearchAuth[category as TWebSearchCategories];\n\n    // Iterate through each service within the category\n    for (const service of Object.keys(categoryObj)) {\n      const serviceObj = categoryObj[service as keyof typeof categoryObj];\n\n      // Extract the API keys from the service\n      for (const key of Object.keys(serviceObj)) {\n        keys.push(key as TWebSearchKeys);\n      }\n    }\n  }\n\n  return keys;\n}\n\nexport const webSearchKeys: TWebSearchKeys[] = getWebSearchKeys();\n\nexport function extractWebSearchEnvVars({\n  keys,\n  config,\n}: {\n  keys: TWebSearchKeys[];\n  config: TCustomConfig['webSearch'] | undefined;\n}): string[] {\n  if (!config) {\n    return [];\n  }\n\n  const authFields: string[] = [];\n  const relevantKeys = keys.filter((k) => k in config);\n\n  for (const key of relevantKeys) {\n    const value = config[key];\n    if (typeof value === 'string') {\n      const varName = extractVariableName(value);\n      if (varName) {\n        authFields.push(varName);\n      }\n    }\n  }\n\n  return authFields;\n}\n\n/**\n * Type for web search authentication result\n */\nexport interface WebSearchAuthResult {\n  /** Whether all required categories have at least one authenticated service */\n  authenticated: boolean;\n  /** Authentication type (user_provided or system_defined) by category */\n  authTypes: [TWebSearchCategories, AuthType][];\n  /** Original authentication values mapped to their respective keys */\n  authResult: Partial<TWebSearchConfig>;\n}\n\n/**\n * Loads and verifies web search authentication values\n * @param params - Authentication parameters\n * @returns Authentication result\n */\nexport async function loadWebSearchAuth({\n  userId,\n  webSearchConfig,\n  loadAuthValues,\n  throwError = true,\n}: {\n  userId: string;\n  webSearchConfig: TCustomConfig['webSearch'];\n  loadAuthValues: (params: {\n    userId: string;\n    authFields: string[];\n    optional?: Set<string>;\n    throwError?: boolean;\n  }) => Promise<Record<string, string>>;\n  throwError?: boolean;\n}): Promise<WebSearchAuthResult> {\n  let authenticated = true;\n  const authResult: Partial<TWebSearchConfig> = {};\n\n  /** Type-safe iterator for the category-service combinations */\n  async function checkAuth<C extends TWebSearchCategories>(\n    category: C,\n  ): Promise<[boolean, boolean]> {\n    type ServiceType = keyof (typeof webSearchAuth)[C];\n    let isUserProvided = false;\n\n    // Check if a specific service is specified in the config\n    let specificService: ServiceType | undefined;\n    if (category === SearchCategories.PROVIDERS && webSearchConfig?.searchProvider) {\n      specificService = webSearchConfig.searchProvider as unknown as ServiceType;\n    } else if (category === SearchCategories.SCRAPERS && webSearchConfig?.scraperType) {\n      specificService = webSearchConfig.scraperType as unknown as ServiceType;\n    } else if (category === SearchCategories.RERANKERS && webSearchConfig?.rerankerType) {\n      specificService = webSearchConfig.rerankerType as unknown as ServiceType;\n    }\n\n    // If a specific service is specified, only check that one\n    const services = specificService\n      ? [specificService]\n      : (Object.keys(webSearchAuth[category]) as ServiceType[]);\n\n    for (const service of services) {\n      // Skip if the service doesn't exist in the webSearchAuth config\n      if (!webSearchAuth[category][service]) {\n        continue;\n      }\n\n      const serviceConfig = webSearchAuth[category][service];\n\n      // Split keys into required and optional\n      const requiredKeys: TWebSearchKeys[] = [];\n      const optionalKeys: TWebSearchKeys[] = [];\n\n      for (const key in serviceConfig) {\n        const typedKey = key as TWebSearchKeys;\n        if (serviceConfig[typedKey as keyof typeof serviceConfig] === 1) {\n          requiredKeys.push(typedKey);\n        } else if (serviceConfig[typedKey as keyof typeof serviceConfig] === 0) {\n          optionalKeys.push(typedKey);\n        }\n      }\n\n      if (requiredKeys.length === 0) continue;\n\n      const requiredAuthFields = extractWebSearchEnvVars({\n        keys: requiredKeys,\n        config: webSearchConfig,\n      });\n      const optionalAuthFields = extractWebSearchEnvVars({\n        keys: optionalKeys,\n        config: webSearchConfig,\n      });\n      if (requiredAuthFields.length !== requiredKeys.length) continue;\n\n      const allKeys = [...requiredKeys, ...optionalKeys];\n      const allAuthFields = [...requiredAuthFields, ...optionalAuthFields];\n      const optionalSet = new Set(optionalAuthFields);\n\n      try {\n        const authValues = await loadAuthValues({\n          userId,\n          authFields: allAuthFields,\n          optional: optionalSet,\n          throwError,\n        });\n\n        let allFieldsAuthenticated = true;\n        for (let j = 0; j < allAuthFields.length; j++) {\n          const field = allAuthFields[j];\n          const value = authValues[field];\n          const originalKey = allKeys[j];\n          if (originalKey) authResult[originalKey] = value;\n          if (!optionalSet.has(field) && !value) {\n            allFieldsAuthenticated = false;\n            break;\n          }\n          if (!isUserProvided && process.env[field] !== value) {\n            isUserProvided = true;\n          }\n        }\n\n        if (!allFieldsAuthenticated) {\n          continue;\n        }\n        if (category === SearchCategories.PROVIDERS) {\n          authResult.searchProvider = service as SearchProviders;\n        } else if (category === SearchCategories.SCRAPERS) {\n          authResult.scraperType = service as ScraperTypes;\n        } else if (category === SearchCategories.RERANKERS) {\n          authResult.rerankerType = service as RerankerTypes;\n        }\n        return [true, isUserProvided];\n      } catch {\n        continue;\n      }\n    }\n    return [false, isUserProvided];\n  }\n\n  const categories = [\n    SearchCategories.PROVIDERS,\n    SearchCategories.SCRAPERS,\n    SearchCategories.RERANKERS,\n  ] as const;\n  const authTypes: [TWebSearchCategories, AuthType][] = [];\n  for (const category of categories) {\n    const [isCategoryAuthenticated, isUserProvided] = await checkAuth(category);\n    if (!isCategoryAuthenticated) {\n      authenticated = false;\n      authTypes.push([category, AuthType.USER_PROVIDED]);\n      continue;\n    }\n    authTypes.push([category, isUserProvided ? AuthType.USER_PROVIDED : AuthType.SYSTEM_DEFINED]);\n  }\n\n  authResult.safeSearch = webSearchConfig?.safeSearch ?? SafeSearchTypes.MODERATE;\n  authResult.scraperTimeout =\n    webSearchConfig?.scraperTimeout ?? webSearchConfig?.firecrawlOptions?.timeout ?? 7500;\n  authResult.firecrawlOptions = webSearchConfig?.firecrawlOptions;\n\n  return {\n    authTypes,\n    authResult,\n    authenticated,\n  };\n}\n"],"names":["logger","axios","AuthType","Providers","extractEnvVariable","path","crypto","fetch","GraphEvents","sleep","fs","librechat","encodingForModel","getEncoding","EModelEndpoint","removeNullishValues","memorySchema","PermissionTypes","getConfigDefaults","SystemRoles","roleDefaults","Permissions","isArray","freeGlobal","global","require$$0","root","Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","objectToString","require$$1","require$$2","baseGetTag","isObjectLike","symbolTag","isSymbol","isKey","isObject","funcTag","isFunction","coreJsData","isMasked","funcProto","funcToString","toSource","require$$3","baseIsNative","getValue","getNative","nativeCreate","hashClear","hashDelete","HASH_UNDEFINED","hashGet","hashHas","hashSet","require$$4","Hash","listCacheClear","eq","assocIndexOf","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","Map","mapCacheClear","isKeyable","getMapData","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","memoize","memoizeCapped","stringToPath","arrayMap","symbolProto","baseToString","toString","castPath","toKey","baseGet","defineProperty","baseAssignValue","assignValue","MAX_SAFE_INTEGER","isIndex","baseSet","basePickBy","baseHasIn","argsTag","baseIsArguments","propertyIsEnumerable","isArguments","isLength","require$$5","hasPath","hasIn","basePick","arrayPush","isFlattenable","baseFlatten","flatten","apply","overRest","constant","identity","baseSetToString","shortOut","setToString","flatRest","discoverOAuthProtectedResourceMetadata","discoverAuthorizationServerMetadata","OAuthMetadataSchema","registerClient","startAuthorization","exchangeAuthorization","randomBytes","decrypt","mainModule","_a","_b","EventEmitter","Client","Agent","undiciFetch","StdioClientTransport","getDefaultEnvironment","WebSocketClientTransport","SSEClientTransport","StreamableHTTPClientTransport","ResourceListChangedNotificationSchema","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","setCacheAdd","setCacheHas","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalArrays","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","equalByTag","baseGetAllKeys","arrayFilter","stubArray","nativeGetSymbols","getSymbols","baseTimes","arrayTag","objectTag","weakMapTag","baseIsTypedArray","baseUnary","isTypedArray","isBuffer","arrayLikeKeys","isPrototype","overArg","nativeKeys","baseKeys","isArrayLike","keys","getAllKeys","equalObjects","DataView","Promise","Set","WeakMap","require$$6","getTag","require$$7","baseIsEqualDeep","baseIsEqual","baseIsMatch","isStrictComparable","getMatchData","matchesStrictComparable","baseMatches","get","baseMatchesProperty","baseProperty","basePropertyDeep","property","baseIteratee","getPrototype","getSymbolsIn","nativeKeysIn","baseKeysIn","keysIn","getAllKeysIn","createBaseFor","baseFor","baseForOwn","mapValues","pickBy","pick","McpError","ErrorCode","Tools","CallToolResultSchema","Constants","z","ContentTypes","TokenExchangeMethodEnum","Keyv","EndpointURLs","isAgentsEndpoint","ErrorTypes","agentsEndpointSchema","tool","Tokenizer","Run","GLOBAL_PROJECT_NAME","AccessRoleIds","ResourceType","PrincipalType","EToolResources","AgentCapabilities","KnownEndpoints","providerEndpointMap","ViolationTypes","SystemCategories","AuthKeys","googleSettings","anthropicSettings","ProxyAgent","getAnthropicLLMConfig","mapModelToAzureConfig","envVarRegex","extractVariableName","FileSources","url","URL","SafeSearchTypes","SearchCategories"],"mappings":"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","x_google_ignoreList":[7,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178]}